==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.648 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.013 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.913 seconds; current allocated memory: 0.348 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.461 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.91 seconds; current allocated memory: 0.348 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.629 seconds; current allocated memory: 0.555 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.636 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.557 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.008 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.398 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.172 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.168 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.475 seconds; current allocated memory: 0.492 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.479 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.079 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.102 seconds; current allocated memory: 92.383 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.875 seconds; current allocated memory: 94.500 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-241] Aggregating bram variable 'weight' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.577 seconds; current allocated memory: 95.602 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 95.602 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.175 seconds; current allocated memory: 101.445 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 103.531 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_5_1' (GIM_vectorized/matmul.cpp:5) in function 'matmul' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_5_1' (GIM_vectorized/matmul.cpp:5) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_7_2' (GIM_vectorized/matmul.cpp:7) in function 'matmul' completely with a factor of 4.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:18)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 125.684 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 128.352 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_5_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln8_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln8) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_5_1' (loop 'VITIS_LOOP_5_1'): Unable to schedule 'load' operation ('weight_load_3', GIM_vectorized/matmul.cpp:8) on array 'weight' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'weight'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 6, loop 'VITIS_LOOP_5_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.391 seconds; current allocated memory: 133.148 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.133 seconds; current allocated memory: 134.414 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.099 seconds; current allocated memory: 134.730 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.105 seconds; current allocated memory: 134.848 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_5_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_5_1' pipeline 'VITIS_LOOP_5_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_5_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.138 seconds; current allocated memory: 137.277 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.211 seconds; current allocated memory: 139.398 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.379 seconds; current allocated memory: 143.344 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.391 seconds; current allocated memory: 148.707 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 170.21 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 26.919 seconds; current allocated memory: 56.664 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.138 seconds; current allocated memory: 92.820 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.128 seconds; current allocated memory: 94.527 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/matmul.cpp:5:18) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.316 seconds; current allocated memory: 95.707 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 95.707 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.153 seconds; current allocated memory: 101.602 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 103.809 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_8_2' (GIM_vectorized/matmul.cpp:8) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_8_2' (GIM_vectorized/matmul.cpp:8) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_8_2' (GIM_vectorized/matmul.cpp:8) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_8_2' (GIM_vectorized/matmul.cpp:8) in function 'matmul' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.154 seconds; current allocated memory: 125.551 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.113 seconds; current allocated memory: 154.387 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_8_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln9) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_8_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'VITIS_LOOP_8_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.331 seconds; current allocated memory: 158.836 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.135 seconds; current allocated memory: 160.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_8_21' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln9) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_8_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'VITIS_LOOP_8_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.117 seconds; current allocated memory: 160.730 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.105 seconds; current allocated memory: 160.789 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_8_22' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln9) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_8_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'VITIS_LOOP_8_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.163 seconds; current allocated memory: 161.195 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.135 seconds; current allocated memory: 161.312 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_8_23' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln9) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_8_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 5, loop 'VITIS_LOOP_8_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.147 seconds; current allocated memory: 161.652 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.112 seconds; current allocated memory: 161.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.108 seconds; current allocated memory: 162.094 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.165 seconds; current allocated memory: 162.246 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_8_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_8_2' pipeline 'VITIS_LOOP_8_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_8_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.135 seconds; current allocated memory: 164.164 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_8_21' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_8_21' pipeline 'VITIS_LOOP_8_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_8_21'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.163 seconds; current allocated memory: 166.184 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_8_22' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_8_22' pipeline 'VITIS_LOOP_8_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_8_22'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 167.066 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_8_23' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_8_23' pipeline 'VITIS_LOOP_8_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_8_23'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.145 seconds; current allocated memory: 168.070 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 169.137 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.486 seconds; current allocated memory: 173.660 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.563 seconds; current allocated memory: 178.902 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 356.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 30.621 seconds; current allocated memory: 86.336 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 93.566 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
WARNING: [HLS 207-5575] '#pragma HLS unroll' can only be applied inside loop body (GIM_vectorized/matmul.cpp:4:9)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.806 seconds; current allocated memory: 95.496 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-241] Aggregating bram variable 'weight' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.948 seconds; current allocated memory: 96.797 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 96.797 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.035 seconds; current allocated memory: 102.586 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.039 seconds; current allocated memory: 105.023 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_5_1' (GIM_vectorized/matmul.cpp:5) in function 'matmul' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_5_1' (GIM_vectorized/matmul.cpp:5) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_8_2' (GIM_vectorized/matmul.cpp:8) in function 'matmul' completely with a factor of 4.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:18)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 127.547 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.029 seconds; current allocated memory: 129.965 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_5_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln9_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln9) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_5_1' (loop 'VITIS_LOOP_5_1'): Unable to schedule 'load' operation ('weight_load_3', GIM_vectorized/matmul.cpp:9) on array 'weight' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'weight'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 6, loop 'VITIS_LOOP_5_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.262 seconds; current allocated memory: 134.711 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.095 seconds; current allocated memory: 135.949 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 136.172 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.076 seconds; current allocated memory: 136.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_5_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_5_1' pipeline 'VITIS_LOOP_5_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_5_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.063 seconds; current allocated memory: 138.715 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 140.727 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 145.168 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.394 seconds; current allocated memory: 150.023 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 170.21 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.54 seconds; current allocated memory: 56.934 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.088 seconds; current allocated memory: 93.027 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.79 seconds; current allocated memory: 94.496 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_6_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:6:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_6_1' (GIM_vectorized/matmul.cpp:6:18) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.045 seconds; current allocated memory: 95.770 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 95.770 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 100.977 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.031 seconds; current allocated memory: 103.250 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:1)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 124.605 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.024 seconds; current allocated memory: 124.695 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_load_1', GIM_vectorized/matmul.cpp:10) on array 'weight' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'weight'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_load_7', GIM_vectorized/matmul.cpp:10) on array 'weight' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'weight'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_load_11', GIM_vectorized/matmul.cpp:10) on array 'weight' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'weight'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_load_15', GIM_vectorized/matmul.cpp:10) on array 'weight' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'weight'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_load_10', GIM_vectorized/matmul.cpp:10) on array 'weight' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'weight'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 8, Depth = 15, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.427 seconds; current allocated memory: 124.695 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 124.707 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 7 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.126 seconds; current allocated memory: 127.727 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.336 seconds; current allocated memory: 134.418 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.338 seconds; current allocated memory: 138.715 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-789] **** Estimated Fmax: 170.21 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 21.559 seconds; current allocated memory: 45.914 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 92.871 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.743 seconds; current allocated memory: 94.539 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.152 seconds; current allocated memory: 95.629 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 95.629 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 101.328 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.029 seconds; current allocated memory: 103.582 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:18)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.046 seconds; current allocated memory: 125.738 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.029 seconds; current allocated memory: 128.582 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_6_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_6_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_6_1' (loop 'VITIS_LOOP_6_1'): Unable to schedule 'load' operation ('weight_load_3', GIM_vectorized/matmul.cpp:11) on array 'weight' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'weight'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 6, loop 'VITIS_LOOP_6_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.236 seconds; current allocated memory: 133.238 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.092 seconds; current allocated memory: 134.520 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 134.867 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.076 seconds; current allocated memory: 135.008 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_6_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_6_1' pipeline 'VITIS_LOOP_6_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_6_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 137.379 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.178 seconds; current allocated memory: 139.324 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 143.551 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.388 seconds; current allocated memory: 148.527 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 170.21 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 21.579 seconds; current allocated memory: 55.941 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 98.715 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.938 seconds; current allocated memory: 100.301 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.153 seconds; current allocated memory: 101.488 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 101.488 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 107.352 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 109.707 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:18)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 131.348 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.028 seconds; current allocated memory: 134.445 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_6_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_6_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_6_1' (loop 'VITIS_LOOP_6_1'): Unable to schedule 'load' operation ('weight_load_3', GIM_vectorized/matmul.cpp:11) on array 'weight' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'weight'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 6, loop 'VITIS_LOOP_6_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.235 seconds; current allocated memory: 138.875 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.091 seconds; current allocated memory: 140.086 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.063 seconds; current allocated memory: 140.391 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 140.555 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_6_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_6_1' pipeline 'VITIS_LOOP_6_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_6_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 142.941 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.172 seconds; current allocated memory: 145.008 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 149.840 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.373 seconds; current allocated memory: 154.484 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 170.21 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 21.738 seconds; current allocated memory: 55.922 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 98.648 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
ERROR: [HLS 207-3776] use of undeclared identifier 'a' (GIM_vectorized/matmul.cpp:4:38)
WARNING: [HLS 207-5548] invalid variable expr  (GIM_vectorized/matmul.cpp:4:38)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 13.003 seconds; current allocated memory: 1.496 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 93.379 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.731 seconds; current allocated memory: 94.957 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_11_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:11:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'weight': Complete partitioning on dimension 1. (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_3' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_2' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_1' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_0' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.293 seconds; current allocated memory: 95.684 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 95.684 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.037 seconds; current allocated memory: 101.523 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.036 seconds; current allocated memory: 103.832 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:18)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.064 seconds; current allocated memory: 126.250 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.035 seconds; current allocated memory: 128.637 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_7_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_7_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 4, loop 'VITIS_LOOP_7_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 133.199 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.074 seconds; current allocated memory: 134.520 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.096 seconds; current allocated memory: 135.098 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.088 seconds; current allocated memory: 135.203 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_7_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_7_1' pipeline 'VITIS_LOOP_7_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_4_2_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_7_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.098 seconds; current allocated memory: 137.754 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.191 seconds; current allocated memory: 140.188 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.315 seconds; current allocated memory: 144.570 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.484 seconds; current allocated memory: 150.484 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 144.08 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 21.933 seconds; current allocated memory: 57.539 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.081 seconds; current allocated memory: 92.824 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.334 seconds; current allocated memory: 94.527 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_11_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:11:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
WARNING: [HLS 214-189] Pipeline directive for loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' has been removed because the loop is unrolled completely (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'weight': Complete partitioning on dimension 1. (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_3' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_2' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_1' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_0' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.285 seconds; current allocated memory: 95.750 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 95.750 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 101.715 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 103.801 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:18)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 126.438 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.038 seconds; current allocated memory: 128.875 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_7_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln13_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_7_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 4, loop 'VITIS_LOOP_7_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 133.391 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.094 seconds; current allocated memory: 134.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.093 seconds; current allocated memory: 135.262 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.089 seconds; current allocated memory: 135.492 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_7_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_7_1' pipeline 'VITIS_LOOP_7_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_4_2_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_7_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 137.914 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 140.008 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.329 seconds; current allocated memory: 145.188 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.629 seconds; current allocated memory: 150.449 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 144.08 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 22.731 seconds; current allocated memory: 57.875 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.091 seconds; current allocated memory: 93.332 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.64 seconds; current allocated memory: 95.066 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_11_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:11:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
WARNING: [HLS 214-189] Pipeline directive for loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' has been removed because the loop is unrolled completely (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'weight': Complete partitioning on dimension 1. (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_3' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_2' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_1' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_0' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.922 seconds; current allocated memory: 96.129 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.008 seconds; current allocated memory: 96.133 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.037 seconds; current allocated memory: 101.855 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 104.039 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:18)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 126.082 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 128.871 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_7_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln13_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_7_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 4, loop 'VITIS_LOOP_7_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.335 seconds; current allocated memory: 133.715 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 135.023 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.101 seconds; current allocated memory: 135.375 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.081 seconds; current allocated memory: 135.617 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_7_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_7_1' pipeline 'VITIS_LOOP_7_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_4_2_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_7_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.094 seconds; current allocated memory: 137.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 140.422 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.343 seconds; current allocated memory: 145.547 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.576 seconds; current allocated memory: 150.703 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 144.08 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 23.832 seconds; current allocated memory: 57.660 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 98.270 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.658 seconds; current allocated memory: 99.969 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_11_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:11:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'weight': Complete partitioning on dimension 1. (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_3' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_2' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_1' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_0' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.016 seconds; current allocated memory: 100.910 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 100.910 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 106.301 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 108.598 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:1)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 129.520 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.033 seconds; current allocated memory: 129.582 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln13_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln13_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln13_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln13_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_0_load_1', GIM_vectorized/matmul.cpp:13) on array 'weight_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'weight_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 6, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.366 seconds; current allocated memory: 129.582 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.099 seconds; current allocated memory: 129.582 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.164 seconds; current allocated memory: 132.105 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.302 seconds; current allocated memory: 138.324 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.452 seconds; current allocated memory: 143.773 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-789] **** Estimated Fmax: 170.21 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 21.362 seconds; current allocated memory: 45.750 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 34.94 seconds; current allocated memory: 11.328 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.312 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.099 seconds; current allocated memory: 93.070 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.433 seconds; current allocated memory: 94.535 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'weight': Complete partitioning on dimension 1. (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_19' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_18' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_17' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_16' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_15' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_14' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_13' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_12' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_11' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_10' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_9' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_8' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_7' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_6' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_5' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_4' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_3' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_2' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_1' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'weight_0' with compact=bit mode in 16-bits (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.025 seconds; current allocated memory: 96.031 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 96.031 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.329 seconds; current allocated memory: 105.277 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.103 seconds; current allocated memory: 107.516 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.687 seconds; current allocated memory: 134.727 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 134.816 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_0_load_1', GIM_vectorized/matmul.cpp:10) on array 'weight_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'weight_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_0_load_19', GIM_vectorized/matmul.cpp:10) on array 'weight_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'weight_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_0_load_2', GIM_vectorized/matmul.cpp:10) on array 'weight_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'weight_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_0_load_6', GIM_vectorized/matmul.cpp:10) on array 'weight_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'weight_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_0_load_16', GIM_vectorized/matmul.cpp:10) on array 'weight_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'weight_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('weight_0_load_5', GIM_vectorized/matmul.cpp:10) on array 'weight_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'weight_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 23, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 7.382 seconds; current allocated memory: 154.418 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.839 seconds; current allocated memory: 155.559 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/weight_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/input_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'matmul/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'matmul' to 'ap_ctrl_hs'.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 108 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.223 seconds; current allocated memory: 171.398 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.189 seconds; current allocated memory: 201.918 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.614 seconds; current allocated memory: 217.746 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for matmul.
INFO: [HLS 200-789] **** Estimated Fmax: 160.51 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 8 seconds. CPU system time: 1 seconds. Elapsed time: 38.286 seconds; current allocated memory: 124.898 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 35.961 seconds; current allocated memory: 12.184 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.235 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.894 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.818 seconds; current allocated memory: 0.398 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70tfbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.925 seconds; current allocated memory: 0.348 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name matmul matmul 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.727 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.835 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.679 seconds; current allocated memory: 0.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.814 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.643 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.755 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.396 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 106.219 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
WARNING: [HLS 200-1986] Could not apply TOP directive, invalid function, label, or variable (C:/GIM_HLS/GIM_vectorized/solution1/csynth.tcl:21)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.192 seconds; current allocated memory: 108.082 MB.
ERROR: [HLS 214-157] Top function not found: there is no function named 'array'
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.33 seconds; current allocated memory: 2.176 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.159 seconds; current allocated memory: 98.211 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.599 seconds; current allocated memory: 99.590 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.961 seconds; current allocated memory: 100.910 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.012 seconds; current allocated memory: 100.910 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.871 seconds; current allocated memory: 109.254 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.262 seconds; current allocated memory: 112.594 MB.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/array.cpp:4) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:6:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.069 seconds; current allocated memory: 136.359 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.87 seconds; current allocated memory: 153.469 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_4', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_14', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_17', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_11', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_1', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 17.46 seconds; current allocated memory: 174.379 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.369 seconds; current allocated memory: 175.586 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.015 seconds; current allocated memory: 175.727 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.424 seconds; current allocated memory: 175.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.464 seconds; current allocated memory: 175.859 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.808 seconds; current allocated memory: 176.473 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 110 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.6 seconds; current allocated memory: 193.945 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 4.608 seconds; current allocated memory: 224.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.246 seconds; current allocated memory: 224.254 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.7 seconds; current allocated memory: 229.359 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 4.693 seconds; current allocated memory: 246.508 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 145.60 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 16 seconds. CPU system time: 1 seconds. Elapsed time: 72.443 seconds; current allocated memory: 148.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.231 seconds; current allocated memory: 106.199 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.226 seconds; current allocated memory: 107.855 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_11_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:11:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/matmul.cpp:9:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 16.685 seconds; current allocated memory: 115.180 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 115.180 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.543 seconds; current allocated memory: 123.188 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.394 seconds; current allocated memory: 126.750 MB.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/array.cpp:4) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.946 seconds; current allocated memory: 154.445 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.103 seconds; current allocated memory: 178.852 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_4', GIM_vectorized/matmul.cpp:12) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_14', GIM_vectorized/matmul.cpp:12) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_17', GIM_vectorized/matmul.cpp:12) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load', GIM_vectorized/matmul.cpp:12) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_11', GIM_vectorized/matmul.cpp:12) on array 'in_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_1', GIM_vectorized/matmul.cpp:12) on array 'in_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 9.731 seconds; current allocated memory: 197.082 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.894 seconds; current allocated memory: 198.371 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.832 seconds; current allocated memory: 198.746 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 198.758 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.543 seconds; current allocated memory: 203.949 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.588 seconds; current allocated memory: 210.500 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul' is 6400 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 160 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.919 seconds; current allocated memory: 230.344 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.03 seconds; current allocated memory: 257.574 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 12.204 seconds; current allocated memory: 259.797 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.1 seconds; current allocated memory: 270.523 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 7.371 seconds; current allocated memory: 297.871 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 145.60 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 15 seconds. CPU system time: 1 seconds. Elapsed time: 83.928 seconds; current allocated memory: 192.785 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.146 seconds; current allocated memory: 92.875 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.157 seconds; current allocated memory: 94.758 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_5_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:5:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.36 seconds; current allocated memory: 96.375 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 96.375 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.369 seconds; current allocated memory: 104.547 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 107.676 MB.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/array.cpp:4) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:6:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.903 seconds; current allocated memory: 132.051 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.341 seconds; current allocated memory: 148.844 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_4', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_14', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_17', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_11', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_1', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 8.69 seconds; current allocated memory: 169.484 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.996 seconds; current allocated memory: 170.617 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_1', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_3', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_5', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_7', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_13', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_17', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'b'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 11, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.06 seconds; current allocated memory: 170.797 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.304 seconds; current allocated memory: 171.055 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [71]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [92]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.409 seconds; current allocated memory: 171.250 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.65 seconds; current allocated memory: 171.855 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 110 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.982 seconds; current allocated memory: 189.680 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.013 seconds; current allocated memory: 219.684 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.785 seconds; current allocated memory: 219.684 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.744 seconds; current allocated memory: 224.910 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.869 seconds; current allocated memory: 242.324 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 7 seconds. CPU system time: 1 seconds. Elapsed time: 49.099 seconds; current allocated memory: 149.539 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.096 seconds; current allocated memory: 96.551 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 23.234 seconds; current allocated memory: 98.527 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_5_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:5:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.464 seconds; current allocated memory: 100.020 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 100.020 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.689 seconds; current allocated memory: 108.367 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.228 seconds; current allocated memory: 111.645 MB.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/array.cpp:4) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:6:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.953 seconds; current allocated memory: 134.824 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.712 seconds; current allocated memory: 152.625 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_4', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_14', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_17', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_11', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_1', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 6 seconds. CPU system time: 1 seconds. Elapsed time: 16.875 seconds; current allocated memory: 173.094 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.06 seconds; current allocated memory: 174.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_1', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_3', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_5', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_7', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_13', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_17', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'b'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 11, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.06 seconds; current allocated memory: 175.184 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.316 seconds; current allocated memory: 175.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [71]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [92]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.404 seconds; current allocated memory: 175.398 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.589 seconds; current allocated memory: 176.238 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 110 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.077 seconds; current allocated memory: 193.484 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.928 seconds; current allocated memory: 223.758 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.748 seconds; current allocated memory: 223.758 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.739 seconds; current allocated memory: 228.582 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.951 seconds; current allocated memory: 246.051 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 13 seconds. CPU system time: 1 seconds. Elapsed time: 59.338 seconds; current allocated memory: 149.594 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.102 seconds; current allocated memory: 99.316 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.037 seconds; current allocated memory: 100.461 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_6_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:6:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_6_1' (GIM_vectorized/bias.cpp:6:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'res': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:4:11)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.576 seconds; current allocated memory: 102.199 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 102.199 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.303 seconds; current allocated memory: 110.570 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.141 seconds; current allocated memory: 114.031 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:6:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.796 seconds; current allocated memory: 137.789 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.301 seconds; current allocated memory: 155.281 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_4', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_14', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_17', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_11', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_1', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 8.756 seconds; current allocated memory: 175.719 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.98 seconds; current allocated memory: 176.988 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_1', GIM_vectorized/bias.cpp:8) on array 'b' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_3', GIM_vectorized/bias.cpp:8) on array 'b' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_5', GIM_vectorized/bias.cpp:8) on array 'b' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_7', GIM_vectorized/bias.cpp:8) on array 'b' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_13', GIM_vectorized/bias.cpp:8) on array 'b' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_17', GIM_vectorized/bias.cpp:8) on array 'b' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'b'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 11, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.079 seconds; current allocated memory: 177.559 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.268 seconds; current allocated memory: 177.602 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [71]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [92]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.355 seconds; current allocated memory: 178.160 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.529 seconds; current allocated memory: 178.766 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 110 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.712 seconds; current allocated memory: 196.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.928 seconds; current allocated memory: 226.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.924 seconds; current allocated memory: 226.727 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.987 seconds; current allocated memory: 230.879 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.185 seconds; current allocated memory: 249.172 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 7 seconds. CPU system time: 1 seconds. Elapsed time: 49.175 seconds; current allocated memory: 150.078 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.098 seconds; current allocated memory: 98.133 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.67 seconds; current allocated memory: 100.047 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-178] Inlining function 'bias(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'GIM_array(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [20], ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.991 seconds; current allocated memory: 101.586 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 101.586 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.531 seconds; current allocated memory: 110.457 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 113.766 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5) in function 'GIM_array' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.88 seconds; current allocated memory: 138.188 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.438 seconds; current allocated memory: 147.008 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_9', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_19', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_2', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_6', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_16', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_5', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 23, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 7.75 seconds; current allocated memory: 167.508 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.297 seconds; current allocated memory: 168.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_5_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.894 seconds; current allocated memory: 168.984 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.476 seconds; current allocated memory: 169.133 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 108 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.821 seconds; current allocated memory: 185.371 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [RTMG 210-278] Implementing memory 'GIM_array_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.578 seconds; current allocated memory: 216.262 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.948 seconds; current allocated memory: 217.492 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.979 seconds; current allocated memory: 234.426 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 160.51 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 13 seconds. CPU system time: 1 seconds. Elapsed time: 45.62 seconds; current allocated memory: 136.719 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.093 seconds; current allocated memory: 98.410 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 21.375 seconds; current allocated memory: 99.938 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.761 seconds; current allocated memory: 101.555 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 101.555 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.316 seconds; current allocated memory: 109.684 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.131 seconds; current allocated memory: 113.098 MB.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/array.cpp:4) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:5:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.855 seconds; current allocated memory: 136.793 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.362 seconds; current allocated memory: 154.125 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_4', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_14', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_17', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_11', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_1', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 7.369 seconds; current allocated memory: 174.824 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1 seconds; current allocated memory: 176.012 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.843 seconds; current allocated memory: 177.098 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 177.457 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 177.594 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.334 seconds; current allocated memory: 177.996 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 110 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.674 seconds; current allocated memory: 194.973 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.949 seconds; current allocated memory: 225.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.595 seconds; current allocated memory: 225.145 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.833 seconds; current allocated memory: 229.812 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.818 seconds; current allocated memory: 247.582 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 145.60 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 13 seconds. CPU system time: 1 seconds. Elapsed time: 43.961 seconds; current allocated memory: 149.258 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 98.445 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.371 seconds; current allocated memory: 100.383 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_5_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:5:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.57 seconds; current allocated memory: 102.113 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 102.113 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 110.281 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.108 seconds; current allocated memory: 113.793 MB.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/array.cpp:4) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:5:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.811 seconds; current allocated memory: 137.578 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 154.832 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_4', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_14', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_17', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_11', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_1', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 7.176 seconds; current allocated memory: 175.449 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.082 seconds; current allocated memory: 176.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_1', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_3', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_5', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_7', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_13', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_17', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'b'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 11, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.013 seconds; current allocated memory: 176.895 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 176.988 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [71]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [92]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.299 seconds; current allocated memory: 177.180 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.463 seconds; current allocated memory: 177.988 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 110 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.75 seconds; current allocated memory: 195.090 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.995 seconds; current allocated memory: 225.469 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.622 seconds; current allocated memory: 225.469 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.712 seconds; current allocated memory: 230.664 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.762 seconds; current allocated memory: 248.184 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 13 seconds. CPU system time: 1 seconds. Elapsed time: 42.778 seconds; current allocated memory: 150.059 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.087 seconds; current allocated memory: 98.020 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.488 seconds; current allocated memory: 99.801 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_5_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:5:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.862 seconds; current allocated memory: 101.316 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 101.316 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.307 seconds; current allocated memory: 109.672 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.095 seconds; current allocated memory: 112.832 MB.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/array.cpp:4) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:5:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.797 seconds; current allocated memory: 136.477 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.287 seconds; current allocated memory: 154.199 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_4', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_14', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_17', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_11', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_1', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 7.652 seconds; current allocated memory: 175.258 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.982 seconds; current allocated memory: 176.445 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_1', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_3', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_5', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_7', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_13', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'b'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b_load_17', GIM_vectorized/bias.cpp:7) on array 'b' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'b'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 11, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.028 seconds; current allocated memory: 176.539 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.219 seconds; current allocated memory: 176.547 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [71]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [92]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 176.602 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.421 seconds; current allocated memory: 177.375 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 110 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.684 seconds; current allocated memory: 195.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.918 seconds; current allocated memory: 225.875 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.705 seconds; current allocated memory: 225.875 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.907 seconds; current allocated memory: 230.020 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.939 seconds; current allocated memory: 248.137 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 13 seconds. CPU system time: 1 seconds. Elapsed time: 43.833 seconds; current allocated memory: 150.207 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 93.703 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.601 seconds; current allocated memory: 95.633 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-178] Inlining function 'bias(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'GIM_array(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [20], ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.946 seconds; current allocated memory: 97.105 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 97.105 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 105.621 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.086 seconds; current allocated memory: 108.996 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_5_1' (GIM_vectorized/bias.cpp:5) in function 'GIM_array' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.647 seconds; current allocated memory: 133.000 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.243 seconds; current allocated memory: 141.992 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_9', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_19', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_2', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_6', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_16', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_5', GIM_vectorized/matmul.cpp:10) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 23, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 6.519 seconds; current allocated memory: 162.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.799 seconds; current allocated memory: 164.023 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_5_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_5_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.709 seconds; current allocated memory: 164.219 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.336 seconds; current allocated memory: 164.547 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 108 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.655 seconds; current allocated memory: 180.855 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [RTMG 210-278] Implementing memory 'GIM_array_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.424 seconds; current allocated memory: 211.469 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.726 seconds; current allocated memory: 212.965 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.577 seconds; current allocated memory: 229.633 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 160.51 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 40.712 seconds; current allocated memory: 136.691 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 98.891 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.489 seconds; current allocated memory: 100.430 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-178] Inlining function 'bias(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'GIM_array(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [20], ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'in': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.997 seconds; current allocated memory: 102.148 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 102.148 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.269 seconds; current allocated memory: 110.969 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.109 seconds; current allocated memory: 114.191 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_6_1' (GIM_vectorized/bias.cpp:6) in function 'GIM_array' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:24)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.801 seconds; current allocated memory: 138.520 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.343 seconds; current allocated memory: 147.746 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_9', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_19', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_2', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_6', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_16', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_5', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 23, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 7.268 seconds; current allocated memory: 168.191 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.055 seconds; current allocated memory: 169.398 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_6_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_6_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.832 seconds; current allocated memory: 169.629 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.394 seconds; current allocated memory: 170.562 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 160 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.749 seconds; current allocated memory: 187.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [RTMG 210-278] Implementing memory 'GIM_array_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.677 seconds; current allocated memory: 218.852 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.818 seconds; current allocated memory: 220.520 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.977 seconds; current allocated memory: 238.148 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 160.51 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 12 seconds. CPU system time: 1 seconds. Elapsed time: 42.998 seconds; current allocated memory: 139.527 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.088 seconds; current allocated memory: 98.523 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.506 seconds; current allocated memory: 100.094 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-178] Inlining function 'bias(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'GIM_array(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [20], ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating bram variable 'w_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.518 seconds; current allocated memory: 101.715 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 101.715 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 110.520 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 113.785 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_6_1' (GIM_vectorized/bias.cpp:6) in function 'GIM_array' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.652 seconds; current allocated memory: 137.859 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.246 seconds; current allocated memory: 146.570 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_9', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_19', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_2', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_6', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_16', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'w_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w_0_load_5', GIM_vectorized/matmul.cpp:11) on array 'w_0' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'w_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 23, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 6.567 seconds; current allocated memory: 167.555 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.779 seconds; current allocated memory: 168.758 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_6_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_6_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.667 seconds; current allocated memory: 168.949 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.328 seconds; current allocated memory: 169.199 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 108 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.531 seconds; current allocated memory: 185.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [RTMG 210-278] Implementing memory 'GIM_array_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.036 seconds; current allocated memory: 216.387 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.675 seconds; current allocated memory: 217.523 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.505 seconds; current allocated memory: 234.504 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 160.51 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 10 seconds. CPU system time: 1 seconds. Elapsed time: 39.557 seconds; current allocated memory: 136.078 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.104 seconds; current allocated memory: 98.309 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.692 seconds; current allocated memory: 99.980 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/matmul.cpp:7:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_2' (GIM_vectorized/matmul.cpp:9:19) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-178] Inlining function 'bias(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'GIM_array(ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [20], ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 16, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 12.992 seconds; current allocated memory: 106.863 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 107.309 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 115.672 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.341 seconds; current allocated memory: 119.113 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_6_1' (GIM_vectorized/bias.cpp:6) in function 'GIM_array' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:3:10)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.119 seconds; current allocated memory: 146.812 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.931 seconds; current allocated memory: 162.535 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln10_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_9', GIM_vectorized/matmul.cpp:10) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_19', GIM_vectorized/matmul.cpp:10) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_2', GIM_vectorized/matmul.cpp:10) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_6', GIM_vectorized/matmul.cpp:10) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_16', GIM_vectorized/matmul.cpp:10) on array 'in_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_5', GIM_vectorized/matmul.cpp:10) on array 'in_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 23, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.112 seconds; current allocated memory: 180.746 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.761 seconds; current allocated memory: 181.969 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_6_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_6_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 1.783 seconds; current allocated memory: 187.395 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.602 seconds; current allocated memory: 195.066 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul' is 6400 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 160 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.823 seconds; current allocated memory: 213.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [RTMG 210-278] Implementing memory 'GIM_array_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 11.05 seconds; current allocated memory: 240.211 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.953 seconds; current allocated memory: 250.961 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 6.276 seconds; current allocated memory: 277.684 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 130.63 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 22 seconds. CPU system time: 1 seconds. Elapsed time: 68.239 seconds; current allocated memory: 180.957 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.862 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 4.329 seconds; current allocated memory: 0.348 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.899 seconds; current allocated memory: 0.512 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.396 seconds; current allocated memory: 0.293 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.846 seconds; current allocated memory: 0.309 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.848 seconds; current allocated memory: 0.312 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.755 seconds; current allocated memory: 0.305 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.856 seconds; current allocated memory: 0.344 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.933 seconds; current allocated memory: 0.340 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.822 seconds; current allocated memory: 0.320 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.496 seconds; current allocated memory: 0.461 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.644 seconds; current allocated memory: 0.555 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 98.820 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.772 seconds; current allocated memory: 99.992 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/bias.cpp:8:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'res': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:4:11)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'b': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 12.645 seconds; current allocated memory: 107.258 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 107.336 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.571 seconds; current allocated memory: 115.414 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.643 seconds; current allocated memory: 119.559 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:8:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.661 seconds; current allocated memory: 146.797 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.044 seconds; current allocated memory: 171.043 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_4', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_14', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_17', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_11', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_1', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.938 seconds; current allocated memory: 189.102 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.699 seconds; current allocated memory: 190.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_1_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_1', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_3_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_3', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_5_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_5', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_7_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_7', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_13_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_13', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_17_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_17', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 10, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.772 seconds; current allocated memory: 190.449 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.172 seconds; current allocated memory: 190.508 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [1668]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [1709]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.473 seconds; current allocated memory: 196.355 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.497 seconds; current allocated memory: 203.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul' is 6400 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 160 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.715 seconds; current allocated memory: 222.938 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.572 seconds; current allocated memory: 249.074 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.98 seconds; current allocated memory: 252.051 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.866 seconds; current allocated memory: 263.395 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 6.547 seconds; current allocated memory: 291.453 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 17 seconds. CPU system time: 1 seconds. Elapsed time: 68.88 seconds; current allocated memory: 193.672 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 91.965 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.049 seconds; current allocated memory: 94.133 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/bias.cpp:8:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'res': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:4:11)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'b': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 13.061 seconds; current allocated memory: 101.020 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 101.020 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.487 seconds; current allocated memory: 109.277 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.656 seconds; current allocated memory: 113.445 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:8:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.863 seconds; current allocated memory: 140.977 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.166 seconds; current allocated memory: 165.887 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_4', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_14', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_17', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_11', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_1', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.949 seconds; current allocated memory: 184.070 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.717 seconds; current allocated memory: 185.426 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_1_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_1', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_3_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_3', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_5_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_5', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_7_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_7', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_13_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_13', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_17_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_17', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 10, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.811 seconds; current allocated memory: 186.109 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 186.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [1668]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [1709]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.488 seconds; current allocated memory: 191.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.51 seconds; current allocated memory: 198.754 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul' is 6400 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 160 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.737 seconds; current allocated memory: 217.988 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.672 seconds; current allocated memory: 244.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.036 seconds; current allocated memory: 247.660 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.991 seconds; current allocated memory: 259.336 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 6.871 seconds; current allocated memory: 286.754 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 19 seconds. CPU system time: 1 seconds. Elapsed time: 71.564 seconds; current allocated memory: 196.141 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 99.613 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.512 seconds; current allocated memory: 101.039 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/bias.cpp:8:18) in function 'bias' completely with a factor of 20 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 20 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'res': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:4:11)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'b': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_19_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_18_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_17_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_16_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_15_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_14_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_13_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_12_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_11_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_10_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_9_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_8_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_7_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_6_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_5_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_4_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_19' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_18' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_17' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_16' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_15' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_14' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_13' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_12' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_11' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_10' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_9' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_8' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_7' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_6' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_5' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_4' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 12.492 seconds; current allocated memory: 108.141 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 108.156 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.481 seconds; current allocated memory: 116.555 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.64 seconds; current allocated memory: 120.227 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:8:8)...380 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.616 seconds; current allocated memory: 148.863 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.989 seconds; current allocated memory: 172.684 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_4', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_14', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_17', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_11', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_1', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 19, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.732 seconds; current allocated memory: 190.879 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.661 seconds; current allocated memory: 192.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_1_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_1', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_3_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_3', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_5_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_5', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_7_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_7', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_13_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_13', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 7). Please consider using a memory core with more ports or partitioning the array 'out_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'store' operation ('out_r_addr_17_write_ln10', GIM_vectorized/bias.cpp:10) of variable 'add_ln10_17', GIM_vectorized/bias.cpp:10 on array 'out_r' due to limited memory ports (II = 9). Please consider using a memory core with more ports or partitioning the array 'out_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 10, Depth = 10, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.77 seconds; current allocated memory: 192.270 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 192.270 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (9.781 ns) exceeds the target (target clock period: 10.000 ns, clock uncertainty: 2.700 ns, effective delay budget: 7.300 ns).
WARNING: [HLS 200-1016] The critical path in module 'GIM_array' consists of the following:
	'call' operation ('matmul_ret', GIM_vectorized/array.cpp:6) to 'matmul' [1668]  (6.868 ns)
	'call' operation ('_ln7', GIM_vectorized/array.cpp:7) to 'bias' [1709]  (2.913 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.527 seconds; current allocated memory: 197.852 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.491 seconds; current allocated memory: 205.059 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul' is 6400 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 240 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 160 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.675 seconds; current allocated memory: 224.008 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.53 seconds; current allocated memory: 250.754 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_4_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_5_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_6_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_7_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_8_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_9_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_10_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_11_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_12_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_13_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_14_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_15_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_16_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_17_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_18_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_19_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.087 seconds; current allocated memory: 253.875 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.848 seconds; current allocated memory: 264.539 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 6.371 seconds; current allocated memory: 292.961 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 102.24 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 18 seconds. CPU system time: 1 seconds. Elapsed time: 67.934 seconds; current allocated memory: 194.625 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.071 seconds; current allocated memory: 93.312 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.466 seconds; current allocated memory: 95.062 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_8_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:8:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_10_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:10:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 4 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_8_1' (GIM_vectorized/matmul.cpp:8:18) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_10_2' (GIM_vectorized/matmul.cpp:10:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'res': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:4:11)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'b': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.975 seconds; current allocated memory: 96.492 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.004 seconds; current allocated memory: 96.492 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.032 seconds; current allocated memory: 101.930 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 104.363 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:8:1)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 126.020 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 137.137 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln11_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_3', GIM_vectorized/matmul.cpp:11) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 6, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 141.789 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.095 seconds; current allocated memory: 143.082 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.093 seconds; current allocated memory: 143.438 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.045 seconds; current allocated memory: 143.531 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.065 seconds; current allocated memory: 144.078 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.084 seconds; current allocated memory: 144.527 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul' pipeline 'matmul' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.079 seconds; current allocated memory: 147.199 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.128 seconds; current allocated memory: 149.215 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.262 seconds; current allocated memory: 150.516 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.247 seconds; current allocated memory: 155.473 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.473 seconds; current allocated memory: 160.867 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 170.21 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 27.69 seconds; current allocated memory: 68.117 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.075 seconds; current allocated memory: 93.090 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.636 seconds; current allocated memory: 94.387 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_11_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:11:20)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 4 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/matmul.cpp:9:18) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_2' (GIM_vectorized/matmul.cpp:11:20) in function 'matmul' completely with a factor of 4 (GIM_vectorized/matmul.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'res': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:4:11)
INFO: [HLS 214-248] Applying array_partition to 'w': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'b': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'in': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_3_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_2_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_1_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_3' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_2' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_1' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 214-241] Aggregating scalar variable 'w_0_0' with compact=bit mode in 16-bits (GIM_vectorized/array.cpp:3:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.991 seconds; current allocated memory: 95.941 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 95.941 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 101.344 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.034 seconds; current allocated memory: 103.680 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'matmul' (GIM_vectorized/matmul.cpp:9:1)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.072 seconds; current allocated memory: 125.473 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.042 seconds; current allocated memory: 136.676 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'GIM_array' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln12_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=sum) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 4, function 'matmul'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.293 seconds; current allocated memory: 141.320 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.078 seconds; current allocated memory: 142.637 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.091 seconds; current allocated memory: 142.836 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 142.844 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 143.664 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 144.000 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_16_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 146.305 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.098 seconds; current allocated memory: 148.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'GIM_array' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_0_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_1_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_2_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/w_3_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/b_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/in_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'GIM_array/out_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'GIM_array' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'GIM_array'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.242 seconds; current allocated memory: 149.668 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.239 seconds; current allocated memory: 154.660 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 160.262 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for GIM_array.
INFO: [VLOG 209-307] Generating Verilog RTL for GIM_array.
INFO: [HLS 200-789] **** Estimated Fmax: 210.26 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 27.748 seconds; current allocated memory: 67.691 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.381 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.228 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.802 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.617 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.824 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.941 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.576 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.753 seconds; current allocated memory: 0.309 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.943 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.454 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.292 seconds; current allocated memory: 0.379 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 18.457 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.844 seconds; current allocated memory: 0.559 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.533 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.139 seconds; current allocated memory: 0.301 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.778 seconds; current allocated memory: 0.344 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.347 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.484 seconds; current allocated memory: 0.324 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.625 seconds; current allocated memory: 0.312 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.915 seconds; current allocated memory: 0.320 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.18 seconds; current allocated memory: 0.312 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.24 seconds; current allocated memory: 0.363 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.418 seconds; current allocated memory: 0.660 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.071 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.785 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 92.625 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:7:32)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/array.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
WARNING: [HLS 200-1986] Could not apply TOP directive, invalid function, label, or variable (C:/GIM_HLS/GIM_vectorized/solution1/directives.tcl:7)
WARNING: [HLS 200-1986] Could not apply TOP directive, invalid function, label, or variable (C:/GIM_HLS/GIM_vectorized/solution1/csynth.tcl:22)
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 41.977 seconds; current allocated memory: 98.488 MB.
ERROR: [HLS 214-157] Top function not found: there is no function named 'GIM_array'
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 44.455 seconds; current allocated memory: 6.184 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.315 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.972 seconds; current allocated memory: 0.293 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 13.597 seconds; current allocated memory: 0.504 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.969 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.858 seconds; current allocated memory: 0.375 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.491 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.68 seconds; current allocated memory: 0.426 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.012 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 36.796 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name GIM_array GIM_array 
INFO: [HLS 200-1510] Running: csim_design -clean -setup -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [HLS 200-2035] Skipping execution of C Simulation due to 'setup' option
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.314 seconds; current allocated memory: 0.371 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -setup -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.962 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -setup -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [HLS 200-2035] Skipping execution of C Simulation due to 'setup' option
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.671 seconds; current allocated memory: 0.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.711 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.991 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.368 seconds; current allocated memory: 0.590 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.598 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.557 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 21.424 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.553 seconds; current allocated memory: 0.578 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.974 seconds; current allocated memory: 0.504 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.684 seconds; current allocated memory: 0.523 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.209 seconds; current allocated memory: 0.426 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.215 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.087 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.204 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.496 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.319 seconds; current allocated memory: 0.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.216 seconds; current allocated memory: 0.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.591 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.246 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.407 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.609 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.048 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.684 seconds; current allocated memory: 0.477 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.78 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.802 seconds; current allocated memory: 0.508 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.675 seconds; current allocated memory: 0.582 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.061 seconds; current allocated memory: 0.707 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.608 seconds; current allocated memory: 0.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.119 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.912 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.27 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.64 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.724 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.192 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.596 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 16.093 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.354 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.223 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.07 seconds; current allocated memory: 0.469 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.752 seconds; current allocated memory: 0.559 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.028 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 29.858 seconds; current allocated memory: 0.484 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.178 seconds; current allocated memory: 0.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.661 seconds; current allocated memory: 0.355 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 13.959 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.716 seconds; current allocated memory: 0.363 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.283 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 7.689 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.763 seconds; current allocated memory: 0.492 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.101 seconds; current allocated memory: 92.469 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2759] cannot initialize a variable of type 'fixed_16 **' (aka 'ap_fixed<16, 10> **') with an rvalue of type 'fixed_16 (*)[4]' (GIM_vectorized/accelerator.cpp:13:16)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:38:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:57:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:61:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.238 seconds; current allocated memory: 1.621 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.097 seconds; current allocated memory: 98.238 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-4676] braces around scalar initializer (GIM_vectorized/accelerator.cpp:14:28)
ERROR: [HLS 207-3337] type 'af_bit_ref<16, 10, true, (ap_q_mode)5U, (ap_o_mode)3U, 0>' does not provide a subscript operator (GIM_vectorized/accelerator.cpp:20:33)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:39:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:58:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:62:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.517 seconds; current allocated memory: 0.699 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.098 seconds; current allocated memory: 94.484 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-4676] braces around scalar initializer (GIM_vectorized/accelerator.cpp:14:28)
ERROR: [HLS 207-3337] type 'af_bit_ref<16, 10, true, (ap_q_mode)5U, (ap_o_mode)3U, 0>' does not provide a subscript operator (GIM_vectorized/accelerator.cpp:21:33)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:40:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:59:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:63:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.605 seconds; current allocated memory: 0.676 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.109 seconds; current allocated memory: 98.863 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2759] cannot initialize a variable of type 'fixed_16 **' (aka 'ap_fixed<16, 10> **') with an rvalue of type 'fixed_16 (*)[4]' (GIM_vectorized/accelerator.cpp:13:16)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:40:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:59:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:63:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.575 seconds; current allocated memory: 0.691 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.117 seconds; current allocated memory: 98.758 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2095] array initializer must be an initializer list (GIM_vectorized/accelerator.cpp:13:15)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:40:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:59:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:63:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.086 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.119 seconds; current allocated memory: 92.594 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2095] array initializer must be an initializer list (GIM_vectorized/accelerator.cpp:13:15)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:40:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:59:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:63:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.506 seconds; current allocated memory: 0.922 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.108 seconds; current allocated memory: 94.289 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-1186] expected expression (GIM_vectorized/accelerator.cpp:13:49)
ERROR: [HLS 207-2759] cannot initialize a variable of type 'fixed_16 **' (aka 'ap_fixed<16, 10> **') with an rvalue of type 'fixed_16 *' (aka 'ap_fixed<16, 10> *') (GIM_vectorized/accelerator.cpp:13:16)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:39:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:58:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:62:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.596 seconds; current allocated memory: 0.848 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.109 seconds; current allocated memory: 92.984 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2759] cannot initialize a variable of type 'fixed_16 **' (aka 'ap_fixed<16, 10> **') with an rvalue of type 'fixed_16 (*)[4]' (GIM_vectorized/accelerator.cpp:13:16)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:39:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:58:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:62:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.638 seconds; current allocated memory: 1.426 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.097 seconds; current allocated memory: 98.148 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2759] cannot initialize a variable of type 'fixed_16 **' (aka 'ap_fixed<16, 10> **') with an rvalue of type 'fixed_16 (*)[4]' (GIM_vectorized/accelerator.cpp:13:16)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:39:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:58:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:62:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.536 seconds; current allocated memory: 0.816 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.103 seconds; current allocated memory: 97.980 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/accelerator.cpp:48:18)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:67:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:71:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.667 seconds; current allocated memory: 1.000 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.105 seconds; current allocated memory: 94.684 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:67:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:71:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.27 seconds; current allocated memory: 0.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.153 seconds; current allocated memory: 92.672 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3777] use of undeclared identifier 'num_row'; did you mean 'nothrow'? (GIM_vectorized/accelerator.h:18:29)
INFO: [HLS 207-4436] 'nothrow' declared here (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\new:93:26)
ERROR: [HLS 207-3776] use of undeclared identifier 'num_col' (GIM_vectorized/accelerator.h:18:38)
ERROR: [HLS 207-2103] size of array has non-integer type 'const std::nothrow_t' (GIM_vectorized/accelerator.h:18:29)
ERROR: [HLS 207-3777] use of undeclared identifier 'num_row'; did you mean 'nothrow'? (GIM_vectorized/accelerator.h:20:24)
ERROR: [HLS 207-3776] use of undeclared identifier 'num_col' (GIM_vectorized/accelerator.h:20:33)
ERROR: [HLS 207-2103] size of array has non-integer type 'const std::nothrow_t' (GIM_vectorized/accelerator.h:20:24)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.251 seconds; current allocated memory: 0.551 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.152 seconds; current allocated memory: 98.836 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:67:2)
INFO: [HLS 207-4378] candidate function not viable: no known conversion from 'fixed_16 (*)[4]' to 'fixed_16 **' (aka 'ap_fixed<16, 10> **') for 1st argument (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:71:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.748 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.119 seconds; current allocated memory: 95.406 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2916] C++ requires a type specifier for all declarations (GIM_vectorized/accelerator.h:18:37)
ERROR: [HLS 207-2916] C++ requires a type specifier for all declarations (GIM_vectorized/accelerator.h:20:32)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.686 seconds; current allocated memory: 0.680 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.119 seconds; current allocated memory: 98.203 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-2916] C++ requires a type specifier for all declarations (GIM_vectorized/accelerator.h:18:37)
ERROR: [HLS 207-2916] C++ requires a type specifier for all declarations (GIM_vectorized/accelerator.h:20:32)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.695 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.131 seconds; current allocated memory: 92.828 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:61:2)
INFO: [HLS 207-4373] candidate function not viable: requires 9 arguments, but 8 were provided (GIM_vectorized/accelerator.h:20:6)
ERROR: [HLS 207-3339] no matching function for call to 'layer' (GIM_vectorized/accelerator.cpp:65:2)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.599 seconds; current allocated memory: 0.793 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 97.902 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/activation.cpp:50:21)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 13.651 seconds; current allocated memory: 1.719 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.144 seconds; current allocated memory: 94.812 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/bias.cpp:12:21)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 41.337 seconds; current allocated memory: 5.746 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.132 seconds; current allocated memory: 98.109 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
ERROR: [HLS 207-3776] use of undeclared identifier 'weight' (GIM_vectorized/matmul.cpp:4:38)
WARNING: [HLS 207-5548] invalid variable expr  (GIM_vectorized/matmul.cpp:4:38)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 10>')) (GIM_vectorized/matmul.cpp:18:14)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 65.873 seconds; current allocated memory: 6.305 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.884 seconds; current allocated memory: 0.363 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.905 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.405 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.91 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.797 seconds; current allocated memory: 0.508 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.286 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 28.486 seconds; current allocated memory: 0.469 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 28.449 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.07 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.672 seconds; current allocated memory: 0.359 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 27.95 seconds; current allocated memory: 0.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.243 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.758 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 30.11 seconds; current allocated memory: 0.605 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 29.056 seconds; current allocated memory: 0.469 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 30.349 seconds; current allocated memory: 0.492 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.711 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.348 seconds; current allocated memory: 0.344 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.163 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.223 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.819 seconds; current allocated memory: 0.516 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 40.14 seconds; current allocated memory: 0.562 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.115 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.503 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.636 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.685 seconds; current allocated memory: 0.383 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.519 seconds; current allocated memory: 0.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.668 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.916 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.822 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.502 seconds; current allocated memory: 0.398 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.486 seconds; current allocated memory: 0.383 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.635 seconds; current allocated memory: 0.383 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.645 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.533 seconds; current allocated memory: 0.348 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.855 seconds; current allocated memory: 0.301 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.484 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 14.167 seconds; current allocated memory: 0.301 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 14.062 seconds; current allocated memory: 0.496 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.413 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.291 seconds; current allocated memory: 0.320 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.768 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.382 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.229 seconds; current allocated memory: 0.500 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.082 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.711 seconds; current allocated memory: 0.301 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.47 seconds; current allocated memory: 0.316 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.923 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.276 seconds; current allocated memory: 0.297 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 30.934 seconds; current allocated memory: 0.312 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.279 seconds; current allocated memory: 0.309 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.526 seconds; current allocated memory: 0.383 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 22.716 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.558 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.386 seconds; current allocated memory: 0.410 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.419 seconds; current allocated memory: 0.477 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.211 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.933 seconds; current allocated memory: 0.379 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.569 seconds; current allocated memory: 0.293 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 25.864 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 24.233 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.739 seconds; current allocated memory: 0.398 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.605 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.072 seconds; current allocated memory: 0.461 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.011 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.167 seconds; current allocated memory: 0.328 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.38 seconds; current allocated memory: 0.336 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.51 seconds; current allocated memory: 0.324 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.137 seconds; current allocated memory: 0.520 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.227 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.657 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.792 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.512 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.901 seconds; current allocated memory: 0.398 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.422 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.515 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 18.445 seconds; current allocated memory: 0.340 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.996 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 28.93 seconds; current allocated memory: 0.570 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 29.293 seconds; current allocated memory: 0.578 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.637 seconds; current allocated memory: 0.547 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.152 seconds; current allocated memory: 99.500 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 3>')) (GIM_vectorized/accelerator.cpp:68:22)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 3>')) (GIM_vectorized/accelerator.cpp:77:34)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.694 seconds; current allocated memory: 0.941 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.149 seconds; current allocated memory: 96.020 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 3>')) (GIM_vectorized/accelerator.cpp:68:22)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.56 seconds; current allocated memory: 0.793 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.104 seconds; current allocated memory: 98.781 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
ERROR: [HLS 207-3776] use of undeclared identifier 'weight' (GIM_vectorized/matmul.cpp:5:38)
WARNING: [HLS 207-5548] invalid variable expr  (GIM_vectorized/matmul.cpp:5:38)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 43.305 seconds; current allocated memory: 6.305 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 53.075 seconds; current allocated memory: 0.309 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.176 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.122 seconds; current allocated memory: 92.859 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 46.185 seconds; current allocated memory: 98.617 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_13_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:13:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_15_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:15:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_23_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:23:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_25_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:25:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_13_1' (GIM_vectorized/matmul.cpp:13:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_15_2' (GIM_vectorized/matmul.cpp:15:20) in function 'matmul' completely with a factor of 100 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_23_3' (GIM_vectorized/matmul.cpp:23:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_25_4' (GIM_vectorized/matmul.cpp:25:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
ERROR: [HLS 214-194] in function 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)': Undefined function operator new[] (GIM_vectorized/accelerator.cpp:39:29)
ERROR: [HLS 214-194] in function 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)': Undefined function operator new[] (GIM_vectorized/accelerator.cpp:47:29)
ERROR: [HLS 214-194] in function 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)': Undefined function operator new[] (GIM_vectorized/accelerator.cpp:51:29)
ERROR: [HLS 214-135] Syn check fail!
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 51.169 seconds; current allocated memory: 6.766 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.396 seconds; current allocated memory: 0.539 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.105 seconds; current allocated memory: 94.051 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 43.673 seconds; current allocated memory: 100.039 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_13_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:13:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_15_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:15:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_23_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:23:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_25_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:25:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_13_1' (GIM_vectorized/matmul.cpp:13:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_15_2' (GIM_vectorized/matmul.cpp:15:20) in function 'matmul' completely with a factor of 100 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_23_3' (GIM_vectorized/matmul.cpp:23:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_25_4' (GIM_vectorized/matmul.cpp:25:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.009 seconds; current allocated memory: 101.414 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 101.418 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.707 seconds; current allocated memory: 127.309 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:16: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:21: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.427 seconds; current allocated memory: 131.828 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_20_2' (GIM_vectorized/activation.cpp:20) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_20_1' (GIM_vectorized/layer.cpp:20) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_66_4' (GIM_vectorized/accelerator.cpp:66) in function 'accel' automatically.
INFO: [XFORM 203-102] Partitioning array 'vla2.i3' (GIM_vectorized/layer.cpp:8:2) automatically.
INFO: [XFORM 203-102] Partitioning array 'vla2.i' (GIM_vectorized/layer.cpp:8:2) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (GIM_vectorized/matmul.cpp:34:1) in function 'matmul'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:20:29) to (GIM_vectorized/activation.cpp:20:20) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.25 seconds; current allocated memory: 159.531 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.748 seconds; current allocated memory: 229.262 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln26_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_1', GIM_vectorized/matmul.cpp:16) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_2', GIM_vectorized/matmul.cpp:16) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w1_load_501', GIM_vectorized/matmul.cpp:16) on array 'w1' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w1_load_701', GIM_vectorized/matmul.cpp:16) on array 'w1' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w1_load_925', GIM_vectorized/matmul.cpp:16) on array 'w1' due to limited memory ports (II = 130). Please consider using a memory core with more ports or partitioning the array 'w1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w1_load_538', GIM_vectorized/matmul.cpp:16) on array 'w1' due to limited memory ports (II = 193). Please consider using a memory core with more ports or partitioning the array 'w1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w1_load_944', GIM_vectorized/matmul.cpp:16) on array 'w1' due to limited memory ports (II = 225). Please consider using a memory core with more ports or partitioning the array 'w1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w1_load_148', GIM_vectorized/matmul.cpp:16) on array 'w1' due to limited memory ports (II = 241). Please consider using a memory core with more ports or partitioning the array 'w1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('w1_load_749', GIM_vectorized/matmul.cpp:16) on array 'w1' due to limited memory ports (II = 249). Please consider using a memory core with more ports or partitioning the array 'w1'.
WARNI==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 16.187 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.111 seconds; current allocated memory: 95.203 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 44.048 seconds; current allocated memory: 101.461 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_16_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:16:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_18_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:18:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:26:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_28_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:28:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_16_1' (GIM_vectorized/matmul.cpp:16:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_18_2' (GIM_vectorized/matmul.cpp:18:20) in function 'matmul' completely with a factor of 100 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_3' (GIM_vectorized/matmul.cpp:26:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_28_4' (GIM_vectorized/matmul.cpp:28:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i5'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:14:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:14:2)
INFO: [HLS 214-248] Applying array_partition to 'layer_2_in': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:65:11)
ERROR: [HLS 214-384] in function 'matmul(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [100], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.10.51)': Cannot apply array transformation pragma/directive because of full array load/store. (GIM_vectorized/matmul.cpp:19:26)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 51.504 seconds; current allocated memory: 7.562 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.561 seconds; current allocated memory: 0.324 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 16.173 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.391 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.524 seconds; current allocated memory: 0.512 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.421 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.568 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.586 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.644 seconds; current allocated memory: 0.465 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 19.432 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.479 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.969 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.654 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.199 seconds; current allocated memory: 95.297 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 3>')) (GIM_vectorized/accelerator.cpp:77:34)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.205 seconds; current allocated memory: 0.527 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.693 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.128 seconds; current allocated memory: 94.312 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 40.421 seconds; current allocated memory: 100.879 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_15_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:15:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_17_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:17:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_25_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:25:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_27_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:27:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_15_1' (GIM_vectorized/matmul.cpp:15:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_17_2' (GIM_vectorized/matmul.cpp:17:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_25_3' (GIM_vectorized/matmul.cpp:25:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_27_4' (GIM_vectorized/matmul.cpp:27:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i5'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:14:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:14:2)
INFO: [HLS 214-248] Applying array_partition to 'layer_2_in': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:65:11)
ERROR: [HLS 214-384] in function 'matmul(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.10.51)': Cannot apply array transformation pragma/directive because of full array load/store. (GIM_vectorized/matmul.cpp:18:26)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 84.675 seconds; current allocated memory: 7.824 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.129 seconds; current allocated memory: 99.367 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3776] use of undeclared identifier 'input' (GIM_vectorized/accelerator.cpp:10:38)
WARNING: [HLS 207-5548] invalid variable expr  (GIM_vectorized/accelerator.cpp:10:38)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.372 seconds; current allocated memory: 1.000 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.426 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.122 seconds; current allocated memory: 94.117 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 40.826 seconds; current allocated memory: 100.164 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_12_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:12:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_14_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:14:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_22_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:22:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:24:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_22_3' (GIM_vectorized/matmul.cpp:22:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_4' (GIM_vectorized/matmul.cpp:24:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i5'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b1': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b2': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'in': Cyclic partitioning with factor 80 on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
ERROR: [HLS 214-384] in function 'matmul(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.10.74)': Cannot apply array transformation pragma/directive because of full array load/store. (GIM_vectorized/matmul.cpp:15:26)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 84.075 seconds; current allocated memory: 7.066 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.843 seconds; current allocated memory: 0.398 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 94.453 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 41.896 seconds; current allocated memory: 100.676 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_12_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:12:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_14_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:14:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:24:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:26:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i5'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b1': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b2': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'in': Cyclic partitioning with factor 80 on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
ERROR: [HLS 214-384] in function 'matmul(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.10.74)': Cannot apply array transformation pragma/directive because of full array load/store. (GIM_vectorized/matmul.cpp:16:23)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 91.3 seconds; current allocated memory: 7.414 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.233 seconds; current allocated memory: 93.387 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 49.343 seconds; current allocated memory: 100.180 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_12_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:12:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_14_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:14:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:24:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:26:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i5'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b1': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b2': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'in': Cyclic partitioning with factor 80 on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
ERROR: [HLS 214-384] in function 'matmul(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.10.74)': Cannot apply array transformation pragma/directive because of full array load/store. (GIM_vectorized/matmul.cpp:16:23)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 104.933 seconds; current allocated memory: 8.086 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 94.320 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 55.391 seconds; current allocated memory: 100.789 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_9_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:9:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_12_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:12:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_14_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:14:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:24:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:26:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (GIM_vectorized/bias.cpp:9:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i5'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i4'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i3'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla104.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:18:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla13.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'vla2.i'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/layer.cpp:16:2)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b1': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b2': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'in': Cyclic partitioning with factor 80 on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
ERROR: [HLS 214-384] in function 'matmul(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.10.74)': Cannot apply array transformation pragma/directive because of full array load/store. (GIM_vectorized/matmul.cpp:16:23)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 125.192 seconds; current allocated memory: 7.594 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.738 seconds; current allocated memory: 0.383 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.484 seconds; current allocated memory: 0.484 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.209 seconds; current allocated memory: 94.473 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 48.27 seconds; current allocated memory: 100.402 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_12_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:12:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_14_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:14:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:24:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:26:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b1': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b2': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'in': Cyclic partitioning with factor 80 on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
ERROR: [HLS 214-384] in function 'matmul(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*) (.10.75)': Cannot apply array transformation pragma/directive because of full array load/store. (GIM_vectorized/matmul.cpp:16:23)
ERROR: [HLS 200-1715] Encountered problem during source synthesis
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 99.26 seconds; current allocated memory: 6.793 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.176 seconds; current allocated memory: 94.512 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 51.407 seconds; current allocated memory: 100.777 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_12_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:12:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_14_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:14:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:24:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:26:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:11:9)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:69:9)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b1': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'b2': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'out': Complete partitioning on dimension 1. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2_1' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2_0' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_79' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_78' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_77' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_76' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_75' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_74' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_73' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_72' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_71' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_70' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_69' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_68' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_67' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_66' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_65' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_64' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_63' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_62' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_61' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_60' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_59' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_58' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_57' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_56' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_55' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_54' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_53' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_52' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_51' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_50' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_49' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_48' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_47' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_46' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_45' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_44' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_43' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_42' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_41' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_40' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 214-270] Inferring pragma 'array_partition type=complete dim=1' for array 'vla2.i' due to pipeline pragma (GIM_vectorized/layer.cpp:8:2)
INFO: [HLS 214-270] Inferring pragma 'array_partition type=complete dim=1' for array 'vla2.i3' due to pipeline pragma (GIM_vectorized/layer.cpp:8:2)
INFO: [HLS 214-270] Inferring pragma 'array_partition type=complete dim=1' for array 'vla14.i' due to pipeline pragma (GIM_vectorized/layer.cpp:9:2)
INFO: [HLS 214-270] Inferring pragma 'array_partition type=complete dim=1' for array 'vla14.i5' due to pipeline pragma (GIM_vectorized/layer.cpp:9:2)
INFO: [HLS 214-248] Applying array_partition to 'vla2.i3': Complete partitioning on dimension 1. (GIM_vectorized/layer.cpp:8:2)
INFO: [HLS 214-248] Applying array_partition to 'vla14.i5': Complete partitioning on dimension 1. (GIM_vectorized/layer.cpp:9:2)
INFO: [HLS 214-248] Applying array_partition to 'vla2.i': Complete partitioning on dimension 1. (GIM_vectorized/layer.cpp:8:2)
INFO: [HLS 214-248] Applying array_partition to 'vla14.i': Complete partitioning on dimension 1. (GIM_vectorized/layer.cpp:9:2)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 72.475 seconds; current allocated memory: 102.289 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.006 seconds; current allocated memory: 102.344 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.672 seconds; current allocated memory: 151.652 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:16: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:21: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.933 seconds; current allocated memory: 181.090 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_20_2' (GIM_vectorized/activation.cpp:20) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_20_1' (GIM_vectorized/layer.cpp:20) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_73_4' (GIM_vectorized/accelerator.cpp:73) in function 'accel' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (GIM_vectorized/matmul.cpp:35:1) in function 'matmul'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:20:29) to (GIM_vectorized/activation.cpp:20:20) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 9.778 seconds; current allocated memory: 234.988 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 11 seconds. CPU system time: 0 seconds. Elapsed time: 16.625 seconds; current allocated memory: 388.285 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3800) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3099) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3098) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3095) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3092) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3091) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3090) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3089) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3088) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3087) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3086) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3085) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3084) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3083) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3082) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3081) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3080) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3079) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3078) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3077) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3076) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3075) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3074) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3073) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3072) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3071) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3070) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3069) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3068) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3067) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3066) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3065) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3064) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3063) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3062) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3061) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3060) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3059) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3058) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3057) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3056) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3055) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3054) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3053) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3052) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3051) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3050) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3049) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3048) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3047) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3046) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3045) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3044) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3043) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3042) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3041) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3040) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3039) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3038) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3037) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3036) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3035) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3034) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3033) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3032) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3031) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3030) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3029) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3028) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3027) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3026) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3025) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3024) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3023) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3022) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3021) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3020) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3019) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3018) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3017) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3016) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3015) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3014) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3013) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3012) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3011) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3010) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3009) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3008) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3007) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3006) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3005) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3004) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3003) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3002) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3001) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3000) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2099) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2098) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2095) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2092) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2091) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2090) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2089) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2088) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2087) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2086) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2085) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2084) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2083) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2082) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2081) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2080) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2079) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2078) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2077) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2076) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2075) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2074) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2073) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2072) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2071) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2070) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2069) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2068) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2067) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2066) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2065) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2064) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2063) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2062) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2061) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2060) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2059) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2058) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2057) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2056) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2055) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2054) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2053) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2052) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2051) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2050) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2049) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2048) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2047) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2046) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2045) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2044) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2043) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2042) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2041) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2040) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2039) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2038) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2037) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2036) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2035) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2034) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2033) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2032) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2031) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2030) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2029) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2028) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2027) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2026) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2025) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2024) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2023) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2022) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2021) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2020) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2019) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2018) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2017) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2016) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2015) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2014) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2013) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2012) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2011) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2010) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2009) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2008) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2007) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2006) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2005) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2004) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2003) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2002) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2001) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1800) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1099) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1098) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1095) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1092) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1091) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1090) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1089) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1088) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1087) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1086) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1085) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1084) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1083) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1082) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1081) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1080) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1079) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1078) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1077) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1076) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1075) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1074) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1073) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1072) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1071) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1070) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1069) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1068) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1067) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1066) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1065) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1064) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1063) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1062) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1061) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1060) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1059) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1058) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1057) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1056) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1055) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1054) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1053) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1052) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1051) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1050) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1049) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1048) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1047) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1046) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1045) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1044) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1043) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1042) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1041) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1040) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1039) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1038) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1037) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1036) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1035) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1034) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1033) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1032) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1031) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1030) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1029) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1028) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1027) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1026) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1025) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1024) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1023) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1022) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1021) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1020) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1019) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1018) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1017) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1016) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1015) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1014) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1013) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1012) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1011) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1010) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1009) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1008) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1007) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1006) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1005) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1004) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1003) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1002) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1001) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1000) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Ch==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.261 seconds; current allocated memory: 94.324 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
ERROR: [HLS 207-5514] Variable length array is not supported (GIM_vectorized/layer.cpp:12:38)
ERROR: [HLS 207-5514] Variable length array is not supported (GIM_vectorized/layer.cpp:13:38)
ERROR: [HLS 207-5514] Variable length array is not supported (GIM_vectorized/layer.cpp:14:38)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 44.805 seconds; current allocated memory: 6.219 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 94.277 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
ERROR: [HLS 207-5514] Variable length array is not supported (GIM_vectorized/layer.cpp:12:38)
ERROR: [HLS 207-5514] Variable length array is not supported (GIM_vectorized/layer.cpp:13:38)
ERROR: [HLS 207-5514] Variable length array is not supported (GIM_vectorized/layer.cpp:14:38)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 44.168 seconds; current allocated memory: 6.508 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.268 seconds; current allocated memory: 99.398 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 53.967 seconds; current allocated memory: 105.898 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_12_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:12:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_14_2' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:14:20)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_24_3' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:24:19)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_26_4' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/matmul.cpp:26:21)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24:19) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26:21) in function 'matmul' completely with a factor of 10 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:11:9)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:67:9)
INFO: [HLS 214-248] Applying array_partition to 'res.i2': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:8:11)
INFO: [HLS 214-248] Applying array_partition to 'net.i3': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:9:11)
INFO: [HLS 214-248] Applying array_partition to 'final_out.i4': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:10:11)
INFO: [HLS 214-248] Applying array_partition to 'res.i': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:8:11)
INFO: [HLS 214-248] Applying array_partition to 'net.i': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:9:11)
INFO: [HLS 214-248] Applying array_partition to 'final_out.i': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:10:11)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2_1' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2_0' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_79' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_78' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_77' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_76' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_75' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_74' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_73' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_72' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_71' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_70' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_69' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_68' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_67' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_66' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_65' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_64' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_63' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_62' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_61' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_60' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_59' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_58' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_57' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_56' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_55' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_54' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_53' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_52' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_51' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_50' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_49' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_48' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_47' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_46' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_45' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_44' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_43' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_42' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_41' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_40' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 148.938 seconds; current allocated memory: 107.289 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 107.289 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.525 seconds; current allocated memory: 184.750 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:16: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:21: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.868 seconds; current allocated memory: 187.500 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_20_2' (GIM_vectorized/activation.cpp:20) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (GIM_vectorized/layer.cpp:21) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_71_4' (GIM_vectorized/accelerator.cpp:71) in function 'accel' automatically.
INFO: [XFORM 203-102] Partitioning array 'res' (GIM_vectorized/layer.cpp:8) automatically.
INFO: [XFORM 203-102] Partitioning array 'res.1' (GIM_vectorized/layer.cpp:8) automatically.
INFO: [XFORM 203-102] Partitioning array 'res.2' (GIM_vectorized/layer.cpp:8) automatically.
INFO: [XFORM 203-102] Partitioning array 'res.3' (GIM_vectorized/layer.cpp:8) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:20:29) to (GIM_vectorized/activation.cpp:22:11) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 9.492 seconds; current allocated memory: 237.840 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 12 seconds. CPU system time: 0 seconds. Elapsed time: 16.469 seconds; current allocated memory: 392.781 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3800) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3099) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3098) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3095) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3092) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3091) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3090) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3089) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3088) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3087) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3086) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3085) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3084) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3083) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3082) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3081) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3080) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3079) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3078) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3077) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3076) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3075) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3074) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3073) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3072) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3071) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3070) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3069) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3068) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3067) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3066) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3065) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3064) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3063) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3062) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3061) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3060) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3059) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3058) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3057) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3056) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3055) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3054) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3053) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3052) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3051) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3050) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3049) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3048) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3047) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3046) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3045) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3044) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3043) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3042) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3041) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3040) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3039) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3038) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3037) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3036) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3035) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3034) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3033) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3032) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3031) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3030) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3029) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3028) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3027) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3026) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3025) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3024) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3023) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3022) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3021) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3020) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3019) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3018) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3017) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3016) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3015) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3014) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3013) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3012) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3011) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3010) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3009) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3008) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3007) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3006) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3005) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3004) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3003) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3002) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3001) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3000) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2099) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2098) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2095) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2092) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2091) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2090) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2089) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2088) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2087) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2086) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2085) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2084) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2083) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2082) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2081) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2080) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2079) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2078) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2077) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2076) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2075) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2074) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2073) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2072) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2071) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2070) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2069) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2068) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2067) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2066) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2065) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2064) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2063) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2062) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2061) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2060) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2059) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2058) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2057) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2056) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2055) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2054) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2053) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2052) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2051) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2050) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2049) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2048) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2047) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2046) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2045) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2044) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2043) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2042) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2041) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2040) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2039) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2038) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2037) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2036) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2035) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2034) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2033) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2032) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2031) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2030) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2029) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2028) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2027) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2026) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2025) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2024) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2023) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2022) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2021) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2020) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2019) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2018) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2017) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2016) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2015) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2014) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2013) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2012) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2011) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2010) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2009) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2008) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2007) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2006) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2005) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2004) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2003) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2002) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2001) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1800) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1099) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1098) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1097) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1096) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1095) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1094) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1093) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1092) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1091) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1090) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1089) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1088) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1087) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1086) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1085) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1084) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1083) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1082) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1081) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1080) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1079) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1078) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1077) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1076) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1075) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1074) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1073) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1072) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1071) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1070) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1069) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1068) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1067) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1066) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1065) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1064) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1063) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1062) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1061) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1060) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1059) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1058) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1057) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1056) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1055) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1054) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1053) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1052) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1051) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1050) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1049) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1048) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1047) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1046) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1045) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1044) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1043) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1042) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1041) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1040) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1039) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1038) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1037) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1036) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1035) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1034) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1033) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1032) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1031) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1030) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1029) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1028) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1027) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1026) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1025) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1024) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1023) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1022) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1021) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1020) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1019) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1018) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1017) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1016) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1015) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1014) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1013) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1012) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1011) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1010) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1009) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1008) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1007) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1006) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1005) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1004) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1003) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1002) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1001) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1000) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_999) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_998) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_997) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_996) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_995) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_994) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_993) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_992) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_991) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_990) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_989) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_988) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_987) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_986) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_985) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_984) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_983) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_982) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_981) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_980) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_979) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_978) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_977) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_976) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_975) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_974) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_973) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_972) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_971) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_970) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_969) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_968) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_967) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_966) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_965) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_964) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_963) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_962) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_961) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_960) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_959) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_958) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_957) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_956) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_955) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_954) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_953) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_952) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_951) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_950) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_949) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_948) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_947) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_946) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_945) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_944) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_943) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_942) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_941) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_940) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_939) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_938) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_937) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_936) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_935) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_934) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_933) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_932) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_931) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_930) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_929) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_928) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_927) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_926) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_925) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_924) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_923) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_922) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_921) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_920) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_919) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_918) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_917) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_916) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_915) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_914) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_913) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_912) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_911) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_910) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_909) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_908) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_907) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_906) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_905) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_904) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_903) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_902) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_901) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_900) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_899) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_898) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_897) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_896) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_895) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_894) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_893) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_892) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_891) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_890) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_889) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_888) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_885) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_884) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_883) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_882) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_881) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_880) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_879) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_877) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_876) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_875) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_874) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_873) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_872) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_871) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_870) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_869) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_868) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_867) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_866) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_865) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_864) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_863) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_862) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_861) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_860) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_859) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_858) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_857) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_856) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_855) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_854) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_853) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_852) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_851) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_850) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_849) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_848) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_847) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_846) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_845) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_844) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_843) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_842) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_841) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_840) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_839) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_838) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_837) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_836) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_835) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_834) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_833) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_832) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_831) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_830) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_829) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_828) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_827) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_826) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_825) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_824) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_823) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_822) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_821) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_820) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_819) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_818) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_817) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_816) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_815) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_814) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_813) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_812) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_811) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_810) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_809) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_808) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_807) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_806) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_805) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_804) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_803) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_802) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_801) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_799) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_798) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_797) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_796) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_795) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_794) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_793) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_792) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_791) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_790) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_789) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_788) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_787) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_786) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_785) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_784) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_783) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_782) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_781) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_780) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_779) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_778) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_777) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_776) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_775) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_774) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_773) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_772) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_771) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_770) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_769) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_768) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_767) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_766) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_765) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_764) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_763) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_762) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_761) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_760) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_759) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_758) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_757) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_756) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_755) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_754) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_753) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_752) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_751) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_750) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_749) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_748) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_747) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_746) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_745) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_744) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_743) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_742) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_741) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_740) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_739) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_738) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_737) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_736) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_735) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_734) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_733) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_732) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_731) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_730) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_729) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_728) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_727) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_726) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_725) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_724) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_723) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_722) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_721) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_720) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_719) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_718) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_717) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_716) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_715) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_714) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_713) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_712) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_711) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_710) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_709) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_708) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_707) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_706) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_705) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_704) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_703) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_702) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_701) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_700) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_699) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_698) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_697) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_696) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_695) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_694) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_693) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_692) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_691) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_690) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_689) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_688) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_687) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_686) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_685) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_684) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_683) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_682) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_681) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_680) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_679) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_678) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_677) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_676) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_675) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_674) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_673) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_672) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_671) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_670) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_669) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_668) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_667) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_666) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_665) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_664) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_663) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_662) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_661) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_660) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_659) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_658) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_657) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_656) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_655) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_654) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_653) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_652) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_651) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_650) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_649) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_648) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_647) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_646) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_645) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_644) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_643) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_642) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_641) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_640) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_639) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_638) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_637) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_636) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_635) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_634) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_633) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_632) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_631) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_630) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_629) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_628) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_627) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_626) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_625) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_624) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_623) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_622) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_621) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_620) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_619) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_618) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_617) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_616) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_615) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_614) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_613) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_612) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_611) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_610) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_609) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_608) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_607) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_606) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_605) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_604) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_603) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_602) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_601) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_600) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_599) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_598) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_597) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_596) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_595) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_594) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_593) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_592) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_591) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_590) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_589) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_588) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_587) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_586) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_585) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_584) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_583) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_582) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_581) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_580) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_579) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_578) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_577) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_576) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_575) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_574) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_573) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_572) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_571) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_570) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_569) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_568) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_567) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_566) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_565) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_564) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_563) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_562) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_561) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_560) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_559) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_558) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_557) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_556) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_555) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_554) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_553) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_552) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_551) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_550) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_549) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_548) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_547) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_546) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_545) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_544) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_543) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_542) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_541) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_540) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_539) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_538) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_537) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_536) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_535) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_534) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_533) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_532) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_531) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_530) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_529) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_528) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_527) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_526) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_525) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_524) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_523) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_522) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_521) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_520) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_519) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_518) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_517) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_516) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_515) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_514) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_513) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_512) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_511) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_510) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_509) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_508) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_507) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_506) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_505) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_504) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_503) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_502) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_501) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_500) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_499) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_498) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_497) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_496) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_495) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_494) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_493) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_492) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_491) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_490) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_489) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_488) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_487) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_486) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_485) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_484) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_483) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_482) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_481) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_480) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_479) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_478) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_477) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_476) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_475) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_474) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_473) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining function 'matmul'.
WARNING: [HLS 200-885] The II Violation in module 'matmul' (function 'matmul'): Unable to schedule 'load' operation ('in_r_load_1', GIM_vectorized/matmul.cpp:16) on array 'in_r' due to limited memory ports==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 99.434 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 51.093 seconds; current allocated memory: 105.793 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:11:9)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:67:9)
INFO: [HLS 214-248] Applying array_partition to 'res.i2': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:8:11)
INFO: [HLS 214-248] Applying array_partition to 'net.i3': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:9:11)
INFO: [HLS 214-248] Applying array_partition to 'final_out.i4': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:10:11)
INFO: [HLS 214-248] Applying array_partition to 'res.i': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:8:11)
INFO: [HLS 214-248] Applying array_partition to 'net.i': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:9:11)
INFO: [HLS 214-248] Applying array_partition to 'final_out.i': Block partitioning with factor 2 on dimension 1. (GIM_vectorized/layer.cpp:10:11)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 80 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-248] Applying array_partition to 'w2': Block partitioning with factor 2 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2_1' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2_0' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_79' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_78' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_77' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_76' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_75' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_74' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_73' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_72' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_71' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_70' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_69' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_68' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_67' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_66' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_65' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_64' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_63' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_62' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_61' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_60' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_59' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_58' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_57' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_56' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_55' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_54' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_53' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_52' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_51' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_50' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_49' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_48' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_47' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_46' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_45' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_44' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_43' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_42' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_41' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_40' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.643 seconds; current allocated memory: 107.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 107.105 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.985 seconds; current allocated memory: 124.281 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:10: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:21: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.591 seconds; current allocated memory: 129.062 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_20_2' (GIM_vectorized/activation.cpp:20) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (GIM_vectorized/layer.cpp:21) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_71_4' (GIM_vectorized/accelerator.cpp:71) in function 'accel' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26) in function 'matmul' completely with a factor of 10.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:20:29) to (GIM_vectorized/activation.cpp:22:11) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.769 seconds; current allocated memory: 152.824 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.944 seconds; current allocated memory: 232.176 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_12_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_3', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 3, Depth = 403, loop 'VITIS_LOOP_12_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 13.88 seconds; current allocated memory: 265.898 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 5.785 seconds; current allocated memory: 271.773 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_3'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_0_load', GIM_vectorized/matmul.cpp:27) on array 'w2_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w2_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_0_load_3', GIM_vectorized/matmul.cpp:27) on array 'w2_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w2_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 3, Depth = 13, loop 'VITIS_LOOP_24_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.862 seconds; current allocated memory: 274.887 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 274.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.227 seconds; current allocated memory: 280.793 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.211 seconds; current allocated memory: 282.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b1_load_1', GIM_vectorized/bias.cpp:9) on array 'b1' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'b1'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b1_load_3', GIM_vectorized/bias.cpp:9) on array 'b1' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'b1'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b1_load_5', GIM_vectorized/bias.cpp:9) on array 'b1' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'b1'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('b1_load_7', GIM_vectorized/bias.cpp:9) on array 'b1' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'b1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 6, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.971 seconds; current allocated memory: 283.652 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.194 seconds; current allocated memory: 283.652 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 30, loop 'VITIS_LOOP_20_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.595 seconds; current allocated memory: 284.742 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.41 seconds; current allocated memory: 285.059 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_21_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 285.469 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 285.848 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_71_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_71_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.181 seconds; current allocated memory: 285.910 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.145 seconds; current allocated memory: 286.082 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.271 seconds; current allocated memory: 286.746 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.568 seconds; current allocated memory: 287.949 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_12_1' pipeline 'VITIS_LOOP_12_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul_Pipeline_VITIS_LOOP_12_1' is 167397 from HDL expression: ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 399 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_12_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 6.665 seconds; current allocated memory: 443.141 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_24_3' pipeline 'VITIS_LOOP_24_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 9 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_24_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.76 seconds; current allocated memory: 500.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.713 seconds; current allocated memory: 500.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.089 seconds; current allocated memory: 512.387 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation' pipeline 'VITIS_LOOP_20_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fdiv_32ns_32ns_32_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_2_1_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.484 seconds; current allocated memory: 512.387 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_21_1' pipeline 'VITIS_LOOP_21_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mux_2_1_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_21_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.544 seconds; current allocated memory: 514.562 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_71_4' pipeline 'VITIS_LOOP_71_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_71_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 516.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_20' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_21' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_22' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_23' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_24' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_25' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_26' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_27' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_28' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_29' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_30' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_31' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_32' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_33' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_34' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_35' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_36' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_37' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_38' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_39' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_40' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_41' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_42' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_43' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_44' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_45' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_46' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_47' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_48' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_49' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_50' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_51' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_52' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_53' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_54' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_55' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_56' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_57' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_58' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_59' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_60' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_61' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_62' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_63' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_64' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_65' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_66' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_67' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_68' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_69' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_70' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_71' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_72' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_73' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_74' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_75' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_76' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_77' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_78' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_79' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w2_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w2_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'accel' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel'.
INFO: [RTMG 210-278] Implementing memory 'accel_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_net_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_final_out_i4_0_RAM_AUTO_0R0W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_final_out_i_0_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_layer_1_out_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_layer_2_in_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.036 seconds; current allocated memory: 518.184 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.407 seconds; current allocated memory: 526.074 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 7 seconds. CPU system time: 1 seconds. Elapsed time: 11.409 seconds; current allocated memory: 557.914 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for accel.
INFO: [VLOG 209-307] Generating Verilog RTL for accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 137.22 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 37 seconds. CPU system time: 2 seconds. Elapsed time: 133.065 seconds; current allocated memory: 458.641 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.176 seconds; current allocated memory: 99.852 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 49.432 seconds; current allocated memory: 105.980 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:11:9)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 40 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.005 seconds; current allocated memory: 107.293 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.007 seconds; current allocated memory: 107.293 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.804 seconds; current allocated memory: 124.285 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:10: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:21: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.608 seconds; current allocated memory: 128.789 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_20_2' (GIM_vectorized/activation.cpp:20) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (GIM_vectorized/layer.cpp:21) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_71_4' (GIM_vectorized/accelerator.cpp:71) in function 'accel' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26) in function 'matmul' completely with a factor of 10.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:20:29) to (GIM_vectorized/activation.cpp:20:20) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.713 seconds; current allocated memory: 152.043 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.942 seconds; current allocated memory: 230.094 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_12_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_3', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_5', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_7', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 403, loop 'VITIS_LOOP_12_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 10 seconds. CPU system time: 0 seconds. Elapsed time: 24.844 seconds; current allocated memory: 263.512 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 12.199 seconds; current allocated memory: 268.383 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_3'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_3', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_5', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_7', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 13, loop 'VITIS_LOOP_24_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.17 seconds; current allocated memory: 271.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.662 seconds; current allocated memory: 271.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 3.585 seconds; current allocated memory: 276.648 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.361 seconds; current allocated memory: 278.812 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_1', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_3', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_5', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_7', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 6, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.008 seconds; current allocated memory: 279.625 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.349 seconds; current allocated memory: 279.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_20_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 30, loop 'VITIS_LOOP_20_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.035 seconds; current allocated memory: 280.719 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.885 seconds; current allocated memory: 280.746 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_21_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.428 seconds; current allocated memory: 280.961 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.217 seconds; current allocated memory: 280.980 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_71_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_71_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 281.141 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.217 seconds; current allocated memory: 281.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.432 seconds; current allocated memory: 281.789 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.887 seconds; current allocated memory: 282.660 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_12_1' pipeline 'VITIS_LOOP_12_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul_Pipeline_VITIS_LOOP_12_1' is 61924 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 399 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_12_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 11.75 seconds; current allocated memory: 385.703 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_24_3' pipeline 'VITIS_LOOP_24_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 9 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_24_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 11 seconds. CPU system time: 1 seconds. Elapsed time: 20.381 seconds; current allocated memory: 443.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.548 seconds; current allocated memory: 443.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.521 seconds; current allocated memory: 458.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation' pipeline 'VITIS_LOOP_20_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fdiv_32ns_32ns_32_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.691 seconds; current allocated memory: 458.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_21_1' pipeline 'VITIS_LOOP_21_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_21_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.033 seconds; current allocated memory: 460.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_71_4' pipeline 'VITIS_LOOP_71_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_71_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.372 seconds; current allocated memory: 461.906 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_20' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_21' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_22' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_23' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_24' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_25' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_26' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_27' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_28' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_29' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_30' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_31' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_32' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_33' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_34' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_35' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_36' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_37' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_38' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_39' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'accel' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel'.
INFO: [RTMG 210-278] Implementing memory 'accel_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_net_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_final_out_i4_RAM_AUTO_0R0W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_final_out_i_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.888 seconds; current allocated memory: 462.770 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 7.046 seconds; current allocated memory: 469.207 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 10 seconds. CPU system time: 0 seconds. Elapsed time: 14.31 seconds; current allocated memory: 492.602 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for accel.
INFO: [VLOG 209-307] Generating Verilog RTL for accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 137.22 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 73 seconds. CPU system time: 3 seconds. Elapsed time: 186.649 seconds; current allocated memory: 393.848 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.768 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.324 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.461 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.654 seconds; current allocated memory: 0.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.452 seconds; current allocated memory: 99.777 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 3>')) (GIM_vectorized/accelerator.cpp:82:34)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.722 seconds; current allocated memory: 1.324 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.168 seconds; current allocated memory: 96.145 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 49.53 seconds; current allocated memory: 101.988 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:11:9)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 40 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.016 seconds; current allocated memory: 103.129 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.003 seconds; current allocated memory: 103.141 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.589 seconds; current allocated memory: 120.336 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:10: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:22: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.397 seconds; current allocated memory: 125.352 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_9_1' (GIM_vectorized/activation.cpp:9) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (GIM_vectorized/activation.cpp:21) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_41_3' (GIM_vectorized/activation.cpp:41) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_4' (GIM_vectorized/activation.cpp:48) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_5' (GIM_vectorized/activation.cpp:54) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (GIM_vectorized/layer.cpp:21) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_71_4' (GIM_vectorized/accelerator.cpp:71) in function 'accel' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26) in function 'matmul' completely with a factor of 10.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:21:29) to (GIM_vectorized/activation.cpp:21:20) in function 'activation'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:47:16) to (GIM_vectorized/activation.cpp:48:24) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.198 seconds; current allocated memory: 148.949 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.68 seconds; current allocated memory: 271.102 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_12_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_3', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_5', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_7', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 403, loop 'VITIS_LOOP_12_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 23.461 seconds; current allocated memory: 305.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 14.694 seconds; current allocated memory: 309.336 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_3'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_3', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_5', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_7', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 13, loop 'VITIS_LOOP_24_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 4.427 seconds; current allocated memory: 312.648 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.574 seconds; current allocated memory: 312.680 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.798 seconds; current allocated memory: 318.398 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.351 seconds; current allocated memory: 319.703 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_1', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_3', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_5', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_7', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 6, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.089 seconds; current allocated memory: 320.914 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.387 seconds; current allocated memory: 320.918 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_41_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_41_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.38 seconds; current allocated memory: 321.191 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.23 seconds; current allocated memory: 321.438 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_48_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 15, loop 'VITIS_LOOP_48_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.918 seconds; current allocated memory: 322.086 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.547 seconds; current allocated memory: 322.613 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_54_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 34, loop 'VITIS_LOOP_54_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.631 seconds; current allocated memory: 322.754 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.935 seconds; current allocated memory: 322.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 30, loop 'VITIS_LOOP_21_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.116 seconds; current allocated memory: 323.816 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.947 seconds; current allocated memory: 323.820 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_9_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_9_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.457 seconds; current allocated memory: 324.234 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.241 seconds; current allocated memory: 324.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.284 seconds; current allocated memory: 324.449 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.413 seconds; current allocated memory: 324.590 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_21_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.388 seconds; current allocated memory: 324.840 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.258 seconds; current allocated memory: 324.988 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_71_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_71_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.285 seconds; current allocated memory: 325.148 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.243 seconds; current allocated memory: 325.266 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.423 seconds; current allocated memory: 325.473 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.943 seconds; current allocated memory: 326.637 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_12_1' pipeline 'VITIS_LOOP_12_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul_Pipeline_VITIS_LOOP_12_1' is 61924 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 399 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_12_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 10.63 seconds; current allocated memory: 429.676 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_24_3' pipeline 'VITIS_LOOP_24_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 9 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_24_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 19.131 seconds; current allocated memory: 487.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.625 seconds; current allocated memory: 487.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.473 seconds; current allocated memory: 501.852 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_41_3' pipeline 'VITIS_LOOP_41_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_41_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.454 seconds; current allocated memory: 501.852 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_48_4' pipeline 'VITIS_LOOP_48_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_48_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.498 seconds; current allocated memory: 502.129 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [HLS 200-2049] Adding the rewind optimization to the pipelined process 'VITIS_LOOP_54_5' with inout ports inside a dataflow region can result in the creation of loop-carried dependencies and errors. Use caution when adding the rewind optimization to such loops.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_54_5' pipeline 'VITIS_LOOP_54_5' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'sdiv_29ns_16s_16_33_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_54_5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.097 seconds; current allocated memory: 504.852 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_21_2' pipeline 'VITIS_LOOP_21_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fdiv_32ns_32ns_32_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_21_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.779 seconds; current allocated memory: 506.559 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_9_1' pipeline 'VITIS_LOOP_9_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_9_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.005 seconds; current allocated memory: 507.891 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.503 seconds; current allocated memory: 510.938 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_21_1' pipeline 'VITIS_LOOP_21_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_21_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.626 seconds; current allocated memory: 511.750 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_71_4' pipeline 'VITIS_LOOP_71_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_71_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.372 seconds; current allocated memory: 512.773 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_20' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_21' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_22' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_23' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_24' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_25' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_26' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_27' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_28' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_29' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_30' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_31' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_32' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_33' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_34' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_35' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_36' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_37' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_38' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_39' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'accel' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel'.
INFO: [RTMG 210-278] Implementing memory 'accel_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_net_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_final_out_i4_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_layer_1_out_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.511 seconds; current allocated memory: 513.375 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 7.349 seconds; current allocated memory: 519.629 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 15.141 seconds; current allocated memory: 544.555 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for accel.
INFO: [VLOG 209-307] Generating Verilog RTL for accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 137.22 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 58 seconds. CPU system time: 2 seconds. Elapsed time: 193.561 seconds; current allocated memory: 449.148 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-330] Aborting co-simulation: top function 'accel' is not invoked in the test bench.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 34.087 seconds; current allocated memory: 16.285 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.277 seconds; current allocated memory: 99.418 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 55.272 seconds; current allocated memory: 106.262 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:11:9)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 40 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.996 seconds; current allocated memory: 107.250 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.005 seconds; current allocated memory: 107.250 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.56 seconds; current allocated memory: 124.312 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:10: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:22: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.344 seconds; current allocated memory: 129.070 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_9_1' (GIM_vectorized/activation.cpp:9) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (GIM_vectorized/activation.cpp:21) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_41_3' (GIM_vectorized/activation.cpp:41) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_4' (GIM_vectorized/activation.cpp:48) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_5' (GIM_vectorized/activation.cpp:54) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (GIM_vectorized/layer.cpp:21) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_71_4' (GIM_vectorized/accelerator.cpp:71) in function 'accel' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26) in function 'matmul' completely with a factor of 10.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:21:29) to (GIM_vectorized/activation.cpp:21:20) in function 'activation'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:47:16) to (GIM_vectorized/activation.cpp:48:24) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.385 seconds; current allocated memory: 153.078 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.675 seconds; current allocated memory: 274.691 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_12_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_3', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_5', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_7', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 403, loop 'VITIS_LOOP_12_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 17.277 seconds; current allocated memory: 309.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.427 seconds; current allocated memory: 314.000 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_3'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_3', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_5', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_7', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 13, loop 'VITIS_LOOP_24_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.141 seconds; current allocated memory: 316.902 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.281 seconds; current allocated memory: 316.902 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.206 seconds; current allocated memory: 322.352 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.646 seconds; current allocated memory: 324.152 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_1', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_3', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_5', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_7', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 6, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.058 seconds; current allocated memory: 324.980 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 324.984 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_41_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_41_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.226 seconds; current allocated memory: 325.242 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 325.293 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_48_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 15, loop 'VITIS_LOOP_48_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.476 seconds; current allocated memory: 326.043 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.328 seconds; current allocated memory: 326.910 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_54_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 34, loop 'VITIS_LOOP_54_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.345 seconds; current allocated memory: 327.156 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.481 seconds; current allocated memory: 327.246 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 30, loop 'VITIS_LOOP_21_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.567 seconds; current allocated memory: 328.293 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.467 seconds; current allocated memory: 328.387 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_9_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_9_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.332 seconds; current allocated memory: 328.703 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 328.703 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.189 seconds; current allocated memory: 328.734 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.219 seconds; current allocated memory: 328.977 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_21_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.208 seconds; current allocated memory: 329.121 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.165 seconds; current allocated memory: 329.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_71_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_71_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.229 seconds; current allocated memory: 329.527 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.152 seconds; current allocated memory: 329.738 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 330.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.423 seconds; current allocated memory: 330.965 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_12_1' pipeline 'VITIS_LOOP_12_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul_Pipeline_VITIS_LOOP_12_1' is 61924 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 399 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_12_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.637 seconds; current allocated memory: 433.805 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_24_3' pipeline 'VITIS_LOOP_24_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 9 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_24_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 8.647 seconds; current allocated memory: 491.086 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.716 seconds; current allocated memory: 491.086 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.23 seconds; current allocated memory: 506.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_41_3' pipeline 'VITIS_LOOP_41_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_41_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.248 seconds; current allocated memory: 506.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_48_4' pipeline 'VITIS_LOOP_48_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_48_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.276 seconds; current allocated memory: 506.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [HLS 200-2049] Adding the rewind optimization to the pipelined process 'VITIS_LOOP_54_5' with inout ports inside a dataflow region can result in the creation of loop-carried dependencies and errors. Use caution when adding the rewind optimization to such loops.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_54_5' pipeline 'VITIS_LOOP_54_5' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'sdiv_29ns_16s_16_33_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_54_5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.557 seconds; current allocated memory: 509.023 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_21_2' pipeline 'VITIS_LOOP_21_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fdiv_32ns_32ns_32_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_21_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.446 seconds; current allocated memory: 510.652 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_9_1' pipeline 'VITIS_LOOP_9_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_9_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.523 seconds; current allocated memory: 512.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.324 seconds; current allocated memory: 515.434 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_21_1' pipeline 'VITIS_LOOP_21_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_21_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.464 seconds; current allocated memory: 516.480 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_71_4' pipeline 'VITIS_LOOP_71_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_71_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 517.242 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_20' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_21' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_22' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_23' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_24' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_25' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_26' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_27' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_28' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_29' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_30' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_31' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_32' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_33' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_34' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_35' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_36' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_37' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_38' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_39' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'accel' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel'.
INFO: [RTMG 210-278] Implementing memory 'accel_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_net_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_final_out_i4_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_layer_1_out_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.391 seconds; current allocated memory: 518.086 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.279 seconds; current allocated memory: 524.340 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 6.377 seconds; current allocated memory: 549.504 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for accel.
INFO: [VLOG 209-307] Generating Verilog RTL for accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 137.22 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 30 seconds. CPU system time: 2 seconds. Elapsed time: 137.486 seconds; current allocated memory: 450.957 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-330] Aborting co-simulation: top function 'accel' is not invoked in the test bench.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 34.398 seconds; current allocated memory: 15.980 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'bias1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'bias2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_1_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.251 seconds; current allocated memory: 100.320 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'out' (GIM_vectorized/accelerator.cpp:9:15)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 56.85 seconds; current allocated memory: 106.223 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 3, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:11:9)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 40 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.722 seconds; current allocated memory: 107.391 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.016 seconds; current allocated memory: 107.395 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.313 seconds; current allocated memory: 124.352 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:10: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:22: variable-indexed range selection may cause suboptimal QoR.
WARNING: [SYNCHK 200-77] The top function 'accel' (GIM_vectorized/accelerator.cpp:6) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 3 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.793 seconds; current allocated memory: 129.438 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_9_1' (GIM_vectorized/activation.cpp:9) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (GIM_vectorized/activation.cpp:21) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_41_3' (GIM_vectorized/activation.cpp:41) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_4' (GIM_vectorized/activation.cpp:48) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_5' (GIM_vectorized/activation.cpp:54) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (GIM_vectorized/layer.cpp:21) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_71_4' (GIM_vectorized/accelerator.cpp:71) in function 'accel' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26) in function 'matmul' completely with a factor of 10.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:21:29) to (GIM_vectorized/activation.cpp:21:20) in function 'activation'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:47:16) to (GIM_vectorized/activation.cpp:48:24) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.736 seconds; current allocated memory: 153.098 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.322 seconds; current allocated memory: 275.156 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_12_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_3', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_5', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_7', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 403, loop 'VITIS_LOOP_12_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 12 seconds. CPU system time: 1 seconds. Elapsed time: 27.655 seconds; current allocated memory: 308.867 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 6.112 seconds; current allocated memory: 313.164 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_3'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_3', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_5', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_7', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 13, loop 'VITIS_LOOP_24_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.041 seconds; current allocated memory: 316.230 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 316.230 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.308 seconds; current allocated memory: 321.723 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.42 seconds; current allocated memory: 323.598 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_1', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_3', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_5', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_7', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 6, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.92 seconds; current allocated memory: 324.422 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.303 seconds; current allocated memory: 324.473 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_41_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_41_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.222 seconds; current allocated memory: 324.605 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.143 seconds; current allocated memory: 324.688 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_48_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 15, loop 'VITIS_LOOP_48_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.42 seconds; current allocated memory: 326.000 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.298 seconds; current allocated memory: 326.348 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_54_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 34, loop 'VITIS_LOOP_54_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.322 seconds; current allocated memory: 326.527 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.422 seconds; current allocated memory: 326.609 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 30, loop 'VITIS_LOOP_21_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.506 seconds; current allocated memory: 327.426 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.422 seconds; current allocated memory: 327.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_9_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_9_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.249 seconds; current allocated memory: 327.812 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.147 seconds; current allocated memory: 327.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.162 seconds; current allocated memory: 327.996 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.203 seconds; current allocated memory: 328.262 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_21_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.218 seconds; current allocated memory: 328.711 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.147 seconds; current allocated memory: 328.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_71_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_71_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.202 seconds; current allocated memory: 328.910 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.151 seconds; current allocated memory: 328.910 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.224 seconds; current allocated memory: 329.438 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.426 seconds; current allocated memory: 330.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_12_1' pipeline 'VITIS_LOOP_12_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul_Pipeline_VITIS_LOOP_12_1' is 61924 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 399 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_12_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.442 seconds; current allocated memory: 433.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_24_3' pipeline 'VITIS_LOOP_24_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_29ns_29_4_1': 9 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_29_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_24_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.232 seconds; current allocated memory: 491.074 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.671 seconds; current allocated memory: 491.074 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.09 seconds; current allocated memory: 505.754 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_41_3' pipeline 'VITIS_LOOP_41_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_41_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.23 seconds; current allocated memory: 505.754 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_48_4' pipeline 'VITIS_LOOP_48_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_48_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.282 seconds; current allocated memory: 505.980 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [HLS 200-2049] Adding the rewind optimization to the pipelined process 'VITIS_LOOP_54_5' with inout ports inside a dataflow region can result in the creation of loop-carried dependencies and errors. Use caution when adding the rewind optimization to such loops.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_54_5' pipeline 'VITIS_LOOP_54_5' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'sdiv_29ns_16s_16_33_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_54_5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.515 seconds; current allocated memory: 508.406 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_21_2' pipeline 'VITIS_LOOP_21_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fdiv_32ns_32ns_32_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_21_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.426 seconds; current allocated memory: 510.203 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_9_1' pipeline 'VITIS_LOOP_9_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_9_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.475 seconds; current allocated memory: 512.277 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.262 seconds; current allocated memory: 514.441 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_21_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_21_1' pipeline 'VITIS_LOOP_21_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_21_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.339 seconds; current allocated memory: 515.742 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_71_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_71_4' pipeline 'VITIS_LOOP_71_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_71_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.209 seconds; current allocated memory: 516.766 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_20' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_21' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_22' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_23' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_24' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_25' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_26' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_27' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_28' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_29' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_30' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_31' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_32' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_33' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_34' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_35' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_36' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_37' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_38' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_39' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'accel' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d0' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'accel/out_r_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_address1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_we1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'accel/out_r_d1' to 0.
WARNING: [RTGEN 206-101] Port 'accel/out_r_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel'.
INFO: [RTMG 210-278] Implementing memory 'accel_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_net_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_final_out_i4_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_layer_1_out_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.252 seconds; current allocated memory: 517.578 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.037 seconds; current allocated memory: 524.250 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 6.064 seconds; current allocated memory: 549.051 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for accel.
INFO: [VLOG 209-307] Generating Verilog RTL for accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 137.22 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 45 seconds. CPU system time: 2 seconds. Elapsed time: 154.421 seconds; current allocated memory: 449.266 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: cosim_design -rtl vhdl 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-330] Aborting co-simulation: top function 'accel' is not invoked in the test bench.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 39.818 seconds; current allocated memory: 15.906 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.524 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.91 seconds; current allocated memory: 0.500 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.395 seconds; current allocated memory: 0.477 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.93 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.049 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 28.067 seconds; current allocated memory: 0.500 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.75 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.177 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.91 seconds; current allocated memory: 0.551 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.62 seconds; current allocated memory: 0.613 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.501 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.732 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.031 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.161 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 20.088 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'biases_layer1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'biases_layer2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'test_matrix.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'weights_layer1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'weights_layer2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 99.918 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
ERROR: [HLS 207-3325] use of overloaded operator '<<' is ambiguous (with operand types 'basic_ostream<char, std::char_traits<char> >' and 'fixed_16' (aka 'ap_fixed<16, 4>')) (GIM_vectorized/accelerator.cpp:82:34)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:166:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:170:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:174:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:178:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:181:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:189:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:192:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:201:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:205:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:220:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:224:7)
INFO: [HLS 207-4372] candidate function (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:232:7)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:508:5)
INFO: [HLS 207-4372] candidate function [with _CharT = char, _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:502:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:514:5)
INFO: [HLS 207-4372] candidate function [with _Traits = std::char_traits<char>] (C:/Xilinx/Vitis_HLS/2023.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\ostream:519:5)
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.637 seconds; current allocated memory: 0.977 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.119 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.152 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 19.663 seconds; current allocated memory: 0.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.644 seconds; current allocated memory: 0.504 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 20.124 seconds; current allocated memory: 0.488 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: nonzero return value.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.025 seconds; current allocated memory: 0.492 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.265 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.1 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.656 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 20.075 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.93 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.163 seconds; current allocated memory: 0.559 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.477 seconds; current allocated memory: 0.500 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.883 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.374 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.799 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.793 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 23.598 seconds; current allocated memory: 0.496 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.122 seconds; current allocated memory: 0.418 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 24.871 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 26.286 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.872 seconds; current allocated memory: 0.410 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 13.173 seconds; current allocated memory: 0.383 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 12.688 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 14.011 seconds; current allocated memory: 0.309 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.51 seconds; current allocated memory: 0.461 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.214 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 28.022 seconds; current allocated memory: 0.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.632 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.278 seconds; current allocated memory: 0.316 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 13.829 seconds; current allocated memory: 0.363 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.091 seconds; current allocated memory: 0.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.569 seconds; current allocated memory: 0.301 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.609 seconds; current allocated memory: 0.352 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 8.971 seconds; current allocated memory: 0.309 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 25.832 seconds; current allocated memory: 0.508 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.064 seconds; current allocated memory: 0.316 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.675 seconds; current allocated memory: 0.320 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.793 seconds; current allocated memory: 0.328 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.135 seconds; current allocated memory: 0.375 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.443 seconds; current allocated memory: 0.441 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.857 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.832 seconds; current allocated memory: 0.383 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 24.694 seconds; current allocated memory: 0.387 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.122 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.947 seconds; current allocated memory: 0.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.016 seconds; current allocated memory: 0.395 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.214 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 23.215 seconds; current allocated memory: 0.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 29.667 seconds; current allocated memory: 0.438 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.296 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.746 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 21.154 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 21.058 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 26.304 seconds; current allocated memory: 0.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 22.758 seconds; current allocated memory: 0.449 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.551 seconds; current allocated memory: 0.484 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.092 seconds; current allocated memory: 0.391 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.011 seconds; current allocated memory: 0.402 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.647 seconds; current allocated memory: 0.410 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.579 seconds; current allocated memory: 0.434 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.643 seconds; current allocated memory: 0.477 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 17.23 seconds; current allocated memory: 0.453 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 16.762 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.185 seconds; current allocated memory: 0.430 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.915 seconds; current allocated memory: 0.480 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 19.898 seconds; current allocated memory: 0.410 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 17.694 seconds; current allocated memory: 0.473 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.74 seconds; current allocated memory: 0.660 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 18.256 seconds; current allocated memory: 0.496 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-107] error deleting "csim/build": permission denied
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.129 seconds; current allocated memory: 0.121 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-107] error deleting "csim/build": permission denied
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.157 seconds; current allocated memory: 0.090 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-107] error deleting "csim/build": permission denied
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.123 seconds; current allocated memory: 0.098 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-107] error deleting "csim/build": permission denied
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.128 seconds; current allocated memory: 0.098 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
ERROR: [SIM 211-107] error deleting "csim/build": permission denied
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 0.109 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.583 seconds; current allocated memory: 0.629 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7k70t-fbv676-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1510] Running: set_part xc7k70t-fbv676-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csynth_design 
WARNING: [HLS 200-40] Skipped source file 'biases_layer1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'biases_layer2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_3_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'drawing_6_normalized.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_3.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_4.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_5.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_6.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_8.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'float_20_9.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'test_matrix(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'test_matrix.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'test_matrix0.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'test_matrix2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'test_matrix7.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1(1).csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'w1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'weights_layer1.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
WARNING: [HLS 200-40] Skipped source file 'weights_layer2.csv'. Source files must have extensions .c, .C, .cc, .cpp, .c++, .cp, or .cxx.
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 99.715 MB.
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/activation.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'alpha' (GIM_vectorized/activation.cpp:4:40)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/bias.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/data.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/error.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/layer.cpp' ... 
WARNING: [HLS 207-5292] unused parameter 'num_col' (GIM_vectorized/layer.cpp:4:61)
INFO: [HLS 200-10] Analyzing design file 'GIM_vectorized/matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 44.731 seconds; current allocated memory: 106.625 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'VITIS_LOOP_7_1' is marked as complete unroll implied by the pipeline pragma (GIM_vectorized/bias.cpp:7:18)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_7_1' (GIM_vectorized/bias.cpp:7:18) in function 'bias' completely with a factor of 10 (GIM_vectorized/bias.cpp:3:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_2' (GIM_vectorized/matmul.cpp:14:20) in function 'matmul' completely with a factor of 400 (GIM_vectorized/matmul.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'std::exp(float)' into 'activation(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>, char, int, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/activation.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'layer(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, char, int, int, int, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'accel(ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [400], ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0> (*) [10], ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*, ap_fixed<16, 5, (ap_q_mode)5, (ap_o_mode)3, 0>*)' (GIM_vectorized/accelerator.cpp:9:0)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'layer_2_in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:74:2)
WARNING: [HLS 214-253] Ignored unsupported array_partition pragma on variable 'in'. This can happen when applying a pragma on a function argument with mismatched array size w.r.t. its call site, or when providing a dim too deep on an array of insufficient dimension. (GIM_vectorized/accelerator.cpp:64:2)
INFO: [HLS 214-248] Applying array_partition to 'w1': Block partitioning with factor 40 on dimension 2. (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w2' with compact=bit mode in 16-bits (GIM_vectorized/accelerator.cpp:9:0)
INFO: [HLS 214-241] Aggregating bram variable 'w1_39' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_38' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_37' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_36' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_35' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_34' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_33' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_32' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_31' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_30' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_29' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_28' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_27' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_26' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_25' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_24' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_23' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_22' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_21' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_20' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_19' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_18' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_17' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_16' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_15' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_14' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_13' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_12' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_11' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_10' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_9' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_8' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_7' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_6' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_5' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_4' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_3' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_2' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_1' with compact=bit mode in 16-bits
INFO: [HLS 214-241] Aggregating bram variable 'w1_0' with compact=bit mode in 16-bits
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.325 seconds; current allocated memory: 107.863 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.009 seconds; current allocated memory: 107.863 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.638 seconds; current allocated memory: 125.004 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-62] GIM_vectorized/matmul.cpp:10: warning: out of bound array access on variable 'in_r'.
WARNING: [SYNCHK 200-23] GIM_vectorized/activation.cpp:22: variable-indexed range selection may cause suboptimal QoR.
INFO: [SYNCHK 200-10] 0 error(s), 2 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.365 seconds; current allocated memory: 129.762 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_12_1' (GIM_vectorized/matmul.cpp:12) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_9_1' (GIM_vectorized/activation.cpp:9) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (GIM_vectorized/activation.cpp:21) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_41_3' (GIM_vectorized/activation.cpp:41) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_4' (GIM_vectorized/activation.cpp:48) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_5' (GIM_vectorized/activation.cpp:54) in function 'activation' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (GIM_vectorized/layer.cpp:24) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_67_4' (GIM_vectorized/accelerator.cpp:67) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (GIM_vectorized/layer.cpp:24) in function 'accel' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_76_5' (GIM_vectorized/accelerator.cpp:76) in function 'accel' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_24_3' (GIM_vectorized/matmul.cpp:24) in function 'matmul' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_26_4' (GIM_vectorized/matmul.cpp:26) in function 'matmul' completely with a factor of 10.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:21:29) to (GIM_vectorized/activation.cpp:21:20) in function 'activation'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (GIM_vectorized/activation.cpp:47:16) to (GIM_vectorized/activation.cpp:48:24) in function 'activation'... converting 16 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.223 seconds; current allocated memory: 154.465 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.808 seconds; current allocated memory: 293.086 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accel' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln16_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_12_1'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_3', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_5', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_12_1' (loop 'VITIS_LOOP_12_1'): Unable to schedule 'load' operation ('w1_0_load_7', GIM_vectorized/matmul.cpp:16) on array 'w1_0' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w1_0'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 403, loop 'VITIS_LOOP_12_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 9 seconds. CPU system time: 0 seconds. Elapsed time: 13.266 seconds; current allocated memory: 327.273 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 5.767 seconds; current allocated memory: 331.527 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln27_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_3'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_3', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_5', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'w2'.
WARNING: [HLS 200-885] The II Violation in module 'matmul_Pipeline_VITIS_LOOP_24_3' (loop 'VITIS_LOOP_24_3'): Unable to schedule 'load' operation ('w2_load_7', GIM_vectorized/matmul.cpp:27) on array 'w2' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'w2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 13, loop 'VITIS_LOOP_24_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.733 seconds; current allocated memory: 334.547 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.27 seconds; current allocated memory: 334.547 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.141 seconds; current allocated memory: 340.305 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.091 seconds; current allocated memory: 342.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'bias'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_1', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_3', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 2). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_5', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 3). Please consider using a memory core with more ports or partitioning the array 'in_r'.
WARNING: [HLS 200-885] The II Violation in module 'bias' (function 'bias'): Unable to schedule 'load' operation ('in_load_7', GIM_vectorized/bias.cpp:9) on array 'in_r' due to limited memory ports (II = 4). Please consider using a memory core with more ports or partitioning the array 'in_r'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 5, Depth = 6, function 'bias'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.849 seconds; current allocated memory: 342.918 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.139 seconds; current allocated memory: 343.402 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_41_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_41_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.166 seconds; current allocated memory: 343.762 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 343.781 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_48_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 15, loop 'VITIS_LOOP_48_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.382 seconds; current allocated memory: 344.293 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.247 seconds; current allocated memory: 344.559 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_54_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 32, loop 'VITIS_LOOP_54_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.299 seconds; current allocated memory: 344.883 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.347 seconds; current allocated memory: 344.934 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 30, loop 'VITIS_LOOP_21_2'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.461 seconds; current allocated memory: 346.070 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.4 seconds; current allocated memory: 346.125 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_9_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_9_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 346.727 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.112 seconds; current allocated memory: 346.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 346.875 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 347.012 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.151 seconds; current allocated memory: 347.508 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.082 seconds; current allocated memory: 347.531 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_67_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_67_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_67_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.133 seconds; current allocated memory: 347.590 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.085 seconds; current allocated memory: 347.594 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_24_12' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.149 seconds; current allocated memory: 347.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 347.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel_Pipeline_VITIS_LOOP_76_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_76_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'VITIS_LOOP_76_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.108 seconds; current allocated memory: 348.016 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.087 seconds; current allocated memory: 348.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.193 seconds; current allocated memory: 348.277 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.43 seconds; current allocated memory: 349.547 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_12_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_12_1' pipeline 'VITIS_LOOP_12_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'matmul_Pipeline_VITIS_LOOP_12_1' is 61124 from HDL expression: ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 399 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_27_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_12_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 4.389 seconds; current allocated memory: 452.305 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul_Pipeline_VITIS_LOOP_24_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'matmul_Pipeline_VITIS_LOOP_24_3' pipeline 'VITIS_LOOP_24_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_27ns_27_4_1': 9 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16s_16s_27_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul_Pipeline_VITIS_LOOP_24_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 8.042 seconds; current allocated memory: 511.508 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.612 seconds; current allocated memory: 511.508 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'bias' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'bias' pipeline 'bias' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'bias'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.016 seconds; current allocated memory: 524.781 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_41_3' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_41_3' pipeline 'VITIS_LOOP_41_3' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_41_3'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.201 seconds; current allocated memory: 524.781 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_48_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_48_4' pipeline 'VITIS_LOOP_48_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_48_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.193 seconds; current allocated memory: 525.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_54_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [HLS 200-2049] Adding the rewind optimization to the pipelined process 'VITIS_LOOP_54_5' with inout ports inside a dataflow region can result in the creation of loop-carried dependencies and errors. Use caution when adding the rewind optimization to such loops.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_54_5' pipeline 'VITIS_LOOP_54_5' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'sdiv_27ns_16s_16_31_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_54_5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.478 seconds; current allocated memory: 527.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_21_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_21_2' pipeline 'VITIS_LOOP_21_2' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fdiv_32ns_32ns_32_10_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_21_2'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.341 seconds; current allocated memory: 529.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation_Pipeline_VITIS_LOOP_9_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'activation_Pipeline_VITIS_LOOP_9_1' pipeline 'VITIS_LOOP_9_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation_Pipeline_VITIS_LOOP_9_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.431 seconds; current allocated memory: 531.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'activation' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'fexp_32ns_32ns_32_8_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fpext_32ns_64_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'activation'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.225 seconds; current allocated memory: 533.652 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_24_1' pipeline 'VITIS_LOOP_24_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_24_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.3 seconds; current allocated memory: 534.922 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_67_4' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_67_4' pipeline 'VITIS_LOOP_67_4' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_67_4'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.194 seconds; current allocated memory: 535.742 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_24_12' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_24_12' pipeline 'VITIS_LOOP_24_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_24_12'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.143 seconds; current allocated memory: 536.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel_Pipeline_VITIS_LOOP_76_5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'accel_Pipeline_VITIS_LOOP_76_5' pipeline 'VITIS_LOOP_76_5' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel_Pipeline_VITIS_LOOP_76_5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 537.020 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accel' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_3' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_4' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_5' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_6' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_7' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_8' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_9' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_10' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_11' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_12' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_13' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_14' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_15' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_16' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_17' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_18' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_19' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_20' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_21' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_22' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_23' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_24' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_25' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_26' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_27' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_28' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_29' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_30' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_31' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_32' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_33' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_34' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_35' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_36' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_37' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_38' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w1_39' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/w2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/b2' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/in_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accel/out_r' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'accel' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'accel'.
INFO: [RTMG 210-278] Implementing memory 'accel_res_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_net_RAM_AUTO_1R1W' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'accel_layer_1_out_RAM_AUTO_1R1W' using auto RAMs.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.064 seconds; current allocated memory: 537.879 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.939 seconds; current allocated memory: 544.602 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 5.581 seconds; current allocated memory: 569.559 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for accel.
INFO: [VLOG 209-307] Generating Verilog RTL for accel.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 137.22 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 46 seconds. CPU system time: 1 seconds. Elapsed time: 114.105 seconds; current allocated memory: 470.758 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 0 seconds. Total elapsed time: 1.671 seconds; peak allocated memory: 559.922 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
INFO: [HLS 200-112] Total CPU user time: 0 seconds. Total CPU system time: 1 seconds. Total elapsed time: 1.31 seconds; peak allocated memory: 570.477 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
INFO: [HLS 200-112] Total CPU user time: 0 seconds. Total CPU system time: 0 seconds. Total elapsed time: 1.094 seconds; peak allocated memory: 569.238 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xczu3eg-sfva625-2LV-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 1 seconds. Total elapsed time: 1.251 seconds; peak allocated memory: 935.551 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xczu3eg-sfva625-2LV-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-112] Total CPU user time: 0 seconds. Total CPU system time: 1 seconds. Total elapsed time: 1.168 seconds; peak allocated memory: 846.668 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xczu3eg-sfva625-2LV-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 1 seconds. Total elapsed time: 1.229 seconds; peak allocated memory: 842.836 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xczu3eg-sfva625-2LV-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 1 seconds. Total elapsed time: 1.117 seconds; peak allocated memory: 832.195 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xczu3eg-sfvc784-1-e'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-112] Total CPU user time: 1 seconds. Total CPU system time: 1 seconds. Total elapsed time: 1.217 seconds; peak allocated memory: 873.445 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part 'xczu3eg-sfvc784-1-e' is not installed.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xq7z100-rf900-2I'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_cosim -rtl=vhdl
INFO: [HLS 200-1464] Running solution command: config_cosim -tool=xsim
INFO: [HLS 200-1464] Running solution command: config_export -vivado_clock=10
INFO: [HLS 200-1510] Running: set_part xq7z100rf900-2I 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_cosim -rtl vhdl -tool xsim 
INFO: [HLS 200-1510] Running: config_export -vivado_clock 10 
INFO: [HLS 200-1510] Running: source ./GIM_vectorized/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name accel accel 
INFO: [HLS 200-1510] Running: csim_design -clean -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [HLS 200-2036] Building debug C Simulation binaries
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 17.571 seconds; current allocated memory: 0.535 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2023.1 (64-bit)
Tool Version Limit: 2023.05
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
ERROR: [HLS 200-1023] Part '-' is not installed.
