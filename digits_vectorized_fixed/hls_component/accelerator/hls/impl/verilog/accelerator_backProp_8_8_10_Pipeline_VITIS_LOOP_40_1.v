// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_backProp_8_8_10_Pipeline_VITIS_LOOP_40_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weights_l3_address0,
        weights_l3_ce0,
        weights_l3_q0,
        mux_case_773259_out,
        mux_case_773259_out_ap_vld,
        mux_case_672256_out,
        mux_case_672256_out_ap_vld,
        mux_case_571253_out,
        mux_case_571253_out_ap_vld,
        mux_case_470250_out,
        mux_case_470250_out_ap_vld,
        mux_case_369247_out,
        mux_case_369247_out_ap_vld,
        mux_case_268244_out,
        mux_case_268244_out_ap_vld,
        mux_case_167241_out,
        mux_case_167241_out_ap_vld,
        mux_case_066238_out,
        mux_case_066238_out_ap_vld,
        mux_case_765235_out,
        mux_case_765235_out_ap_vld,
        mux_case_664232_out,
        mux_case_664232_out_ap_vld,
        mux_case_563229_out,
        mux_case_563229_out_ap_vld,
        mux_case_462226_out,
        mux_case_462226_out_ap_vld,
        mux_case_361223_out,
        mux_case_361223_out_ap_vld,
        mux_case_260220_out,
        mux_case_260220_out_ap_vld,
        mux_case_159217_out,
        mux_case_159217_out_ap_vld,
        mux_case_058214_out,
        mux_case_058214_out_ap_vld,
        mux_case_757211_out,
        mux_case_757211_out_ap_vld,
        mux_case_656208_out,
        mux_case_656208_out_ap_vld,
        mux_case_555205_out,
        mux_case_555205_out_ap_vld,
        mux_case_454202_out,
        mux_case_454202_out_ap_vld,
        mux_case_353199_out,
        mux_case_353199_out_ap_vld,
        mux_case_252196_out,
        mux_case_252196_out_ap_vld,
        mux_case_151193_out,
        mux_case_151193_out_ap_vld,
        mux_case_050190_out,
        mux_case_050190_out_ap_vld,
        mux_case_749187_out,
        mux_case_749187_out_ap_vld,
        mux_case_648184_out,
        mux_case_648184_out_ap_vld,
        mux_case_547181_out,
        mux_case_547181_out_ap_vld,
        mux_case_446178_out,
        mux_case_446178_out_ap_vld,
        mux_case_345175_out,
        mux_case_345175_out_ap_vld,
        mux_case_244172_out,
        mux_case_244172_out_ap_vld,
        mux_case_143169_out,
        mux_case_143169_out_ap_vld,
        mux_case_042166_out,
        mux_case_042166_out_ap_vld,
        mux_case_741163_out,
        mux_case_741163_out_ap_vld,
        mux_case_640160_out,
        mux_case_640160_out_ap_vld,
        mux_case_539157_out,
        mux_case_539157_out_ap_vld,
        mux_case_438154_out,
        mux_case_438154_out_ap_vld,
        mux_case_337151_out,
        mux_case_337151_out_ap_vld,
        mux_case_236148_out,
        mux_case_236148_out_ap_vld,
        mux_case_135145_out,
        mux_case_135145_out_ap_vld,
        mux_case_034142_out,
        mux_case_034142_out_ap_vld,
        mux_case_733139_out,
        mux_case_733139_out_ap_vld,
        mux_case_632136_out,
        mux_case_632136_out_ap_vld,
        mux_case_531133_out,
        mux_case_531133_out_ap_vld,
        mux_case_430130_out,
        mux_case_430130_out_ap_vld,
        mux_case_329127_out,
        mux_case_329127_out_ap_vld,
        mux_case_228124_out,
        mux_case_228124_out_ap_vld,
        mux_case_127121_out,
        mux_case_127121_out_ap_vld,
        mux_case_026118_out,
        mux_case_026118_out_ap_vld,
        mux_case_725115_out,
        mux_case_725115_out_ap_vld,
        mux_case_624112_out,
        mux_case_624112_out_ap_vld,
        mux_case_523109_out,
        mux_case_523109_out_ap_vld,
        mux_case_422106_out,
        mux_case_422106_out_ap_vld,
        mux_case_321103_out,
        mux_case_321103_out_ap_vld,
        mux_case_220100_out,
        mux_case_220100_out_ap_vld,
        mux_case_11997_out,
        mux_case_11997_out_ap_vld,
        mux_case_01894_out,
        mux_case_01894_out_ap_vld,
        mux_case_71791_out,
        mux_case_71791_out_ap_vld,
        mux_case_61688_out,
        mux_case_61688_out_ap_vld,
        mux_case_51585_out,
        mux_case_51585_out_ap_vld,
        mux_case_41482_out,
        mux_case_41482_out_ap_vld,
        mux_case_31379_out,
        mux_case_31379_out_ap_vld,
        mux_case_21276_out,
        mux_case_21276_out_ap_vld,
        mux_case_11173_out,
        mux_case_11173_out_ap_vld,
        mux_case_01070_out,
        mux_case_01070_out_ap_vld,
        mux_case_7967_out,
        mux_case_7967_out_ap_vld,
        mux_case_6864_out,
        mux_case_6864_out_ap_vld,
        mux_case_5761_out,
        mux_case_5761_out_ap_vld,
        mux_case_4658_out,
        mux_case_4658_out_ap_vld,
        mux_case_3555_out,
        mux_case_3555_out_ap_vld,
        mux_case_2452_out,
        mux_case_2452_out_ap_vld,
        mux_case_1349_out,
        mux_case_1349_out_ap_vld,
        mux_case_0246_out,
        mux_case_0246_out_ap_vld,
        mux_case_743_out,
        mux_case_743_out_ap_vld,
        mux_case_639_out,
        mux_case_639_out_ap_vld,
        mux_case_536_out,
        mux_case_536_out_ap_vld,
        mux_case_433_out,
        mux_case_433_out_ap_vld,
        mux_case_330_out,
        mux_case_330_out_ap_vld,
        mux_case_226_out,
        mux_case_226_out_ap_vld,
        mux_case_122_out,
        mux_case_122_out_ap_vld,
        mux_case_019_out,
        mux_case_019_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] weights_l3_address0;
output   weights_l3_ce0;
input  [511:0] weights_l3_q0;
output  [63:0] mux_case_773259_out;
output   mux_case_773259_out_ap_vld;
output  [63:0] mux_case_672256_out;
output   mux_case_672256_out_ap_vld;
output  [63:0] mux_case_571253_out;
output   mux_case_571253_out_ap_vld;
output  [63:0] mux_case_470250_out;
output   mux_case_470250_out_ap_vld;
output  [63:0] mux_case_369247_out;
output   mux_case_369247_out_ap_vld;
output  [63:0] mux_case_268244_out;
output   mux_case_268244_out_ap_vld;
output  [63:0] mux_case_167241_out;
output   mux_case_167241_out_ap_vld;
output  [63:0] mux_case_066238_out;
output   mux_case_066238_out_ap_vld;
output  [63:0] mux_case_765235_out;
output   mux_case_765235_out_ap_vld;
output  [63:0] mux_case_664232_out;
output   mux_case_664232_out_ap_vld;
output  [63:0] mux_case_563229_out;
output   mux_case_563229_out_ap_vld;
output  [63:0] mux_case_462226_out;
output   mux_case_462226_out_ap_vld;
output  [63:0] mux_case_361223_out;
output   mux_case_361223_out_ap_vld;
output  [63:0] mux_case_260220_out;
output   mux_case_260220_out_ap_vld;
output  [63:0] mux_case_159217_out;
output   mux_case_159217_out_ap_vld;
output  [63:0] mux_case_058214_out;
output   mux_case_058214_out_ap_vld;
output  [63:0] mux_case_757211_out;
output   mux_case_757211_out_ap_vld;
output  [63:0] mux_case_656208_out;
output   mux_case_656208_out_ap_vld;
output  [63:0] mux_case_555205_out;
output   mux_case_555205_out_ap_vld;
output  [63:0] mux_case_454202_out;
output   mux_case_454202_out_ap_vld;
output  [63:0] mux_case_353199_out;
output   mux_case_353199_out_ap_vld;
output  [63:0] mux_case_252196_out;
output   mux_case_252196_out_ap_vld;
output  [63:0] mux_case_151193_out;
output   mux_case_151193_out_ap_vld;
output  [63:0] mux_case_050190_out;
output   mux_case_050190_out_ap_vld;
output  [63:0] mux_case_749187_out;
output   mux_case_749187_out_ap_vld;
output  [63:0] mux_case_648184_out;
output   mux_case_648184_out_ap_vld;
output  [63:0] mux_case_547181_out;
output   mux_case_547181_out_ap_vld;
output  [63:0] mux_case_446178_out;
output   mux_case_446178_out_ap_vld;
output  [63:0] mux_case_345175_out;
output   mux_case_345175_out_ap_vld;
output  [63:0] mux_case_244172_out;
output   mux_case_244172_out_ap_vld;
output  [63:0] mux_case_143169_out;
output   mux_case_143169_out_ap_vld;
output  [63:0] mux_case_042166_out;
output   mux_case_042166_out_ap_vld;
output  [63:0] mux_case_741163_out;
output   mux_case_741163_out_ap_vld;
output  [63:0] mux_case_640160_out;
output   mux_case_640160_out_ap_vld;
output  [63:0] mux_case_539157_out;
output   mux_case_539157_out_ap_vld;
output  [63:0] mux_case_438154_out;
output   mux_case_438154_out_ap_vld;
output  [63:0] mux_case_337151_out;
output   mux_case_337151_out_ap_vld;
output  [63:0] mux_case_236148_out;
output   mux_case_236148_out_ap_vld;
output  [63:0] mux_case_135145_out;
output   mux_case_135145_out_ap_vld;
output  [63:0] mux_case_034142_out;
output   mux_case_034142_out_ap_vld;
output  [63:0] mux_case_733139_out;
output   mux_case_733139_out_ap_vld;
output  [63:0] mux_case_632136_out;
output   mux_case_632136_out_ap_vld;
output  [63:0] mux_case_531133_out;
output   mux_case_531133_out_ap_vld;
output  [63:0] mux_case_430130_out;
output   mux_case_430130_out_ap_vld;
output  [63:0] mux_case_329127_out;
output   mux_case_329127_out_ap_vld;
output  [63:0] mux_case_228124_out;
output   mux_case_228124_out_ap_vld;
output  [63:0] mux_case_127121_out;
output   mux_case_127121_out_ap_vld;
output  [63:0] mux_case_026118_out;
output   mux_case_026118_out_ap_vld;
output  [63:0] mux_case_725115_out;
output   mux_case_725115_out_ap_vld;
output  [63:0] mux_case_624112_out;
output   mux_case_624112_out_ap_vld;
output  [63:0] mux_case_523109_out;
output   mux_case_523109_out_ap_vld;
output  [63:0] mux_case_422106_out;
output   mux_case_422106_out_ap_vld;
output  [63:0] mux_case_321103_out;
output   mux_case_321103_out_ap_vld;
output  [63:0] mux_case_220100_out;
output   mux_case_220100_out_ap_vld;
output  [63:0] mux_case_11997_out;
output   mux_case_11997_out_ap_vld;
output  [63:0] mux_case_01894_out;
output   mux_case_01894_out_ap_vld;
output  [63:0] mux_case_71791_out;
output   mux_case_71791_out_ap_vld;
output  [63:0] mux_case_61688_out;
output   mux_case_61688_out_ap_vld;
output  [63:0] mux_case_51585_out;
output   mux_case_51585_out_ap_vld;
output  [63:0] mux_case_41482_out;
output   mux_case_41482_out_ap_vld;
output  [63:0] mux_case_31379_out;
output   mux_case_31379_out_ap_vld;
output  [63:0] mux_case_21276_out;
output   mux_case_21276_out_ap_vld;
output  [63:0] mux_case_11173_out;
output   mux_case_11173_out_ap_vld;
output  [63:0] mux_case_01070_out;
output   mux_case_01070_out_ap_vld;
output  [63:0] mux_case_7967_out;
output   mux_case_7967_out_ap_vld;
output  [63:0] mux_case_6864_out;
output   mux_case_6864_out_ap_vld;
output  [63:0] mux_case_5761_out;
output   mux_case_5761_out_ap_vld;
output  [63:0] mux_case_4658_out;
output   mux_case_4658_out_ap_vld;
output  [63:0] mux_case_3555_out;
output   mux_case_3555_out_ap_vld;
output  [63:0] mux_case_2452_out;
output   mux_case_2452_out_ap_vld;
output  [63:0] mux_case_1349_out;
output   mux_case_1349_out_ap_vld;
output  [63:0] mux_case_0246_out;
output   mux_case_0246_out_ap_vld;
output  [63:0] mux_case_743_out;
output   mux_case_743_out_ap_vld;
output  [63:0] mux_case_639_out;
output   mux_case_639_out_ap_vld;
output  [63:0] mux_case_536_out;
output   mux_case_536_out_ap_vld;
output  [63:0] mux_case_433_out;
output   mux_case_433_out_ap_vld;
output  [63:0] mux_case_330_out;
output   mux_case_330_out_ap_vld;
output  [63:0] mux_case_226_out;
output   mux_case_226_out_ap_vld;
output  [63:0] mux_case_122_out;
output   mux_case_122_out_ap_vld;
output  [63:0] mux_case_019_out;
output   mux_case_019_out_ap_vld;

reg ap_idle;
reg mux_case_773259_out_ap_vld;
reg mux_case_672256_out_ap_vld;
reg mux_case_571253_out_ap_vld;
reg mux_case_470250_out_ap_vld;
reg mux_case_369247_out_ap_vld;
reg mux_case_268244_out_ap_vld;
reg mux_case_167241_out_ap_vld;
reg mux_case_066238_out_ap_vld;
reg mux_case_765235_out_ap_vld;
reg mux_case_664232_out_ap_vld;
reg mux_case_563229_out_ap_vld;
reg mux_case_462226_out_ap_vld;
reg mux_case_361223_out_ap_vld;
reg mux_case_260220_out_ap_vld;
reg mux_case_159217_out_ap_vld;
reg mux_case_058214_out_ap_vld;
reg mux_case_757211_out_ap_vld;
reg mux_case_656208_out_ap_vld;
reg mux_case_555205_out_ap_vld;
reg mux_case_454202_out_ap_vld;
reg mux_case_353199_out_ap_vld;
reg mux_case_252196_out_ap_vld;
reg mux_case_151193_out_ap_vld;
reg mux_case_050190_out_ap_vld;
reg mux_case_749187_out_ap_vld;
reg mux_case_648184_out_ap_vld;
reg mux_case_547181_out_ap_vld;
reg mux_case_446178_out_ap_vld;
reg mux_case_345175_out_ap_vld;
reg mux_case_244172_out_ap_vld;
reg mux_case_143169_out_ap_vld;
reg mux_case_042166_out_ap_vld;
reg mux_case_741163_out_ap_vld;
reg mux_case_640160_out_ap_vld;
reg mux_case_539157_out_ap_vld;
reg mux_case_438154_out_ap_vld;
reg mux_case_337151_out_ap_vld;
reg mux_case_236148_out_ap_vld;
reg mux_case_135145_out_ap_vld;
reg mux_case_034142_out_ap_vld;
reg mux_case_733139_out_ap_vld;
reg mux_case_632136_out_ap_vld;
reg mux_case_531133_out_ap_vld;
reg mux_case_430130_out_ap_vld;
reg mux_case_329127_out_ap_vld;
reg mux_case_228124_out_ap_vld;
reg mux_case_127121_out_ap_vld;
reg mux_case_026118_out_ap_vld;
reg mux_case_725115_out_ap_vld;
reg mux_case_624112_out_ap_vld;
reg mux_case_523109_out_ap_vld;
reg mux_case_422106_out_ap_vld;
reg mux_case_321103_out_ap_vld;
reg mux_case_220100_out_ap_vld;
reg mux_case_11997_out_ap_vld;
reg mux_case_01894_out_ap_vld;
reg mux_case_71791_out_ap_vld;
reg mux_case_61688_out_ap_vld;
reg mux_case_51585_out_ap_vld;
reg mux_case_41482_out_ap_vld;
reg mux_case_31379_out_ap_vld;
reg mux_case_21276_out_ap_vld;
reg mux_case_11173_out_ap_vld;
reg mux_case_01070_out_ap_vld;
reg mux_case_7967_out_ap_vld;
reg mux_case_6864_out_ap_vld;
reg mux_case_5761_out_ap_vld;
reg mux_case_4658_out_ap_vld;
reg mux_case_3555_out_ap_vld;
reg mux_case_2452_out_ap_vld;
reg mux_case_1349_out_ap_vld;
reg mux_case_0246_out_ap_vld;
reg mux_case_743_out_ap_vld;
reg mux_case_639_out_ap_vld;
reg mux_case_536_out_ap_vld;
reg mux_case_433_out_ap_vld;
reg mux_case_330_out_ap_vld;
reg mux_case_226_out_ap_vld;
reg mux_case_122_out_ap_vld;
reg mux_case_019_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln40_fu_1143_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [3:0] i_22_reg_2478;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln40_fu_1155_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_238;
wire   [3:0] i_23_fu_1149_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_22;
reg   [63:0] mux_case_019_fu_242;
wire   [63:0] w_l_plus1_T_fu_1169_p1;
reg   [63:0] mux_case_122_fu_246;
wire   [63:0] w_l_plus1_T_50_fu_1183_p1;
reg   [63:0] mux_case_226_fu_250;
wire   [63:0] w_l_plus1_T_51_fu_1197_p1;
reg   [63:0] mux_case_330_fu_254;
wire   [63:0] w_l_plus1_T_52_fu_1211_p1;
reg   [63:0] mux_case_433_fu_258;
wire   [63:0] w_l_plus1_T_53_fu_1225_p1;
reg   [63:0] mux_case_536_fu_262;
wire   [63:0] w_l_plus1_T_54_fu_1239_p1;
reg   [63:0] mux_case_639_fu_266;
wire   [63:0] w_l_plus1_T_55_fu_1253_p1;
reg   [63:0] mux_case_743_fu_270;
wire   [63:0] w_l_plus1_T_56_fu_1267_p1;
reg   [63:0] mux_case_0246_fu_274;
reg   [63:0] mux_case_1349_fu_278;
reg   [63:0] mux_case_2452_fu_282;
reg   [63:0] mux_case_3555_fu_286;
reg   [63:0] mux_case_4658_fu_290;
reg   [63:0] mux_case_5761_fu_294;
reg   [63:0] mux_case_6864_fu_298;
reg   [63:0] mux_case_7967_fu_302;
reg   [63:0] mux_case_01070_fu_306;
reg   [63:0] mux_case_11173_fu_310;
reg   [63:0] mux_case_21276_fu_314;
reg   [63:0] mux_case_31379_fu_318;
reg   [63:0] mux_case_41482_fu_322;
reg   [63:0] mux_case_51585_fu_326;
reg   [63:0] mux_case_61688_fu_330;
reg   [63:0] mux_case_71791_fu_334;
reg   [63:0] mux_case_01894_fu_338;
reg   [63:0] mux_case_11997_fu_342;
reg   [63:0] mux_case_220100_fu_346;
reg   [63:0] mux_case_321103_fu_350;
reg   [63:0] mux_case_422106_fu_354;
reg   [63:0] mux_case_523109_fu_358;
reg   [63:0] mux_case_624112_fu_362;
reg   [63:0] mux_case_725115_fu_366;
reg   [63:0] mux_case_026118_fu_370;
reg   [63:0] mux_case_127121_fu_374;
reg   [63:0] mux_case_228124_fu_378;
reg   [63:0] mux_case_329127_fu_382;
reg   [63:0] mux_case_430130_fu_386;
reg   [63:0] mux_case_531133_fu_390;
reg   [63:0] mux_case_632136_fu_394;
reg   [63:0] mux_case_733139_fu_398;
reg   [63:0] mux_case_034142_fu_402;
reg   [63:0] mux_case_135145_fu_406;
reg   [63:0] mux_case_236148_fu_410;
reg   [63:0] mux_case_337151_fu_414;
reg   [63:0] mux_case_438154_fu_418;
reg   [63:0] mux_case_539157_fu_422;
reg   [63:0] mux_case_640160_fu_426;
reg   [63:0] mux_case_741163_fu_430;
reg   [63:0] mux_case_042166_fu_434;
reg   [63:0] mux_case_143169_fu_438;
reg   [63:0] mux_case_244172_fu_442;
reg   [63:0] mux_case_345175_fu_446;
reg   [63:0] mux_case_446178_fu_450;
reg   [63:0] mux_case_547181_fu_454;
reg   [63:0] mux_case_648184_fu_458;
reg   [63:0] mux_case_749187_fu_462;
reg   [63:0] mux_case_050190_fu_466;
reg   [63:0] mux_case_151193_fu_470;
reg   [63:0] mux_case_252196_fu_474;
reg   [63:0] mux_case_353199_fu_478;
reg   [63:0] mux_case_454202_fu_482;
reg   [63:0] mux_case_555205_fu_486;
reg   [63:0] mux_case_656208_fu_490;
reg   [63:0] mux_case_757211_fu_494;
reg   [63:0] mux_case_058214_fu_498;
reg   [63:0] mux_case_159217_fu_502;
reg   [63:0] mux_case_260220_fu_506;
reg   [63:0] mux_case_361223_fu_510;
reg   [63:0] mux_case_462226_fu_514;
reg   [63:0] mux_case_563229_fu_518;
reg   [63:0] mux_case_664232_fu_522;
reg   [63:0] mux_case_765235_fu_526;
reg   [63:0] mux_case_066238_fu_530;
reg   [63:0] mux_case_167241_fu_534;
reg   [63:0] mux_case_268244_fu_538;
reg   [63:0] mux_case_369247_fu_542;
reg   [63:0] mux_case_470250_fu_546;
reg   [63:0] mux_case_571253_fu_550;
reg   [63:0] mux_case_672256_fu_554;
reg   [63:0] mux_case_773259_fu_558;
wire    ap_block_pp0_stage0_01001;
reg    weights_l3_ce0_local;
wire   [63:0] trunc_ln42_fu_1165_p1;
wire   [63:0] trunc_ln42_1_fu_1173_p4;
wire   [63:0] trunc_ln42_2_fu_1187_p4;
wire   [63:0] trunc_ln42_3_fu_1201_p4;
wire   [63:0] trunc_ln42_4_fu_1215_p4;
wire   [63:0] trunc_ln42_5_fu_1229_p4;
wire   [63:0] trunc_ln42_6_fu_1243_p4;
wire   [63:0] trunc_ln42_7_fu_1257_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 i_fu_238 = 4'd0;
#0 mux_case_019_fu_242 = 64'd0;
#0 mux_case_122_fu_246 = 64'd0;
#0 mux_case_226_fu_250 = 64'd0;
#0 mux_case_330_fu_254 = 64'd0;
#0 mux_case_433_fu_258 = 64'd0;
#0 mux_case_536_fu_262 = 64'd0;
#0 mux_case_639_fu_266 = 64'd0;
#0 mux_case_743_fu_270 = 64'd0;
#0 mux_case_0246_fu_274 = 64'd0;
#0 mux_case_1349_fu_278 = 64'd0;
#0 mux_case_2452_fu_282 = 64'd0;
#0 mux_case_3555_fu_286 = 64'd0;
#0 mux_case_4658_fu_290 = 64'd0;
#0 mux_case_5761_fu_294 = 64'd0;
#0 mux_case_6864_fu_298 = 64'd0;
#0 mux_case_7967_fu_302 = 64'd0;
#0 mux_case_01070_fu_306 = 64'd0;
#0 mux_case_11173_fu_310 = 64'd0;
#0 mux_case_21276_fu_314 = 64'd0;
#0 mux_case_31379_fu_318 = 64'd0;
#0 mux_case_41482_fu_322 = 64'd0;
#0 mux_case_51585_fu_326 = 64'd0;
#0 mux_case_61688_fu_330 = 64'd0;
#0 mux_case_71791_fu_334 = 64'd0;
#0 mux_case_01894_fu_338 = 64'd0;
#0 mux_case_11997_fu_342 = 64'd0;
#0 mux_case_220100_fu_346 = 64'd0;
#0 mux_case_321103_fu_350 = 64'd0;
#0 mux_case_422106_fu_354 = 64'd0;
#0 mux_case_523109_fu_358 = 64'd0;
#0 mux_case_624112_fu_362 = 64'd0;
#0 mux_case_725115_fu_366 = 64'd0;
#0 mux_case_026118_fu_370 = 64'd0;
#0 mux_case_127121_fu_374 = 64'd0;
#0 mux_case_228124_fu_378 = 64'd0;
#0 mux_case_329127_fu_382 = 64'd0;
#0 mux_case_430130_fu_386 = 64'd0;
#0 mux_case_531133_fu_390 = 64'd0;
#0 mux_case_632136_fu_394 = 64'd0;
#0 mux_case_733139_fu_398 = 64'd0;
#0 mux_case_034142_fu_402 = 64'd0;
#0 mux_case_135145_fu_406 = 64'd0;
#0 mux_case_236148_fu_410 = 64'd0;
#0 mux_case_337151_fu_414 = 64'd0;
#0 mux_case_438154_fu_418 = 64'd0;
#0 mux_case_539157_fu_422 = 64'd0;
#0 mux_case_640160_fu_426 = 64'd0;
#0 mux_case_741163_fu_430 = 64'd0;
#0 mux_case_042166_fu_434 = 64'd0;
#0 mux_case_143169_fu_438 = 64'd0;
#0 mux_case_244172_fu_442 = 64'd0;
#0 mux_case_345175_fu_446 = 64'd0;
#0 mux_case_446178_fu_450 = 64'd0;
#0 mux_case_547181_fu_454 = 64'd0;
#0 mux_case_648184_fu_458 = 64'd0;
#0 mux_case_749187_fu_462 = 64'd0;
#0 mux_case_050190_fu_466 = 64'd0;
#0 mux_case_151193_fu_470 = 64'd0;
#0 mux_case_252196_fu_474 = 64'd0;
#0 mux_case_353199_fu_478 = 64'd0;
#0 mux_case_454202_fu_482 = 64'd0;
#0 mux_case_555205_fu_486 = 64'd0;
#0 mux_case_656208_fu_490 = 64'd0;
#0 mux_case_757211_fu_494 = 64'd0;
#0 mux_case_058214_fu_498 = 64'd0;
#0 mux_case_159217_fu_502 = 64'd0;
#0 mux_case_260220_fu_506 = 64'd0;
#0 mux_case_361223_fu_510 = 64'd0;
#0 mux_case_462226_fu_514 = 64'd0;
#0 mux_case_563229_fu_518 = 64'd0;
#0 mux_case_664232_fu_522 = 64'd0;
#0 mux_case_765235_fu_526 = 64'd0;
#0 mux_case_066238_fu_530 = 64'd0;
#0 mux_case_167241_fu_534 = 64'd0;
#0 mux_case_268244_fu_538 = 64'd0;
#0 mux_case_369247_fu_542 = 64'd0;
#0 mux_case_470250_fu_546 = 64'd0;
#0 mux_case_571253_fu_550 = 64'd0;
#0 mux_case_672256_fu_554 = 64'd0;
#0 mux_case_773259_fu_558 = 64'd0;
#0 ap_done_reg = 1'b0;
end

accelerator_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln40_fu_1143_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_238 <= i_23_fu_1149_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_238 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_22_reg_2478 <= ap_sig_allocacmp_i_22;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_01070_fu_306 <= w_l_plus1_T_fu_1169_p1;
        mux_case_11173_fu_310 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_21276_fu_314 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_31379_fu_318 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_41482_fu_322 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_51585_fu_326 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_61688_fu_330 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_71791_fu_334 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_01894_fu_338 <= w_l_plus1_T_fu_1169_p1;
        mux_case_11997_fu_342 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_220100_fu_346 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_321103_fu_350 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_422106_fu_354 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_523109_fu_358 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_624112_fu_362 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_725115_fu_366 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_019_fu_242 <= w_l_plus1_T_fu_1169_p1;
        mux_case_122_fu_246 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_226_fu_250 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_330_fu_254 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_433_fu_258 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_536_fu_262 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_639_fu_266 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_743_fu_270 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_0246_fu_274 <= w_l_plus1_T_fu_1169_p1;
        mux_case_1349_fu_278 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_2452_fu_282 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_3555_fu_286 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_4658_fu_290 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_5761_fu_294 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_6864_fu_298 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_7967_fu_302 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_026118_fu_370 <= w_l_plus1_T_fu_1169_p1;
        mux_case_127121_fu_374 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_228124_fu_378 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_329127_fu_382 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_430130_fu_386 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_531133_fu_390 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_632136_fu_394 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_733139_fu_398 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_034142_fu_402 <= w_l_plus1_T_fu_1169_p1;
        mux_case_135145_fu_406 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_236148_fu_410 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_337151_fu_414 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_438154_fu_418 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_539157_fu_422 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_640160_fu_426 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_741163_fu_430 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_042166_fu_434 <= w_l_plus1_T_fu_1169_p1;
        mux_case_143169_fu_438 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_244172_fu_442 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_345175_fu_446 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_446178_fu_450 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_547181_fu_454 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_648184_fu_458 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_749187_fu_462 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_050190_fu_466 <= w_l_plus1_T_fu_1169_p1;
        mux_case_151193_fu_470 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_252196_fu_474 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_353199_fu_478 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_454202_fu_482 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_555205_fu_486 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_656208_fu_490 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_757211_fu_494 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (i_22_reg_2478 == 4'd8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_058214_fu_498 <= w_l_plus1_T_fu_1169_p1;
        mux_case_159217_fu_502 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_260220_fu_506 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_361223_fu_510 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_462226_fu_514 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_563229_fu_518 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_664232_fu_522 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_765235_fu_526 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_22_reg_2478 == 4'd8) & ~(i_22_reg_2478 == 4'd7) & ~(i_22_reg_2478 == 4'd6) & ~(i_22_reg_2478 == 4'd5) & ~(i_22_reg_2478 == 4'd4) & ~(i_22_reg_2478 == 4'd3) & ~(i_22_reg_2478 == 4'd2) & ~(i_22_reg_2478 == 4'd1) & ~(i_22_reg_2478 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_066238_fu_530 <= w_l_plus1_T_fu_1169_p1;
        mux_case_167241_fu_534 <= w_l_plus1_T_50_fu_1183_p1;
        mux_case_268244_fu_538 <= w_l_plus1_T_51_fu_1197_p1;
        mux_case_369247_fu_542 <= w_l_plus1_T_52_fu_1211_p1;
        mux_case_470250_fu_546 <= w_l_plus1_T_53_fu_1225_p1;
        mux_case_571253_fu_550 <= w_l_plus1_T_54_fu_1239_p1;
        mux_case_672256_fu_554 <= w_l_plus1_T_55_fu_1253_p1;
        mux_case_773259_fu_558 <= w_l_plus1_T_56_fu_1267_p1;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_22 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_22 = i_fu_238;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_01070_out_ap_vld = 1'b1;
    end else begin
        mux_case_01070_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_01894_out_ap_vld = 1'b1;
    end else begin
        mux_case_01894_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_019_out_ap_vld = 1'b1;
    end else begin
        mux_case_019_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_0246_out_ap_vld = 1'b1;
    end else begin
        mux_case_0246_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_026118_out_ap_vld = 1'b1;
    end else begin
        mux_case_026118_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_034142_out_ap_vld = 1'b1;
    end else begin
        mux_case_034142_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_042166_out_ap_vld = 1'b1;
    end else begin
        mux_case_042166_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_050190_out_ap_vld = 1'b1;
    end else begin
        mux_case_050190_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_058214_out_ap_vld = 1'b1;
    end else begin
        mux_case_058214_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_066238_out_ap_vld = 1'b1;
    end else begin
        mux_case_066238_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_11173_out_ap_vld = 1'b1;
    end else begin
        mux_case_11173_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_11997_out_ap_vld = 1'b1;
    end else begin
        mux_case_11997_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_122_out_ap_vld = 1'b1;
    end else begin
        mux_case_122_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_127121_out_ap_vld = 1'b1;
    end else begin
        mux_case_127121_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1349_out_ap_vld = 1'b1;
    end else begin
        mux_case_1349_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_135145_out_ap_vld = 1'b1;
    end else begin
        mux_case_135145_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_143169_out_ap_vld = 1'b1;
    end else begin
        mux_case_143169_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_151193_out_ap_vld = 1'b1;
    end else begin
        mux_case_151193_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_159217_out_ap_vld = 1'b1;
    end else begin
        mux_case_159217_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_167241_out_ap_vld = 1'b1;
    end else begin
        mux_case_167241_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_21276_out_ap_vld = 1'b1;
    end else begin
        mux_case_21276_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_220100_out_ap_vld = 1'b1;
    end else begin
        mux_case_220100_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_226_out_ap_vld = 1'b1;
    end else begin
        mux_case_226_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_228124_out_ap_vld = 1'b1;
    end else begin
        mux_case_228124_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_236148_out_ap_vld = 1'b1;
    end else begin
        mux_case_236148_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_244172_out_ap_vld = 1'b1;
    end else begin
        mux_case_244172_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2452_out_ap_vld = 1'b1;
    end else begin
        mux_case_2452_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_252196_out_ap_vld = 1'b1;
    end else begin
        mux_case_252196_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_260220_out_ap_vld = 1'b1;
    end else begin
        mux_case_260220_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_268244_out_ap_vld = 1'b1;
    end else begin
        mux_case_268244_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_31379_out_ap_vld = 1'b1;
    end else begin
        mux_case_31379_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_321103_out_ap_vld = 1'b1;
    end else begin
        mux_case_321103_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_329127_out_ap_vld = 1'b1;
    end else begin
        mux_case_329127_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_330_out_ap_vld = 1'b1;
    end else begin
        mux_case_330_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_337151_out_ap_vld = 1'b1;
    end else begin
        mux_case_337151_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_345175_out_ap_vld = 1'b1;
    end else begin
        mux_case_345175_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_353199_out_ap_vld = 1'b1;
    end else begin
        mux_case_353199_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_3555_out_ap_vld = 1'b1;
    end else begin
        mux_case_3555_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_361223_out_ap_vld = 1'b1;
    end else begin
        mux_case_361223_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_369247_out_ap_vld = 1'b1;
    end else begin
        mux_case_369247_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_41482_out_ap_vld = 1'b1;
    end else begin
        mux_case_41482_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_422106_out_ap_vld = 1'b1;
    end else begin
        mux_case_422106_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_430130_out_ap_vld = 1'b1;
    end else begin
        mux_case_430130_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_433_out_ap_vld = 1'b1;
    end else begin
        mux_case_433_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_438154_out_ap_vld = 1'b1;
    end else begin
        mux_case_438154_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_446178_out_ap_vld = 1'b1;
    end else begin
        mux_case_446178_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_454202_out_ap_vld = 1'b1;
    end else begin
        mux_case_454202_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_462226_out_ap_vld = 1'b1;
    end else begin
        mux_case_462226_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_4658_out_ap_vld = 1'b1;
    end else begin
        mux_case_4658_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_470250_out_ap_vld = 1'b1;
    end else begin
        mux_case_470250_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_51585_out_ap_vld = 1'b1;
    end else begin
        mux_case_51585_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_523109_out_ap_vld = 1'b1;
    end else begin
        mux_case_523109_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_531133_out_ap_vld = 1'b1;
    end else begin
        mux_case_531133_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_536_out_ap_vld = 1'b1;
    end else begin
        mux_case_536_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_539157_out_ap_vld = 1'b1;
    end else begin
        mux_case_539157_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_547181_out_ap_vld = 1'b1;
    end else begin
        mux_case_547181_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_555205_out_ap_vld = 1'b1;
    end else begin
        mux_case_555205_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_563229_out_ap_vld = 1'b1;
    end else begin
        mux_case_563229_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_571253_out_ap_vld = 1'b1;
    end else begin
        mux_case_571253_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_5761_out_ap_vld = 1'b1;
    end else begin
        mux_case_5761_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_61688_out_ap_vld = 1'b1;
    end else begin
        mux_case_61688_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_624112_out_ap_vld = 1'b1;
    end else begin
        mux_case_624112_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_632136_out_ap_vld = 1'b1;
    end else begin
        mux_case_632136_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_639_out_ap_vld = 1'b1;
    end else begin
        mux_case_639_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_640160_out_ap_vld = 1'b1;
    end else begin
        mux_case_640160_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_648184_out_ap_vld = 1'b1;
    end else begin
        mux_case_648184_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_656208_out_ap_vld = 1'b1;
    end else begin
        mux_case_656208_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_664232_out_ap_vld = 1'b1;
    end else begin
        mux_case_664232_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_672256_out_ap_vld = 1'b1;
    end else begin
        mux_case_672256_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_6864_out_ap_vld = 1'b1;
    end else begin
        mux_case_6864_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_71791_out_ap_vld = 1'b1;
    end else begin
        mux_case_71791_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_725115_out_ap_vld = 1'b1;
    end else begin
        mux_case_725115_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_733139_out_ap_vld = 1'b1;
    end else begin
        mux_case_733139_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_741163_out_ap_vld = 1'b1;
    end else begin
        mux_case_741163_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_743_out_ap_vld = 1'b1;
    end else begin
        mux_case_743_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_749187_out_ap_vld = 1'b1;
    end else begin
        mux_case_749187_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_757211_out_ap_vld = 1'b1;
    end else begin
        mux_case_757211_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_765235_out_ap_vld = 1'b1;
    end else begin
        mux_case_765235_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_773259_out_ap_vld = 1'b1;
    end else begin
        mux_case_773259_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln40_fu_1143_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_7967_out_ap_vld = 1'b1;
    end else begin
        mux_case_7967_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_l3_ce0_local = 1'b1;
    end else begin
        weights_l3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign i_23_fu_1149_p2 = (ap_sig_allocacmp_i_22 + 4'd1);

assign icmp_ln40_fu_1143_p2 = ((ap_sig_allocacmp_i_22 == 4'd10) ? 1'b1 : 1'b0);

assign mux_case_01070_out = mux_case_01070_fu_306;

assign mux_case_01894_out = mux_case_01894_fu_338;

assign mux_case_019_out = mux_case_019_fu_242;

assign mux_case_0246_out = mux_case_0246_fu_274;

assign mux_case_026118_out = mux_case_026118_fu_370;

assign mux_case_034142_out = mux_case_034142_fu_402;

assign mux_case_042166_out = mux_case_042166_fu_434;

assign mux_case_050190_out = mux_case_050190_fu_466;

assign mux_case_058214_out = mux_case_058214_fu_498;

assign mux_case_066238_out = mux_case_066238_fu_530;

assign mux_case_11173_out = mux_case_11173_fu_310;

assign mux_case_11997_out = mux_case_11997_fu_342;

assign mux_case_122_out = mux_case_122_fu_246;

assign mux_case_127121_out = mux_case_127121_fu_374;

assign mux_case_1349_out = mux_case_1349_fu_278;

assign mux_case_135145_out = mux_case_135145_fu_406;

assign mux_case_143169_out = mux_case_143169_fu_438;

assign mux_case_151193_out = mux_case_151193_fu_470;

assign mux_case_159217_out = mux_case_159217_fu_502;

assign mux_case_167241_out = mux_case_167241_fu_534;

assign mux_case_21276_out = mux_case_21276_fu_314;

assign mux_case_220100_out = mux_case_220100_fu_346;

assign mux_case_226_out = mux_case_226_fu_250;

assign mux_case_228124_out = mux_case_228124_fu_378;

assign mux_case_236148_out = mux_case_236148_fu_410;

assign mux_case_244172_out = mux_case_244172_fu_442;

assign mux_case_2452_out = mux_case_2452_fu_282;

assign mux_case_252196_out = mux_case_252196_fu_474;

assign mux_case_260220_out = mux_case_260220_fu_506;

assign mux_case_268244_out = mux_case_268244_fu_538;

assign mux_case_31379_out = mux_case_31379_fu_318;

assign mux_case_321103_out = mux_case_321103_fu_350;

assign mux_case_329127_out = mux_case_329127_fu_382;

assign mux_case_330_out = mux_case_330_fu_254;

assign mux_case_337151_out = mux_case_337151_fu_414;

assign mux_case_345175_out = mux_case_345175_fu_446;

assign mux_case_353199_out = mux_case_353199_fu_478;

assign mux_case_3555_out = mux_case_3555_fu_286;

assign mux_case_361223_out = mux_case_361223_fu_510;

assign mux_case_369247_out = mux_case_369247_fu_542;

assign mux_case_41482_out = mux_case_41482_fu_322;

assign mux_case_422106_out = mux_case_422106_fu_354;

assign mux_case_430130_out = mux_case_430130_fu_386;

assign mux_case_433_out = mux_case_433_fu_258;

assign mux_case_438154_out = mux_case_438154_fu_418;

assign mux_case_446178_out = mux_case_446178_fu_450;

assign mux_case_454202_out = mux_case_454202_fu_482;

assign mux_case_462226_out = mux_case_462226_fu_514;

assign mux_case_4658_out = mux_case_4658_fu_290;

assign mux_case_470250_out = mux_case_470250_fu_546;

assign mux_case_51585_out = mux_case_51585_fu_326;

assign mux_case_523109_out = mux_case_523109_fu_358;

assign mux_case_531133_out = mux_case_531133_fu_390;

assign mux_case_536_out = mux_case_536_fu_262;

assign mux_case_539157_out = mux_case_539157_fu_422;

assign mux_case_547181_out = mux_case_547181_fu_454;

assign mux_case_555205_out = mux_case_555205_fu_486;

assign mux_case_563229_out = mux_case_563229_fu_518;

assign mux_case_571253_out = mux_case_571253_fu_550;

assign mux_case_5761_out = mux_case_5761_fu_294;

assign mux_case_61688_out = mux_case_61688_fu_330;

assign mux_case_624112_out = mux_case_624112_fu_362;

assign mux_case_632136_out = mux_case_632136_fu_394;

assign mux_case_639_out = mux_case_639_fu_266;

assign mux_case_640160_out = mux_case_640160_fu_426;

assign mux_case_648184_out = mux_case_648184_fu_458;

assign mux_case_656208_out = mux_case_656208_fu_490;

assign mux_case_664232_out = mux_case_664232_fu_522;

assign mux_case_672256_out = mux_case_672256_fu_554;

assign mux_case_6864_out = mux_case_6864_fu_298;

assign mux_case_71791_out = mux_case_71791_fu_334;

assign mux_case_725115_out = mux_case_725115_fu_366;

assign mux_case_733139_out = mux_case_733139_fu_398;

assign mux_case_741163_out = mux_case_741163_fu_430;

assign mux_case_743_out = mux_case_743_fu_270;

assign mux_case_749187_out = mux_case_749187_fu_462;

assign mux_case_757211_out = mux_case_757211_fu_494;

assign mux_case_765235_out = mux_case_765235_fu_526;

assign mux_case_773259_out = mux_case_773259_fu_558;

assign mux_case_7967_out = mux_case_7967_fu_302;

assign trunc_ln42_1_fu_1173_p4 = {{weights_l3_q0[127:64]}};

assign trunc_ln42_2_fu_1187_p4 = {{weights_l3_q0[191:128]}};

assign trunc_ln42_3_fu_1201_p4 = {{weights_l3_q0[255:192]}};

assign trunc_ln42_4_fu_1215_p4 = {{weights_l3_q0[319:256]}};

assign trunc_ln42_5_fu_1229_p4 = {{weights_l3_q0[383:320]}};

assign trunc_ln42_6_fu_1243_p4 = {{weights_l3_q0[447:384]}};

assign trunc_ln42_7_fu_1257_p4 = {{weights_l3_q0[511:448]}};

assign trunc_ln42_fu_1165_p1 = weights_l3_q0[63:0];

assign w_l_plus1_T_50_fu_1183_p1 = trunc_ln42_1_fu_1173_p4;

assign w_l_plus1_T_51_fu_1197_p1 = trunc_ln42_2_fu_1187_p4;

assign w_l_plus1_T_52_fu_1211_p1 = trunc_ln42_3_fu_1201_p4;

assign w_l_plus1_T_53_fu_1225_p1 = trunc_ln42_4_fu_1215_p4;

assign w_l_plus1_T_54_fu_1239_p1 = trunc_ln42_5_fu_1229_p4;

assign w_l_plus1_T_55_fu_1253_p1 = trunc_ln42_6_fu_1243_p4;

assign w_l_plus1_T_56_fu_1267_p1 = trunc_ln42_7_fu_1257_p4;

assign w_l_plus1_T_fu_1169_p1 = trunc_ln42_fu_1165_p1;

assign weights_l3_address0 = zext_ln40_fu_1155_p1;

assign weights_l3_ce0 = weights_l3_ce0_local;

assign zext_ln40_fu_1155_p1 = ap_sig_allocacmp_i_22;

endmodule //accelerator_backProp_8_8_10_Pipeline_VITIS_LOOP_40_1
