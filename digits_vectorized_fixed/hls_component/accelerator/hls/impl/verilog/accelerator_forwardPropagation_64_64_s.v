// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_forwardPropagation_64_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read64,
        p_read191,
        p_read192,
        p_read193,
        p_read194,
        p_read195,
        p_read196,
        p_read197,
        p_read198,
        p_read199,
        p_read200,
        p_read201,
        p_read202,
        p_read203,
        p_read204,
        p_read205,
        p_read206,
        p_read207,
        p_read208,
        p_read209,
        p_read210,
        p_read211,
        p_read212,
        p_read213,
        p_read214,
        p_read215,
        p_read216,
        p_read217,
        p_read218,
        p_read219,
        p_read220,
        p_read221,
        p_read222,
        p_read223,
        p_read224,
        p_read225,
        p_read226,
        p_read227,
        p_read228,
        p_read229,
        p_read230,
        p_read231,
        p_read232,
        p_read233,
        p_read234,
        p_read235,
        p_read236,
        p_read237,
        p_read238,
        p_read239,
        p_read240,
        p_read241,
        p_read242,
        p_read243,
        p_read244,
        p_read245,
        p_read246,
        p_read247,
        p_read248,
        p_read249,
        p_read250,
        p_read251,
        p_read252,
        p_read253,
        weights_l0_address0,
        weights_l0_ce0,
        weights_l0_q0,
        biases_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        grp_fu_8485_p_din0,
        grp_fu_8485_p_din1,
        grp_fu_8485_p_opcode,
        grp_fu_8485_p_dout0,
        grp_fu_8485_p_ce,
        grp_fu_8489_p_din0,
        grp_fu_8489_p_din1,
        grp_fu_8489_p_opcode,
        grp_fu_8489_p_dout0,
        grp_fu_8489_p_ce
);

parameter    ap_ST_fsm_state1 = 69'd1;
parameter    ap_ST_fsm_state2 = 69'd2;
parameter    ap_ST_fsm_state3 = 69'd4;
parameter    ap_ST_fsm_state4 = 69'd8;
parameter    ap_ST_fsm_state5 = 69'd16;
parameter    ap_ST_fsm_state6 = 69'd32;
parameter    ap_ST_fsm_state7 = 69'd64;
parameter    ap_ST_fsm_state8 = 69'd128;
parameter    ap_ST_fsm_state9 = 69'd256;
parameter    ap_ST_fsm_state10 = 69'd512;
parameter    ap_ST_fsm_state11 = 69'd1024;
parameter    ap_ST_fsm_state12 = 69'd2048;
parameter    ap_ST_fsm_state13 = 69'd4096;
parameter    ap_ST_fsm_state14 = 69'd8192;
parameter    ap_ST_fsm_state15 = 69'd16384;
parameter    ap_ST_fsm_state16 = 69'd32768;
parameter    ap_ST_fsm_state17 = 69'd65536;
parameter    ap_ST_fsm_state18 = 69'd131072;
parameter    ap_ST_fsm_state19 = 69'd262144;
parameter    ap_ST_fsm_state20 = 69'd524288;
parameter    ap_ST_fsm_state21 = 69'd1048576;
parameter    ap_ST_fsm_state22 = 69'd2097152;
parameter    ap_ST_fsm_state23 = 69'd4194304;
parameter    ap_ST_fsm_state24 = 69'd8388608;
parameter    ap_ST_fsm_state25 = 69'd16777216;
parameter    ap_ST_fsm_state26 = 69'd33554432;
parameter    ap_ST_fsm_state27 = 69'd67108864;
parameter    ap_ST_fsm_state28 = 69'd134217728;
parameter    ap_ST_fsm_state29 = 69'd268435456;
parameter    ap_ST_fsm_state30 = 69'd536870912;
parameter    ap_ST_fsm_state31 = 69'd1073741824;
parameter    ap_ST_fsm_state32 = 69'd2147483648;
parameter    ap_ST_fsm_state33 = 69'd4294967296;
parameter    ap_ST_fsm_state34 = 69'd8589934592;
parameter    ap_ST_fsm_state35 = 69'd17179869184;
parameter    ap_ST_fsm_state36 = 69'd34359738368;
parameter    ap_ST_fsm_state37 = 69'd68719476736;
parameter    ap_ST_fsm_state38 = 69'd137438953472;
parameter    ap_ST_fsm_state39 = 69'd274877906944;
parameter    ap_ST_fsm_state40 = 69'd549755813888;
parameter    ap_ST_fsm_state41 = 69'd1099511627776;
parameter    ap_ST_fsm_state42 = 69'd2199023255552;
parameter    ap_ST_fsm_state43 = 69'd4398046511104;
parameter    ap_ST_fsm_state44 = 69'd8796093022208;
parameter    ap_ST_fsm_state45 = 69'd17592186044416;
parameter    ap_ST_fsm_state46 = 69'd35184372088832;
parameter    ap_ST_fsm_state47 = 69'd70368744177664;
parameter    ap_ST_fsm_state48 = 69'd140737488355328;
parameter    ap_ST_fsm_state49 = 69'd281474976710656;
parameter    ap_ST_fsm_state50 = 69'd562949953421312;
parameter    ap_ST_fsm_state51 = 69'd1125899906842624;
parameter    ap_ST_fsm_state52 = 69'd2251799813685248;
parameter    ap_ST_fsm_state53 = 69'd4503599627370496;
parameter    ap_ST_fsm_state54 = 69'd9007199254740992;
parameter    ap_ST_fsm_state55 = 69'd18014398509481984;
parameter    ap_ST_fsm_state56 = 69'd36028797018963968;
parameter    ap_ST_fsm_state57 = 69'd72057594037927936;
parameter    ap_ST_fsm_state58 = 69'd144115188075855872;
parameter    ap_ST_fsm_state59 = 69'd288230376151711744;
parameter    ap_ST_fsm_state60 = 69'd576460752303423488;
parameter    ap_ST_fsm_state61 = 69'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 69'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 69'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 69'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 69'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 69'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 69'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 69'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 69'd295147905179352825856;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p_read64;
input  [63:0] p_read191;
input  [63:0] p_read192;
input  [63:0] p_read193;
input  [63:0] p_read194;
input  [63:0] p_read195;
input  [63:0] p_read196;
input  [63:0] p_read197;
input  [63:0] p_read198;
input  [63:0] p_read199;
input  [63:0] p_read200;
input  [63:0] p_read201;
input  [63:0] p_read202;
input  [63:0] p_read203;
input  [63:0] p_read204;
input  [63:0] p_read205;
input  [63:0] p_read206;
input  [63:0] p_read207;
input  [63:0] p_read208;
input  [63:0] p_read209;
input  [63:0] p_read210;
input  [63:0] p_read211;
input  [63:0] p_read212;
input  [63:0] p_read213;
input  [63:0] p_read214;
input  [63:0] p_read215;
input  [63:0] p_read216;
input  [63:0] p_read217;
input  [63:0] p_read218;
input  [63:0] p_read219;
input  [63:0] p_read220;
input  [63:0] p_read221;
input  [63:0] p_read222;
input  [63:0] p_read223;
input  [63:0] p_read224;
input  [63:0] p_read225;
input  [63:0] p_read226;
input  [63:0] p_read227;
input  [63:0] p_read228;
input  [63:0] p_read229;
input  [63:0] p_read230;
input  [63:0] p_read231;
input  [63:0] p_read232;
input  [63:0] p_read233;
input  [63:0] p_read234;
input  [63:0] p_read235;
input  [63:0] p_read236;
input  [63:0] p_read237;
input  [63:0] p_read238;
input  [63:0] p_read239;
input  [63:0] p_read240;
input  [63:0] p_read241;
input  [63:0] p_read242;
input  [63:0] p_read243;
input  [63:0] p_read244;
input  [63:0] p_read245;
input  [63:0] p_read246;
input  [63:0] p_read247;
input  [63:0] p_read248;
input  [63:0] p_read249;
input  [63:0] p_read250;
input  [63:0] p_read251;
input  [63:0] p_read252;
input  [63:0] p_read253;
output  [5:0] weights_l0_address0;
output   weights_l0_ce0;
input  [4095:0] weights_l0_q0;
input  [4095:0] biases_val;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;
output  [63:0] ap_return_2;
output  [63:0] ap_return_3;
output  [63:0] ap_return_4;
output  [63:0] ap_return_5;
output  [63:0] ap_return_6;
output  [63:0] ap_return_7;
output  [63:0] ap_return_8;
output  [63:0] ap_return_9;
output  [63:0] ap_return_10;
output  [63:0] ap_return_11;
output  [63:0] ap_return_12;
output  [63:0] ap_return_13;
output  [63:0] ap_return_14;
output  [63:0] ap_return_15;
output  [63:0] ap_return_16;
output  [63:0] ap_return_17;
output  [63:0] ap_return_18;
output  [63:0] ap_return_19;
output  [63:0] ap_return_20;
output  [63:0] ap_return_21;
output  [63:0] ap_return_22;
output  [63:0] ap_return_23;
output  [63:0] ap_return_24;
output  [63:0] ap_return_25;
output  [63:0] ap_return_26;
output  [63:0] ap_return_27;
output  [63:0] ap_return_28;
output  [63:0] ap_return_29;
output  [63:0] ap_return_30;
output  [63:0] ap_return_31;
output  [63:0] ap_return_32;
output  [63:0] ap_return_33;
output  [63:0] ap_return_34;
output  [63:0] ap_return_35;
output  [63:0] ap_return_36;
output  [63:0] ap_return_37;
output  [63:0] ap_return_38;
output  [63:0] ap_return_39;
output  [63:0] ap_return_40;
output  [63:0] ap_return_41;
output  [63:0] ap_return_42;
output  [63:0] ap_return_43;
output  [63:0] ap_return_44;
output  [63:0] ap_return_45;
output  [63:0] ap_return_46;
output  [63:0] ap_return_47;
output  [63:0] ap_return_48;
output  [63:0] ap_return_49;
output  [63:0] ap_return_50;
output  [63:0] ap_return_51;
output  [63:0] ap_return_52;
output  [63:0] ap_return_53;
output  [63:0] ap_return_54;
output  [63:0] ap_return_55;
output  [63:0] ap_return_56;
output  [63:0] ap_return_57;
output  [63:0] ap_return_58;
output  [63:0] ap_return_59;
output  [63:0] ap_return_60;
output  [63:0] ap_return_61;
output  [63:0] ap_return_62;
output  [63:0] ap_return_63;
output  [63:0] grp_fu_8485_p_din0;
output  [63:0] grp_fu_8485_p_din1;
output  [0:0] grp_fu_8485_p_opcode;
input  [63:0] grp_fu_8485_p_dout0;
output   grp_fu_8485_p_ce;
output  [63:0] grp_fu_8489_p_din0;
output  [63:0] grp_fu_8489_p_din1;
output  [4:0] grp_fu_8489_p_opcode;
input  [0:0] grp_fu_8489_p_dout0;
output   grp_fu_8489_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return_0;
reg[63:0] ap_return_1;
reg[63:0] ap_return_2;
reg[63:0] ap_return_3;
reg[63:0] ap_return_4;
reg[63:0] ap_return_5;
reg[63:0] ap_return_6;
reg[63:0] ap_return_7;
reg[63:0] ap_return_8;
reg[63:0] ap_return_9;
reg[63:0] ap_return_10;
reg[63:0] ap_return_11;
reg[63:0] ap_return_12;
reg[63:0] ap_return_13;
reg[63:0] ap_return_14;
reg[63:0] ap_return_15;
reg[63:0] ap_return_16;
reg[63:0] ap_return_17;
reg[63:0] ap_return_18;
reg[63:0] ap_return_19;
reg[63:0] ap_return_20;
reg[63:0] ap_return_21;
reg[63:0] ap_return_22;
reg[63:0] ap_return_23;
reg[63:0] ap_return_24;
reg[63:0] ap_return_25;
reg[63:0] ap_return_26;
reg[63:0] ap_return_27;
reg[63:0] ap_return_28;
reg[63:0] ap_return_29;
reg[63:0] ap_return_30;
reg[63:0] ap_return_31;
reg[63:0] ap_return_32;
reg[63:0] ap_return_33;
reg[63:0] ap_return_34;
reg[63:0] ap_return_35;
reg[63:0] ap_return_36;
reg[63:0] ap_return_37;
reg[63:0] ap_return_38;
reg[63:0] ap_return_39;
reg[63:0] ap_return_40;
reg[63:0] ap_return_41;
reg[63:0] ap_return_42;
reg[63:0] ap_return_43;
reg[63:0] ap_return_44;
reg[63:0] ap_return_45;
reg[63:0] ap_return_46;
reg[63:0] ap_return_47;
reg[63:0] ap_return_48;
reg[63:0] ap_return_49;
reg[63:0] ap_return_50;
reg[63:0] ap_return_51;
reg[63:0] ap_return_52;
reg[63:0] ap_return_53;
reg[63:0] ap_return_54;
reg[63:0] ap_return_55;
reg[63:0] ap_return_56;
reg[63:0] ap_return_57;
reg[63:0] ap_return_58;
reg[63:0] ap_return_59;
reg[63:0] ap_return_60;
reg[63:0] ap_return_61;
reg[63:0] ap_return_62;
reg[63:0] ap_return_63;

(* fsm_encoding = "none" *) reg   [68:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
reg   [63:0] ref_tmp_0_load_reg_2549;
reg   [63:0] ref_tmp_0_load_1_reg_2554;
wire    ap_CS_fsm_state39;
reg   [63:0] ref_tmp_0_load_2_reg_2569;
reg   [63:0] ref_tmp_0_load_3_reg_2574;
wire    ap_CS_fsm_state40;
reg   [63:0] ref_tmp_0_load_4_reg_2589;
reg   [63:0] ref_tmp_0_load_5_reg_2594;
wire    ap_CS_fsm_state41;
reg   [63:0] ref_tmp_0_load_6_reg_2609;
reg   [63:0] ref_tmp_0_load_7_reg_2614;
wire    ap_CS_fsm_state42;
reg   [63:0] ref_tmp_0_load_8_reg_2629;
reg   [63:0] ref_tmp_0_load_9_reg_2634;
wire    ap_CS_fsm_state43;
reg   [63:0] ref_tmp_0_load_10_reg_2649;
reg   [63:0] ref_tmp_0_load_11_reg_2654;
wire    ap_CS_fsm_state44;
reg   [63:0] ref_tmp_0_load_12_reg_2669;
reg   [63:0] ref_tmp_0_load_13_reg_2674;
wire    ap_CS_fsm_state45;
reg   [63:0] ref_tmp_0_load_14_reg_2689;
reg   [63:0] ref_tmp_0_load_15_reg_2694;
wire    ap_CS_fsm_state46;
reg   [63:0] ref_tmp_0_load_16_reg_2709;
reg   [63:0] ref_tmp_0_load_17_reg_2714;
wire    ap_CS_fsm_state47;
reg   [63:0] ref_tmp_0_load_18_reg_2729;
reg   [63:0] ref_tmp_0_load_19_reg_2734;
wire    ap_CS_fsm_state48;
reg   [63:0] ref_tmp_0_load_20_reg_2749;
reg   [63:0] ref_tmp_0_load_21_reg_2754;
wire    ap_CS_fsm_state49;
reg   [63:0] ref_tmp_0_load_22_reg_2769;
reg   [63:0] ref_tmp_0_load_23_reg_2774;
wire    ap_CS_fsm_state50;
reg   [63:0] ref_tmp_0_load_24_reg_2789;
reg   [63:0] ref_tmp_0_load_25_reg_2794;
wire    ap_CS_fsm_state51;
reg   [63:0] ref_tmp_0_load_26_reg_2809;
reg   [63:0] ref_tmp_0_load_27_reg_2814;
wire    ap_CS_fsm_state52;
reg   [63:0] ref_tmp_0_load_28_reg_2829;
reg   [63:0] ref_tmp_0_load_29_reg_2834;
wire    ap_CS_fsm_state53;
reg   [63:0] ref_tmp_0_load_30_reg_2849;
reg   [63:0] ref_tmp_0_load_31_reg_2854;
wire    ap_CS_fsm_state54;
reg   [63:0] ref_tmp_0_load_32_reg_2869;
reg   [63:0] ref_tmp_0_load_33_reg_2874;
wire    ap_CS_fsm_state55;
reg   [63:0] ref_tmp_0_load_34_reg_2889;
reg   [63:0] ref_tmp_0_load_35_reg_2894;
wire    ap_CS_fsm_state56;
reg   [63:0] ref_tmp_0_load_36_reg_2909;
reg   [63:0] ref_tmp_0_load_37_reg_2914;
wire    ap_CS_fsm_state57;
reg   [63:0] ref_tmp_0_load_38_reg_2929;
reg   [63:0] ref_tmp_0_load_39_reg_2934;
wire    ap_CS_fsm_state58;
reg   [63:0] ref_tmp_0_load_40_reg_2949;
reg   [63:0] ref_tmp_0_load_41_reg_2954;
wire    ap_CS_fsm_state59;
reg   [63:0] ref_tmp_0_load_42_reg_2969;
reg   [63:0] ref_tmp_0_load_43_reg_2974;
wire    ap_CS_fsm_state60;
reg   [63:0] ref_tmp_0_load_44_reg_2989;
reg   [63:0] ref_tmp_0_load_45_reg_2994;
wire    ap_CS_fsm_state61;
reg   [63:0] ref_tmp_0_load_46_reg_3009;
reg   [63:0] ref_tmp_0_load_47_reg_3014;
wire    ap_CS_fsm_state62;
reg   [63:0] ref_tmp_0_load_48_reg_3029;
reg   [63:0] ref_tmp_0_load_49_reg_3034;
wire    ap_CS_fsm_state63;
reg   [63:0] ref_tmp_0_load_50_reg_3049;
reg   [63:0] ref_tmp_0_load_51_reg_3054;
wire    ap_CS_fsm_state64;
reg   [63:0] ref_tmp_0_load_52_reg_3069;
reg   [63:0] ref_tmp_0_load_53_reg_3074;
wire    ap_CS_fsm_state65;
reg   [63:0] ref_tmp_0_load_54_reg_3089;
reg   [63:0] ref_tmp_0_load_55_reg_3094;
wire    ap_CS_fsm_state66;
reg   [63:0] ref_tmp_0_load_56_reg_3109;
reg   [63:0] ref_tmp_0_load_57_reg_3114;
wire    ap_CS_fsm_state67;
reg   [63:0] ref_tmp_0_load_58_reg_3129;
reg   [63:0] ref_tmp_0_load_59_reg_3134;
wire    ap_CS_fsm_state68;
reg   [63:0] ref_tmp_0_load_60_reg_3149;
reg   [63:0] ref_tmp_0_load_61_reg_3154;
reg   [5:0] mid_0_address0;
reg    mid_0_ce0;
reg    mid_0_we0;
wire   [63:0] mid_0_q0;
reg    mid_0_ce1;
reg    mid_0_we1;
wire   [63:0] mid_0_q1;
reg   [5:0] net_0_address0;
reg    net_0_ce0;
reg    net_0_we0;
reg   [63:0] net_0_d0;
wire   [63:0] net_0_q0;
reg   [5:0] ref_tmp_0_address0;
reg    ref_tmp_0_ce0;
reg    ref_tmp_0_we0;
wire   [63:0] ref_tmp_0_q0;
reg   [5:0] ref_tmp_0_address1;
reg    ref_tmp_0_ce1;
reg    ref_tmp_0_we1;
wire   [63:0] ref_tmp_0_q1;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_idle;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_ready;
wire   [5:0] grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_address0;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_ce0;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_we0;
wire   [63:0] grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_d0;
wire   [5:0] grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_address1;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_ce1;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_we1;
wire   [63:0] grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_d1;
wire   [5:0] grp_matmul_64ul_64ul_1ul_s_fu_1732_weights_l0_address0;
wire    grp_matmul_64ul_64ul_1ul_s_fu_1732_weights_l0_ce0;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_done;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_idle;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_ready;
wire   [5:0] grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_mid_0_address0;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_mid_0_ce0;
wire   [5:0] grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_address0;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_ce0;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_we0;
wire   [63:0] grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_d0;
wire   [63:0] grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_din0;
wire   [63:0] grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_din1;
wire   [0:0] grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_opcode;
wire    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_ce;
wire    grp_relu_64_s_fu_1876_ap_start;
wire    grp_relu_64_s_fu_1876_ap_done;
wire    grp_relu_64_s_fu_1876_ap_idle;
wire    grp_relu_64_s_fu_1876_ap_ready;
wire   [5:0] grp_relu_64_s_fu_1876_agg_result_0_address0;
wire    grp_relu_64_s_fu_1876_agg_result_0_ce0;
wire    grp_relu_64_s_fu_1876_agg_result_0_we0;
wire   [63:0] grp_relu_64_s_fu_1876_agg_result_0_d0;
wire   [5:0] grp_relu_64_s_fu_1876_agg_result_0_address1;
wire    grp_relu_64_s_fu_1876_agg_result_0_ce1;
wire    grp_relu_64_s_fu_1876_agg_result_0_we1;
wire   [63:0] grp_relu_64_s_fu_1876_agg_result_0_d1;
wire   [5:0] grp_relu_64_s_fu_1876_net_0_address0;
wire    grp_relu_64_s_fu_1876_net_0_ce0;
wire   [63:0] grp_relu_64_s_fu_1876_grp_fu_3163_p_din0;
wire   [63:0] grp_relu_64_s_fu_1876_grp_fu_3163_p_din1;
wire   [4:0] grp_relu_64_s_fu_1876_grp_fu_3163_p_opcode;
wire    grp_relu_64_s_fu_1876_grp_fu_3163_p_ce;
reg    grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start_reg;
wire    ap_CS_fsm_state34;
reg    grp_relu_64_s_fu_1876_ap_start_reg;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
reg    net_0_we1_local;
reg    net_0_ce1_local;
reg   [5:0] net_0_address1_local;
reg    net_0_we0_local;
reg    net_0_ce0_local;
reg   [5:0] net_0_address0_local;
reg    ref_tmp_0_ce1_local;
reg   [5:0] ref_tmp_0_address1_local;
reg    ref_tmp_0_ce0_local;
reg   [5:0] ref_tmp_0_address0_local;
wire    ap_CS_fsm_state69;
reg    grp_fu_3159_ce;
reg    grp_fu_3163_ce;
reg   [63:0] ap_return_0_preg;
reg   [63:0] ap_return_1_preg;
reg   [63:0] ap_return_2_preg;
reg   [63:0] ap_return_3_preg;
reg   [63:0] ap_return_4_preg;
reg   [63:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [63:0] ap_return_7_preg;
reg   [63:0] ap_return_8_preg;
reg   [63:0] ap_return_9_preg;
reg   [63:0] ap_return_10_preg;
reg   [63:0] ap_return_11_preg;
reg   [63:0] ap_return_12_preg;
reg   [63:0] ap_return_13_preg;
reg   [63:0] ap_return_14_preg;
reg   [63:0] ap_return_15_preg;
reg   [63:0] ap_return_16_preg;
reg   [63:0] ap_return_17_preg;
reg   [63:0] ap_return_18_preg;
reg   [63:0] ap_return_19_preg;
reg   [63:0] ap_return_20_preg;
reg   [63:0] ap_return_21_preg;
reg   [63:0] ap_return_22_preg;
reg   [63:0] ap_return_23_preg;
reg   [63:0] ap_return_24_preg;
reg   [63:0] ap_return_25_preg;
reg   [63:0] ap_return_26_preg;
reg   [63:0] ap_return_27_preg;
reg   [63:0] ap_return_28_preg;
reg   [63:0] ap_return_29_preg;
reg   [63:0] ap_return_30_preg;
reg   [63:0] ap_return_31_preg;
reg   [63:0] ap_return_32_preg;
reg   [63:0] ap_return_33_preg;
reg   [63:0] ap_return_34_preg;
reg   [63:0] ap_return_35_preg;
reg   [63:0] ap_return_36_preg;
reg   [63:0] ap_return_37_preg;
reg   [63:0] ap_return_38_preg;
reg   [63:0] ap_return_39_preg;
reg   [63:0] ap_return_40_preg;
reg   [63:0] ap_return_41_preg;
reg   [63:0] ap_return_42_preg;
reg   [63:0] ap_return_43_preg;
reg   [63:0] ap_return_44_preg;
reg   [63:0] ap_return_45_preg;
reg   [63:0] ap_return_46_preg;
reg   [63:0] ap_return_47_preg;
reg   [63:0] ap_return_48_preg;
reg   [63:0] ap_return_49_preg;
reg   [63:0] ap_return_50_preg;
reg   [63:0] ap_return_51_preg;
reg   [63:0] ap_return_52_preg;
reg   [63:0] ap_return_53_preg;
reg   [63:0] ap_return_54_preg;
reg   [63:0] ap_return_55_preg;
reg   [63:0] ap_return_56_preg;
reg   [63:0] ap_return_57_preg;
reg   [63:0] ap_return_58_preg;
reg   [63:0] ap_return_59_preg;
reg   [63:0] ap_return_60_preg;
reg   [63:0] ap_return_61_preg;
reg   [63:0] ap_return_62_preg;
reg   [63:0] ap_return_63_preg;
reg   [68:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
reg    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
reg    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 69'd1;
#0 grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start_reg = 1'b0;
#0 grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start_reg = 1'b0;
#0 grp_relu_64_s_fu_1876_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 64'd0;
#0 ap_return_2_preg = 64'd0;
#0 ap_return_3_preg = 64'd0;
#0 ap_return_4_preg = 64'd0;
#0 ap_return_5_preg = 64'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 64'd0;
#0 ap_return_8_preg = 64'd0;
#0 ap_return_9_preg = 64'd0;
#0 ap_return_10_preg = 64'd0;
#0 ap_return_11_preg = 64'd0;
#0 ap_return_12_preg = 64'd0;
#0 ap_return_13_preg = 64'd0;
#0 ap_return_14_preg = 64'd0;
#0 ap_return_15_preg = 64'd0;
#0 ap_return_16_preg = 64'd0;
#0 ap_return_17_preg = 64'd0;
#0 ap_return_18_preg = 64'd0;
#0 ap_return_19_preg = 64'd0;
#0 ap_return_20_preg = 64'd0;
#0 ap_return_21_preg = 64'd0;
#0 ap_return_22_preg = 64'd0;
#0 ap_return_23_preg = 64'd0;
#0 ap_return_24_preg = 64'd0;
#0 ap_return_25_preg = 64'd0;
#0 ap_return_26_preg = 64'd0;
#0 ap_return_27_preg = 64'd0;
#0 ap_return_28_preg = 64'd0;
#0 ap_return_29_preg = 64'd0;
#0 ap_return_30_preg = 64'd0;
#0 ap_return_31_preg = 64'd0;
#0 ap_return_32_preg = 64'd0;
#0 ap_return_33_preg = 64'd0;
#0 ap_return_34_preg = 64'd0;
#0 ap_return_35_preg = 64'd0;
#0 ap_return_36_preg = 64'd0;
#0 ap_return_37_preg = 64'd0;
#0 ap_return_38_preg = 64'd0;
#0 ap_return_39_preg = 64'd0;
#0 ap_return_40_preg = 64'd0;
#0 ap_return_41_preg = 64'd0;
#0 ap_return_42_preg = 64'd0;
#0 ap_return_43_preg = 64'd0;
#0 ap_return_44_preg = 64'd0;
#0 ap_return_45_preg = 64'd0;
#0 ap_return_46_preg = 64'd0;
#0 ap_return_47_preg = 64'd0;
#0 ap_return_48_preg = 64'd0;
#0 ap_return_49_preg = 64'd0;
#0 ap_return_50_preg = 64'd0;
#0 ap_return_51_preg = 64'd0;
#0 ap_return_52_preg = 64'd0;
#0 ap_return_53_preg = 64'd0;
#0 ap_return_54_preg = 64'd0;
#0 ap_return_55_preg = 64'd0;
#0 ap_return_56_preg = 64'd0;
#0 ap_return_57_preg = 64'd0;
#0 ap_return_58_preg = 64'd0;
#0 ap_return_59_preg = 64'd0;
#0 ap_return_60_preg = 64'd0;
#0 ap_return_61_preg = 64'd0;
#0 ap_return_62_preg = 64'd0;
#0 ap_return_63_preg = 64'd0;
end

accelerator_forwardPropagation_64_64_s_mid_0_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mid_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mid_0_address0),
    .ce0(mid_0_ce0),
    .we0(mid_0_we0),
    .d0(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_d0),
    .q0(mid_0_q0),
    .address1(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_address1),
    .ce1(mid_0_ce1),
    .we1(mid_0_we1),
    .d1(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_d1),
    .q1(mid_0_q1)
);

accelerator_forwardPropagation_64_64_s_net_0_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
net_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(net_0_address0),
    .ce0(net_0_ce0),
    .we0(net_0_we0),
    .d0(net_0_d0),
    .q0(net_0_q0),
    .address1(net_0_address1_local),
    .ce1(net_0_ce1_local),
    .we1(net_0_we1_local),
    .d1(64'd0)
);

accelerator_forwardPropagation_64_64_s_mid_0_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
ref_tmp_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_tmp_0_address0),
    .ce0(ref_tmp_0_ce0),
    .we0(ref_tmp_0_we0),
    .d0(grp_relu_64_s_fu_1876_agg_result_0_d0),
    .q0(ref_tmp_0_q0),
    .address1(ref_tmp_0_address1),
    .ce1(ref_tmp_0_ce1),
    .we1(ref_tmp_0_we1),
    .d1(grp_relu_64_s_fu_1876_agg_result_0_d1),
    .q1(ref_tmp_0_q1)
);

accelerator_matmul_64ul_64ul_1ul_s grp_matmul_64ul_64ul_1ul_s_fu_1732(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start),
    .ap_done(grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done),
    .ap_idle(grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_idle),
    .ap_ready(grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_ready),
    .agg_result_0_address0(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_address0),
    .agg_result_0_ce0(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_ce0),
    .agg_result_0_we0(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_we0),
    .agg_result_0_d0(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_d0),
    .agg_result_0_address1(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_address1),
    .agg_result_0_ce1(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_ce1),
    .agg_result_0_we1(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_we1),
    .agg_result_0_d1(grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_d1),
    .agg_result_0_q1(mid_0_q1),
    .weights_l0_address0(grp_matmul_64ul_64ul_1ul_s_fu_1732_weights_l0_address0),
    .weights_l0_ce0(grp_matmul_64ul_64ul_1ul_s_fu_1732_weights_l0_ce0),
    .weights_l0_q0(weights_l0_q0),
    .B_0_read(p_read64),
    .B_0_read_291(p_read191),
    .B_0_read_292(p_read192),
    .B_0_read_293(p_read193),
    .B_0_read_294(p_read194),
    .B_0_read_295(p_read195),
    .B_0_read_296(p_read196),
    .B_0_read_297(p_read197),
    .B_0_read_298(p_read198),
    .B_0_read_299(p_read199),
    .B_0_read_300(p_read200),
    .B_0_read_301(p_read201),
    .B_0_read_302(p_read202),
    .B_0_read_303(p_read203),
    .B_0_read_304(p_read204),
    .B_0_read_305(p_read205),
    .B_0_read_306(p_read206),
    .B_0_read_307(p_read207),
    .B_0_read_308(p_read208),
    .B_0_read_309(p_read209),
    .B_0_read_310(p_read210),
    .B_0_read_311(p_read211),
    .B_0_read_312(p_read212),
    .B_0_read_313(p_read213),
    .B_0_read_314(p_read214),
    .B_0_read_315(p_read215),
    .B_0_read_316(p_read216),
    .B_0_read_317(p_read217),
    .B_0_read_318(p_read218),
    .B_0_read_319(p_read219),
    .B_0_read_320(p_read220),
    .B_0_read_321(p_read221),
    .B_0_read_322(p_read222),
    .B_0_read_323(p_read223),
    .B_0_read_324(p_read224),
    .B_0_read_325(p_read225),
    .B_0_read_326(p_read226),
    .B_0_read_327(p_read227),
    .B_0_read_328(p_read228),
    .B_0_read_329(p_read229),
    .B_0_read_330(p_read230),
    .B_0_read_331(p_read231),
    .B_0_read_332(p_read232),
    .B_0_read_333(p_read233),
    .B_0_read_334(p_read234),
    .B_0_read_335(p_read235),
    .B_0_read_336(p_read236),
    .B_0_read_337(p_read237),
    .B_0_read_338(p_read238),
    .B_0_read_339(p_read239),
    .B_0_read_340(p_read240),
    .B_0_read_341(p_read241),
    .B_0_read_342(p_read242),
    .B_0_read_343(p_read243),
    .B_0_read_344(p_read244),
    .B_0_read_345(p_read245),
    .B_0_read_346(p_read246),
    .B_0_read_347(p_read247),
    .B_0_read_348(p_read248),
    .B_0_read_349(p_read249),
    .B_0_read_350(p_read250),
    .B_0_read_351(p_read251),
    .B_0_read_352(p_read252),
    .B_0_read_353(p_read253)
);

accelerator_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1 grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start),
    .ap_done(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_done),
    .ap_idle(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_idle),
    .ap_ready(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_ready),
    .mid_0_address0(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_mid_0_address0),
    .mid_0_ce0(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_mid_0_ce0),
    .mid_0_q0(mid_0_q0),
    .biases_val(biases_val),
    .net_0_address0(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_address0),
    .net_0_ce0(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_ce0),
    .net_0_we0(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_we0),
    .net_0_d0(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_d0),
    .grp_fu_3159_p_din0(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_din0),
    .grp_fu_3159_p_din1(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_din1),
    .grp_fu_3159_p_opcode(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_opcode),
    .grp_fu_3159_p_dout0(grp_fu_8485_p_dout0),
    .grp_fu_3159_p_ce(grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_ce)
);

accelerator_relu_64_s grp_relu_64_s_fu_1876(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_relu_64_s_fu_1876_ap_start),
    .ap_done(grp_relu_64_s_fu_1876_ap_done),
    .ap_idle(grp_relu_64_s_fu_1876_ap_idle),
    .ap_ready(grp_relu_64_s_fu_1876_ap_ready),
    .agg_result_0_address0(grp_relu_64_s_fu_1876_agg_result_0_address0),
    .agg_result_0_ce0(grp_relu_64_s_fu_1876_agg_result_0_ce0),
    .agg_result_0_we0(grp_relu_64_s_fu_1876_agg_result_0_we0),
    .agg_result_0_d0(grp_relu_64_s_fu_1876_agg_result_0_d0),
    .agg_result_0_address1(grp_relu_64_s_fu_1876_agg_result_0_address1),
    .agg_result_0_ce1(grp_relu_64_s_fu_1876_agg_result_0_ce1),
    .agg_result_0_we1(grp_relu_64_s_fu_1876_agg_result_0_we1),
    .agg_result_0_d1(grp_relu_64_s_fu_1876_agg_result_0_d1),
    .net_0_address0(grp_relu_64_s_fu_1876_net_0_address0),
    .net_0_ce0(grp_relu_64_s_fu_1876_net_0_ce0),
    .net_0_q0(net_0_q0),
    .grp_fu_3163_p_din0(grp_relu_64_s_fu_1876_grp_fu_3163_p_din0),
    .grp_fu_3163_p_din1(grp_relu_64_s_fu_1876_grp_fu_3163_p_din1),
    .grp_fu_3163_p_opcode(grp_relu_64_s_fu_1876_grp_fu_3163_p_opcode),
    .grp_fu_3163_p_dout0(grp_fu_8489_p_dout0),
    .grp_fu_3163_p_ce(grp_relu_64_s_fu_1876_grp_fu_3163_p_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_0_preg <= ref_tmp_0_load_reg_2549;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_10_preg <= ref_tmp_0_load_10_reg_2649;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_11_preg <= ref_tmp_0_load_11_reg_2654;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_12_preg <= ref_tmp_0_load_12_reg_2669;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_13_preg <= ref_tmp_0_load_13_reg_2674;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_14_preg <= ref_tmp_0_load_14_reg_2689;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_15_preg <= ref_tmp_0_load_15_reg_2694;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_16_preg <= ref_tmp_0_load_16_reg_2709;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_17_preg <= ref_tmp_0_load_17_reg_2714;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_18_preg <= ref_tmp_0_load_18_reg_2729;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_19_preg <= ref_tmp_0_load_19_reg_2734;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_1_preg <= ref_tmp_0_load_1_reg_2554;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_20_preg <= ref_tmp_0_load_20_reg_2749;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_21_preg <= ref_tmp_0_load_21_reg_2754;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_22_preg <= ref_tmp_0_load_22_reg_2769;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_23_preg <= ref_tmp_0_load_23_reg_2774;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_24_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_24_preg <= ref_tmp_0_load_24_reg_2789;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_25_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_25_preg <= ref_tmp_0_load_25_reg_2794;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_26_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_26_preg <= ref_tmp_0_load_26_reg_2809;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_27_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_27_preg <= ref_tmp_0_load_27_reg_2814;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_28_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_28_preg <= ref_tmp_0_load_28_reg_2829;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_29_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_29_preg <= ref_tmp_0_load_29_reg_2834;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_2_preg <= ref_tmp_0_load_2_reg_2569;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_30_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_30_preg <= ref_tmp_0_load_30_reg_2849;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_31_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_31_preg <= ref_tmp_0_load_31_reg_2854;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_32_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_32_preg <= ref_tmp_0_load_32_reg_2869;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_33_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_33_preg <= ref_tmp_0_load_33_reg_2874;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_34_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_34_preg <= ref_tmp_0_load_34_reg_2889;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_35_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_35_preg <= ref_tmp_0_load_35_reg_2894;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_36_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_36_preg <= ref_tmp_0_load_36_reg_2909;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_37_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_37_preg <= ref_tmp_0_load_37_reg_2914;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_38_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_38_preg <= ref_tmp_0_load_38_reg_2929;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_39_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_39_preg <= ref_tmp_0_load_39_reg_2934;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_3_preg <= ref_tmp_0_load_3_reg_2574;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_40_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_40_preg <= ref_tmp_0_load_40_reg_2949;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_41_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_41_preg <= ref_tmp_0_load_41_reg_2954;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_42_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_42_preg <= ref_tmp_0_load_42_reg_2969;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_43_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_43_preg <= ref_tmp_0_load_43_reg_2974;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_44_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_44_preg <= ref_tmp_0_load_44_reg_2989;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_45_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_45_preg <= ref_tmp_0_load_45_reg_2994;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_46_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_46_preg <= ref_tmp_0_load_46_reg_3009;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_47_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_47_preg <= ref_tmp_0_load_47_reg_3014;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_48_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_48_preg <= ref_tmp_0_load_48_reg_3029;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_49_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_49_preg <= ref_tmp_0_load_49_reg_3034;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_4_preg <= ref_tmp_0_load_4_reg_2589;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_50_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_50_preg <= ref_tmp_0_load_50_reg_3049;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_51_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_51_preg <= ref_tmp_0_load_51_reg_3054;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_52_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_52_preg <= ref_tmp_0_load_52_reg_3069;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_53_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_53_preg <= ref_tmp_0_load_53_reg_3074;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_54_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_54_preg <= ref_tmp_0_load_54_reg_3089;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_55_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_55_preg <= ref_tmp_0_load_55_reg_3094;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_56_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_56_preg <= ref_tmp_0_load_56_reg_3109;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_57_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_57_preg <= ref_tmp_0_load_57_reg_3114;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_58_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_58_preg <= ref_tmp_0_load_58_reg_3129;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_59_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_59_preg <= ref_tmp_0_load_59_reg_3134;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_5_preg <= ref_tmp_0_load_5_reg_2594;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_60_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_60_preg <= ref_tmp_0_load_60_reg_3149;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_61_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_61_preg <= ref_tmp_0_load_61_reg_3154;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_62_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_62_preg <= ref_tmp_0_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_63_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_63_preg <= ref_tmp_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_6_preg <= ref_tmp_0_load_6_reg_2609;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_7_preg <= ref_tmp_0_load_7_reg_2614;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_8_preg <= ref_tmp_0_load_8_reg_2629;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            ap_return_9_preg <= ref_tmp_0_load_9_reg_2634;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state33)) begin
            grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start_reg <= 1'b1;
        end else if ((grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_ready == 1'b1)) begin
            grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start_reg <= 1'b1;
        end else if ((grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_ready == 1'b1)) begin
            grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_relu_64_s_fu_1876_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state35)) begin
            grp_relu_64_s_fu_1876_ap_start_reg <= 1'b1;
        end else if ((grp_relu_64_s_fu_1876_ap_ready == 1'b1)) begin
            grp_relu_64_s_fu_1876_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        ref_tmp_0_load_10_reg_2649 <= ref_tmp_0_q1;
        ref_tmp_0_load_11_reg_2654 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ref_tmp_0_load_12_reg_2669 <= ref_tmp_0_q1;
        ref_tmp_0_load_13_reg_2674 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        ref_tmp_0_load_14_reg_2689 <= ref_tmp_0_q1;
        ref_tmp_0_load_15_reg_2694 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ref_tmp_0_load_16_reg_2709 <= ref_tmp_0_q1;
        ref_tmp_0_load_17_reg_2714 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ref_tmp_0_load_18_reg_2729 <= ref_tmp_0_q1;
        ref_tmp_0_load_19_reg_2734 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ref_tmp_0_load_1_reg_2554 <= ref_tmp_0_q0;
        ref_tmp_0_load_reg_2549 <= ref_tmp_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        ref_tmp_0_load_20_reg_2749 <= ref_tmp_0_q1;
        ref_tmp_0_load_21_reg_2754 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ref_tmp_0_load_22_reg_2769 <= ref_tmp_0_q1;
        ref_tmp_0_load_23_reg_2774 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ref_tmp_0_load_24_reg_2789 <= ref_tmp_0_q1;
        ref_tmp_0_load_25_reg_2794 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ref_tmp_0_load_26_reg_2809 <= ref_tmp_0_q1;
        ref_tmp_0_load_27_reg_2814 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        ref_tmp_0_load_28_reg_2829 <= ref_tmp_0_q1;
        ref_tmp_0_load_29_reg_2834 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        ref_tmp_0_load_2_reg_2569 <= ref_tmp_0_q1;
        ref_tmp_0_load_3_reg_2574 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ref_tmp_0_load_30_reg_2849 <= ref_tmp_0_q1;
        ref_tmp_0_load_31_reg_2854 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        ref_tmp_0_load_32_reg_2869 <= ref_tmp_0_q1;
        ref_tmp_0_load_33_reg_2874 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        ref_tmp_0_load_34_reg_2889 <= ref_tmp_0_q1;
        ref_tmp_0_load_35_reg_2894 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        ref_tmp_0_load_36_reg_2909 <= ref_tmp_0_q1;
        ref_tmp_0_load_37_reg_2914 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ref_tmp_0_load_38_reg_2929 <= ref_tmp_0_q1;
        ref_tmp_0_load_39_reg_2934 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        ref_tmp_0_load_40_reg_2949 <= ref_tmp_0_q1;
        ref_tmp_0_load_41_reg_2954 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        ref_tmp_0_load_42_reg_2969 <= ref_tmp_0_q1;
        ref_tmp_0_load_43_reg_2974 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ref_tmp_0_load_44_reg_2989 <= ref_tmp_0_q1;
        ref_tmp_0_load_45_reg_2994 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ref_tmp_0_load_46_reg_3009 <= ref_tmp_0_q1;
        ref_tmp_0_load_47_reg_3014 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ref_tmp_0_load_48_reg_3029 <= ref_tmp_0_q1;
        ref_tmp_0_load_49_reg_3034 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ref_tmp_0_load_4_reg_2589 <= ref_tmp_0_q1;
        ref_tmp_0_load_5_reg_2594 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ref_tmp_0_load_50_reg_3049 <= ref_tmp_0_q1;
        ref_tmp_0_load_51_reg_3054 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ref_tmp_0_load_52_reg_3069 <= ref_tmp_0_q1;
        ref_tmp_0_load_53_reg_3074 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        ref_tmp_0_load_54_reg_3089 <= ref_tmp_0_q1;
        ref_tmp_0_load_55_reg_3094 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        ref_tmp_0_load_56_reg_3109 <= ref_tmp_0_q1;
        ref_tmp_0_load_57_reg_3114 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        ref_tmp_0_load_58_reg_3129 <= ref_tmp_0_q1;
        ref_tmp_0_load_59_reg_3134 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ref_tmp_0_load_60_reg_3149 <= ref_tmp_0_q1;
        ref_tmp_0_load_61_reg_3154 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ref_tmp_0_load_6_reg_2609 <= ref_tmp_0_q1;
        ref_tmp_0_load_7_reg_2614 <= ref_tmp_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ref_tmp_0_load_8_reg_2629 <= ref_tmp_0_q1;
        ref_tmp_0_load_9_reg_2634 <= ref_tmp_0_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

always @ (*) begin
    if ((grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_done == 1'b0)) begin
        ap_ST_fsm_state34_blk = 1'b1;
    end else begin
        ap_ST_fsm_state34_blk = 1'b0;
    end
end

assign ap_ST_fsm_state35_blk = 1'b0;

always @ (*) begin
    if ((grp_relu_64_s_fu_1876_ap_done == 1'b0)) begin
        ap_ST_fsm_state36_blk = 1'b1;
    end else begin
        ap_ST_fsm_state36_blk = 1'b0;
    end
end

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_0 = ref_tmp_0_load_reg_2549;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_1 = ref_tmp_0_load_1_reg_2554;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_10 = ref_tmp_0_load_10_reg_2649;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_11 = ref_tmp_0_load_11_reg_2654;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_12 = ref_tmp_0_load_12_reg_2669;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_13 = ref_tmp_0_load_13_reg_2674;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_14 = ref_tmp_0_load_14_reg_2689;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_15 = ref_tmp_0_load_15_reg_2694;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_16 = ref_tmp_0_load_16_reg_2709;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_17 = ref_tmp_0_load_17_reg_2714;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_18 = ref_tmp_0_load_18_reg_2729;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_19 = ref_tmp_0_load_19_reg_2734;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_2 = ref_tmp_0_load_2_reg_2569;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_20 = ref_tmp_0_load_20_reg_2749;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_21 = ref_tmp_0_load_21_reg_2754;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_22 = ref_tmp_0_load_22_reg_2769;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_23 = ref_tmp_0_load_23_reg_2774;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_24 = ref_tmp_0_load_24_reg_2789;
    end else begin
        ap_return_24 = ap_return_24_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_25 = ref_tmp_0_load_25_reg_2794;
    end else begin
        ap_return_25 = ap_return_25_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_26 = ref_tmp_0_load_26_reg_2809;
    end else begin
        ap_return_26 = ap_return_26_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_27 = ref_tmp_0_load_27_reg_2814;
    end else begin
        ap_return_27 = ap_return_27_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_28 = ref_tmp_0_load_28_reg_2829;
    end else begin
        ap_return_28 = ap_return_28_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_29 = ref_tmp_0_load_29_reg_2834;
    end else begin
        ap_return_29 = ap_return_29_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_3 = ref_tmp_0_load_3_reg_2574;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_30 = ref_tmp_0_load_30_reg_2849;
    end else begin
        ap_return_30 = ap_return_30_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_31 = ref_tmp_0_load_31_reg_2854;
    end else begin
        ap_return_31 = ap_return_31_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_32 = ref_tmp_0_load_32_reg_2869;
    end else begin
        ap_return_32 = ap_return_32_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_33 = ref_tmp_0_load_33_reg_2874;
    end else begin
        ap_return_33 = ap_return_33_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_34 = ref_tmp_0_load_34_reg_2889;
    end else begin
        ap_return_34 = ap_return_34_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_35 = ref_tmp_0_load_35_reg_2894;
    end else begin
        ap_return_35 = ap_return_35_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_36 = ref_tmp_0_load_36_reg_2909;
    end else begin
        ap_return_36 = ap_return_36_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_37 = ref_tmp_0_load_37_reg_2914;
    end else begin
        ap_return_37 = ap_return_37_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_38 = ref_tmp_0_load_38_reg_2929;
    end else begin
        ap_return_38 = ap_return_38_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_39 = ref_tmp_0_load_39_reg_2934;
    end else begin
        ap_return_39 = ap_return_39_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_4 = ref_tmp_0_load_4_reg_2589;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_40 = ref_tmp_0_load_40_reg_2949;
    end else begin
        ap_return_40 = ap_return_40_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_41 = ref_tmp_0_load_41_reg_2954;
    end else begin
        ap_return_41 = ap_return_41_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_42 = ref_tmp_0_load_42_reg_2969;
    end else begin
        ap_return_42 = ap_return_42_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_43 = ref_tmp_0_load_43_reg_2974;
    end else begin
        ap_return_43 = ap_return_43_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_44 = ref_tmp_0_load_44_reg_2989;
    end else begin
        ap_return_44 = ap_return_44_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_45 = ref_tmp_0_load_45_reg_2994;
    end else begin
        ap_return_45 = ap_return_45_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_46 = ref_tmp_0_load_46_reg_3009;
    end else begin
        ap_return_46 = ap_return_46_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_47 = ref_tmp_0_load_47_reg_3014;
    end else begin
        ap_return_47 = ap_return_47_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_48 = ref_tmp_0_load_48_reg_3029;
    end else begin
        ap_return_48 = ap_return_48_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_49 = ref_tmp_0_load_49_reg_3034;
    end else begin
        ap_return_49 = ap_return_49_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_5 = ref_tmp_0_load_5_reg_2594;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_50 = ref_tmp_0_load_50_reg_3049;
    end else begin
        ap_return_50 = ap_return_50_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_51 = ref_tmp_0_load_51_reg_3054;
    end else begin
        ap_return_51 = ap_return_51_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_52 = ref_tmp_0_load_52_reg_3069;
    end else begin
        ap_return_52 = ap_return_52_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_53 = ref_tmp_0_load_53_reg_3074;
    end else begin
        ap_return_53 = ap_return_53_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_54 = ref_tmp_0_load_54_reg_3089;
    end else begin
        ap_return_54 = ap_return_54_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_55 = ref_tmp_0_load_55_reg_3094;
    end else begin
        ap_return_55 = ap_return_55_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_56 = ref_tmp_0_load_56_reg_3109;
    end else begin
        ap_return_56 = ap_return_56_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_57 = ref_tmp_0_load_57_reg_3114;
    end else begin
        ap_return_57 = ap_return_57_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_58 = ref_tmp_0_load_58_reg_3129;
    end else begin
        ap_return_58 = ap_return_58_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_59 = ref_tmp_0_load_59_reg_3134;
    end else begin
        ap_return_59 = ap_return_59_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_6 = ref_tmp_0_load_6_reg_2609;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_60 = ref_tmp_0_load_60_reg_3149;
    end else begin
        ap_return_60 = ap_return_60_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_61 = ref_tmp_0_load_61_reg_3154;
    end else begin
        ap_return_61 = ap_return_61_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_62 = ref_tmp_0_q1;
    end else begin
        ap_return_62 = ap_return_62_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_63 = ref_tmp_0_q0;
    end else begin
        ap_return_63 = ap_return_63_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_7 = ref_tmp_0_load_7_reg_2614;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_8 = ref_tmp_0_load_8_reg_2629;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        ap_return_9 = ref_tmp_0_load_9_reg_2634;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_3159_ce = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_ce;
    end else begin
        grp_fu_3159_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_3163_ce = grp_relu_64_s_fu_1876_grp_fu_3163_p_ce;
    end else begin
        grp_fu_3163_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        mid_0_address0 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_mid_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mid_0_address0 = grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_address0;
    end else begin
        mid_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        mid_0_ce0 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_mid_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mid_0_ce0 = grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_ce0;
    end else begin
        mid_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mid_0_ce1 = grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_ce1;
    end else begin
        mid_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mid_0_we0 = grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_we0;
    end else begin
        mid_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mid_0_we1 = grp_matmul_64ul_64ul_1ul_s_fu_1732_agg_result_0_we1;
    end else begin
        mid_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        net_0_address0 = grp_relu_64_s_fu_1876_net_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        net_0_address0 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_address0;
    end else begin
        net_0_address0 = net_0_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        net_0_address0_local = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        net_0_address0_local = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        net_0_address0_local = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        net_0_address0_local = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        net_0_address0_local = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        net_0_address0_local = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        net_0_address0_local = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        net_0_address0_local = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        net_0_address0_local = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        net_0_address0_local = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        net_0_address0_local = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        net_0_address0_local = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        net_0_address0_local = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        net_0_address0_local = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        net_0_address0_local = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        net_0_address0_local = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        net_0_address0_local = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        net_0_address0_local = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        net_0_address0_local = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        net_0_address0_local = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        net_0_address0_local = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        net_0_address0_local = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        net_0_address0_local = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        net_0_address0_local = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        net_0_address0_local = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        net_0_address0_local = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        net_0_address0_local = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        net_0_address0_local = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        net_0_address0_local = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        net_0_address0_local = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        net_0_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        net_0_address0_local = 64'd1;
    end else begin
        net_0_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        net_0_address1_local = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        net_0_address1_local = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        net_0_address1_local = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        net_0_address1_local = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        net_0_address1_local = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        net_0_address1_local = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        net_0_address1_local = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        net_0_address1_local = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        net_0_address1_local = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        net_0_address1_local = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        net_0_address1_local = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        net_0_address1_local = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        net_0_address1_local = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        net_0_address1_local = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        net_0_address1_local = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        net_0_address1_local = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        net_0_address1_local = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        net_0_address1_local = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        net_0_address1_local = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        net_0_address1_local = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        net_0_address1_local = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        net_0_address1_local = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        net_0_address1_local = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        net_0_address1_local = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        net_0_address1_local = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        net_0_address1_local = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        net_0_address1_local = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        net_0_address1_local = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        net_0_address1_local = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        net_0_address1_local = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        net_0_address1_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        net_0_address1_local = 64'd0;
    end else begin
        net_0_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        net_0_ce0 = grp_relu_64_s_fu_1876_net_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        net_0_ce0 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_ce0;
    end else begin
        net_0_ce0 = net_0_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        net_0_ce0_local = 1'b1;
    end else begin
        net_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        net_0_ce1_local = 1'b1;
    end else begin
        net_0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        net_0_d0 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_d0;
    end else begin
        net_0_d0 = 64'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        net_0_we0 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_net_0_we0;
    end else begin
        net_0_we0 = net_0_we0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        net_0_we0_local = 1'b1;
    end else begin
        net_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        net_0_we1_local = 1'b1;
    end else begin
        net_0_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ref_tmp_0_address0 = grp_relu_64_s_fu_1876_agg_result_0_address0;
    end else begin
        ref_tmp_0_address0 = ref_tmp_0_address0_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ref_tmp_0_address0_local = 64'd63;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        ref_tmp_0_address0_local = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        ref_tmp_0_address0_local = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        ref_tmp_0_address0_local = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        ref_tmp_0_address0_local = 64'd55;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        ref_tmp_0_address0_local = 64'd53;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        ref_tmp_0_address0_local = 64'd51;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        ref_tmp_0_address0_local = 64'd49;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        ref_tmp_0_address0_local = 64'd47;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ref_tmp_0_address0_local = 64'd45;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ref_tmp_0_address0_local = 64'd43;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        ref_tmp_0_address0_local = 64'd41;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        ref_tmp_0_address0_local = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ref_tmp_0_address0_local = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ref_tmp_0_address0_local = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ref_tmp_0_address0_local = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ref_tmp_0_address0_local = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ref_tmp_0_address0_local = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ref_tmp_0_address0_local = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ref_tmp_0_address0_local = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        ref_tmp_0_address0_local = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ref_tmp_0_address0_local = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ref_tmp_0_address0_local = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        ref_tmp_0_address0_local = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        ref_tmp_0_address0_local = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        ref_tmp_0_address0_local = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        ref_tmp_0_address0_local = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        ref_tmp_0_address0_local = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ref_tmp_0_address0_local = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        ref_tmp_0_address0_local = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ref_tmp_0_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        ref_tmp_0_address0_local = 64'd1;
    end else begin
        ref_tmp_0_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ref_tmp_0_address1 = grp_relu_64_s_fu_1876_agg_result_0_address1;
    end else begin
        ref_tmp_0_address1 = ref_tmp_0_address1_local;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        ref_tmp_0_address1_local = 64'd62;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        ref_tmp_0_address1_local = 64'd60;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        ref_tmp_0_address1_local = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        ref_tmp_0_address1_local = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        ref_tmp_0_address1_local = 64'd54;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        ref_tmp_0_address1_local = 64'd52;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        ref_tmp_0_address1_local = 64'd50;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        ref_tmp_0_address1_local = 64'd48;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        ref_tmp_0_address1_local = 64'd46;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        ref_tmp_0_address1_local = 64'd44;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        ref_tmp_0_address1_local = 64'd42;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        ref_tmp_0_address1_local = 64'd40;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        ref_tmp_0_address1_local = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        ref_tmp_0_address1_local = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        ref_tmp_0_address1_local = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        ref_tmp_0_address1_local = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        ref_tmp_0_address1_local = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        ref_tmp_0_address1_local = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        ref_tmp_0_address1_local = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        ref_tmp_0_address1_local = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        ref_tmp_0_address1_local = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        ref_tmp_0_address1_local = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        ref_tmp_0_address1_local = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        ref_tmp_0_address1_local = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        ref_tmp_0_address1_local = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        ref_tmp_0_address1_local = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        ref_tmp_0_address1_local = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        ref_tmp_0_address1_local = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ref_tmp_0_address1_local = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        ref_tmp_0_address1_local = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        ref_tmp_0_address1_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        ref_tmp_0_address1_local = 64'd0;
    end else begin
        ref_tmp_0_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ref_tmp_0_ce0 = grp_relu_64_s_fu_1876_agg_result_0_ce0;
    end else begin
        ref_tmp_0_ce0 = ref_tmp_0_ce0_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        ref_tmp_0_ce0_local = 1'b1;
    end else begin
        ref_tmp_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ref_tmp_0_ce1 = grp_relu_64_s_fu_1876_agg_result_0_ce1;
    end else begin
        ref_tmp_0_ce1 = ref_tmp_0_ce1_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        ref_tmp_0_ce1_local = 1'b1;
    end else begin
        ref_tmp_0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ref_tmp_0_we0 = grp_relu_64_s_fu_1876_agg_result_0_we0;
    end else begin
        ref_tmp_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ref_tmp_0_we1 = grp_relu_64_s_fu_1876_agg_result_0_we1;
    end else begin
        ref_tmp_0_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_relu_64_s_fu_1876_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_ap_start_reg;

assign grp_fu_8485_p_ce = grp_fu_3159_ce;

assign grp_fu_8485_p_din0 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_din0;

assign grp_fu_8485_p_din1 = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_din1;

assign grp_fu_8485_p_opcode = grp_forwardPropagation_64_64_Pipeline_VITIS_LOOP_161_1_fu_1868_grp_fu_3159_p_opcode;

assign grp_fu_8489_p_ce = grp_fu_3163_ce;

assign grp_fu_8489_p_din0 = grp_relu_64_s_fu_1876_grp_fu_3163_p_din0;

assign grp_fu_8489_p_din1 = grp_relu_64_s_fu_1876_grp_fu_3163_p_din1;

assign grp_fu_8489_p_opcode = grp_relu_64_s_fu_1876_grp_fu_3163_p_opcode;

assign grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start = grp_matmul_64ul_64ul_1ul_s_fu_1732_ap_start_reg;

assign grp_relu_64_s_fu_1876_ap_start = grp_relu_64_s_fu_1876_ap_start_reg;

assign weights_l0_address0 = grp_matmul_64ul_64ul_1ul_s_fu_1732_weights_l0_address0;

assign weights_l0_ce0 = grp_matmul_64ul_64ul_1ul_s_fu_1732_weights_l0_ce0;

endmodule //accelerator_forwardPropagation_64_64_s
