remark: ../accelerator.cpp:24:0: Disaggregating variable 'weights_l3'
remark: <unknown>:0:0: Disaggregating variable 'weights_l1'
remark: <unknown>:0:0: Disaggregating variable 'weights_l0'
remark: <unknown>:0:0: Disaggregating variable 'y_true'
remark: <unknown>:0:0: Disaggregating variable 'input'
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:16: Duplicating function 'std::__array_traits<std::array<double, 8ul>, 8ul>::_S_ref(std::array<double, 8ul> const (&) [8], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:16: Duplicating function 'std::__array_traits<std::array<double, 8ul>, 8ul>::_S_ref(std::array<double, 8ul> const (&) [8], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<std::array<double, 1ul>, 64ul>, 1797ul>::_S_ref(std::array<std::array<double, 1ul>, 64ul> const (&) [1797], unsigned long)' into 'std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 64ul>, 64ul>::_S_ref(std::array<double, 64ul> const (&) [64], unsigned long)' into 'std::array<std::array<double, 64ul>, 64ul>::operator[](unsigned long) const (.268)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 1ul>, 64ul>::_S_ref(std::array<double, 1ul> const (&) [64], unsigned long)' into 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) (.4)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<double, 1ul>::_S_ref(double const (&) [1], unsigned long)' into 'std::array<double, 1ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<double, 64ul>::_S_ref(double const (&) [64], unsigned long)' into 'std::array<double, 64ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 1ul>, 64ul>::_S_ref(std::array<double, 1ul> const (&) [64], unsigned long)' into 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) const (.154)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<double, 1ul>::_S_ref(double const (&) [1], unsigned long)' into 'std::array<double, 1ul>::operator[](unsigned long) const'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 64ul>, 64ul>::operator[](unsigned long) const (.268)' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 64ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) (.4)' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 64ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 64ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 64ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) const (.154)' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 64ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 64ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<double, 64ul>::_S_ref(double const (&) [64], unsigned long)' into 'std::array<double, 64ul>::operator[](unsigned long)'
remark: ../activation.cpp:11:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) (.4)' into 'std::array<std::array<double, 1ul>, 64> relu<64>(std::array<std::array<double, 1ul>, 64>&)'
remark: ../activation.cpp:11:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 64> relu<64>(std::array<std::array<double, 1ul>, 64>&)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) (.4)' into 'std::array<std::array<double, 1ul>, 64> forwardPropagation<64, 64>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 64> forwardPropagation<64, 64>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 64> forwardPropagation<64, 64>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 64ul>, 8ul>::_S_ref(std::array<double, 64ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 64ul>, 8ul>::operator[](unsigned long) const (.248)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 1ul>, 8ul>::_S_ref(std::array<double, 1ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 64ul>, 8ul>::operator[](unsigned long) const (.248)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) const (.154)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<double, 8ul>::_S_ref(double const (&) [8], unsigned long)' into 'std::array<double, 8ul>::operator[](unsigned long)'
remark: ../activation.cpp:11:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8> relu<8>(std::array<std::array<double, 1ul>, 8>&)'
remark: ../activation.cpp:11:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> relu<8>(std::array<std::array<double, 1ul>, 8>&)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 8> relu<8>(std::array<std::array<double, 1ul>, 8>&)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<double, 1ul>, 64>&, std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 8ul>::_S_ref(std::array<double, 8ul> const (&) [8], unsigned long) (.294)' into 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<double, 8ul>::_S_ref(double const (&) [8], unsigned long)' into 'std::array<double, 8ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 1ul>, 8ul>::_S_ref(std::array<double, 1ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<8, 8>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<8, 8>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<8, 8>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<8, 8>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 8> relu<8>(std::array<std::array<double, 1ul>, 8>&)' into 'std::array<std::array<double, 1ul>, 8> forwardPropagation<8, 8>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 10ul>::_S_ref(std::array<double, 8ul> const (&) [10], unsigned long)' into 'std::array<std::array<double, 8ul>, 10ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 1ul>, 10ul>::_S_ref(std::array<double, 1ul> const (&) [10], unsigned long)' into 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 10ul> matmul<10ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 10ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10ul> matmul<10ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 10ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10ul> matmul<10ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 10ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 10ul> matmul<10ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 10ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'std::array<std::array<double, 1ul>, 10ul> matmul<10ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 10ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 10ul> matmul<10ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 10ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<double, 10ul>::_S_ref(double const (&) [10], unsigned long)' into 'std::array<double, 10ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 10ul>, 1ul>::_S_ref(std::array<double, 10ul> const (&) [1], unsigned long)' into 'std::array<std::array<double, 10ul>, 1ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 1ul>, 10ul>::_S_ref(std::array<double, 1ul> const (&) [10], unsigned long)' into 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long) const'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 10ul>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 10ul>, 1ul> transpose<10ul, 1ul>(std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 10ul>, 1ul> transpose<10ul, 1ul>(std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 10ul>, 1ul> transpose<10ul, 1ul>(std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 10ul>::operator[](unsigned long)' into 'std::array<std::array<double, 10ul>, 1ul> transpose<10ul, 1ul>(std::array<std::array<double, 1ul>, 10ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:235:0: Inlining function 'std::__array_traits<std::array<double, 1ul>, 10ul>::_S_ptr(std::array<double, 1ul> const (&) [10])' into 'std::array<std::array<double, 1ul>, 10ul>::data() (.72)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:127:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::data() (.72)' into 'std::array<std::array<double, 1ul>, 10ul>::begin()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:135:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::data() (.72)' into 'std::array<std::array<double, 1ul>, 10ul>::end()'
remark: ../activation.cpp:84:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)::operator()(std::array<double, 1ul> const&, std::array<double, 1ul> const&) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/predefined_ops.h:143:0: Inlining function 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)::operator()(std::array<double, 1ul> const&, std::array<double, 1ul> const&) const' into 'bool __gnu_cxx::__ops::_Iter_comp_iter<std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)>::operator()<std::array<double, 1ul>*, std::array<double, 1ul>*>(std::array<double, 1ul>*, std::array<double, 1ul>*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5655:0: Inlining function 'bool __gnu_cxx::__ops::_Iter_comp_iter<std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)>::operator()<std::array<double, 1ul>*, std::array<double, 1ul>*>(std::array<double, 1ul>*, std::array<double, 1ul>*)' into 'std::array<double, 1ul>* std::__max_element<std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)> >(std::array<double, 1ul>*, std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)>)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5701:0: Inlining function 'std::array<double, 1ul>* std::__max_element<std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)> >(std::array<double, 1ul>*, std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)>)' into 'std::array<double, 1ul>* std::max_element<std::array<double, 1ul>*, std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)>(std::array<double, 1ul>*, std::array<double, 1ul>*, std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&))'
remark: C:\scratch\2024.1\hls_product\545\2024.1\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:494:0: Inlining function 'fp_struct<double>::data() const' into 'fp_struct<double>::to_double() const'
remark: C:\scratch\2024.1\hls_product\545\2024.1\src\shared\hls\clib/src/hls\utils/x_hls_utils.h:509:0: Inlining function 'fp_struct<double>::to_double() const' into 'fp_struct<double>::to_ieee() const'
remark: C:\scratch\2024.1\hls_product\545\2024.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0: Inlining function 'fp_struct<double>::fp_struct(double)' into 'double generic_copysign<double>(double, double)'
remark: C:\scratch\2024.1\hls_product\545\2024.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_copysign.h:10:0: Inlining function 'fp_struct<double>::to_ieee() const' into 'double generic_copysign<double>(double, double)'
remark: C:\scratch\2024.1\hls_product\545\2024.1\src\shared\hls\clib/hlsmath/include/FloatingPoint/hls_fabs.h:12:0: Inlining function 'double generic_copysign<double>(double, double)' into 'double generic_fabs<double>(double)'
remark: C:\scratch\2024.1\hls_product\545\2024.1\src\shared\hls\clib\hlsmath\src\c\fabsdouble.cpp:7:0: Inlining function 'double generic_fabs<double>(double)' into 'fabs'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\cmath:593:0: Inlining function 'fabs' into 'std::isinf(double)'
remark: ../activation.cpp:58:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::begin()' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)'
remark: ../activation.cpp:58:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::end()' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)'
remark: ../activation.cpp:58:0: Inlining function 'std::array<double, 1ul>* std::max_element<std::array<double, 1ul>*, std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&)>(std::array<double, 1ul>*, std::array<double, 1ul>*, std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)::'lambda'(std::array<double, 1ul> const&, std::array<double, 1ul> const&))' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)'
remark: ../activation.cpp:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)'
remark: ../activation.cpp:58:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)'
remark: ../activation.cpp:58:0: Inlining function 'std::isinf(double)' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)'
remark: ../activation.cpp:58:0: Inlining function 'std::isnan(double)' into 'std::array<std::array<double, 1ul>, 10> softmax<10>(std::array<std::array<double, 1ul>, 10>&)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul> matmul<10ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 10ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)' into 'std::array<std::array<double, 1ul>, 10> forwardPropagation<8, 10>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10> forwardPropagation<8, 10>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 10ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10> forwardPropagation<8, 10>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10> forwardPropagation<8, 10>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 10ul>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 10> forwardPropagation<8, 10>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, int)'
remark: ../layer.h:153:0: Inlining function 'std::array<std::array<double, 10ul>, 1ul> transpose<10ul, 1ul>(std::array<std::array<double, 1ul>, 10ul> const&)' into 'std::array<std::array<double, 1ul>, 10> forwardPropagation<8, 10>(std::array<std::array<double, 1ul>, 8>&, std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, int)'
remark: ../accelerator.cpp:54:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0::operator()(std::array<double, 1ul> const&, std::array<double, 1ul> const&) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/predefined_ops.h:143:0: Inlining function 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0::operator()(std::array<double, 1ul> const&, std::array<double, 1ul> const&) const' into 'bool __gnu_cxx::__ops::_Iter_comp_iter<accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0>::operator()<std::array<double, 1ul>*, std::array<double, 1ul>*>(std::array<double, 1ul>*, std::array<double, 1ul>*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5655:0: Inlining function 'bool __gnu_cxx::__ops::_Iter_comp_iter<accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0>::operator()<std::array<double, 1ul>*, std::array<double, 1ul>*>(std::array<double, 1ul>*, std::array<double, 1ul>*)' into 'std::array<double, 1ul>* std::__max_element<std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0> >(std::array<double, 1ul>*, std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0>)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5701:0: Inlining function 'std::array<double, 1ul>* std::__max_element<std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0> >(std::array<double, 1ul>*, std::array<double, 1ul>*, __gnu_cxx::__ops::_Iter_comp_iter<accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0>)' into 'std::array<double, 1ul>* std::max_element<std::array<double, 1ul>*, accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0>(std::array<double, 1ul>*, std::array<double, 1ul>*, accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_iterator_base_funcs.h:139:0: Inlining function 'std::iterator_traits<std::array<double, 1ul>*>::difference_type std::__distance<std::array<double, 1ul>*>(std::array<double, 1ul>*, std::array<double, 1ul>*, std::random_access_iterator_tag)' into 'std::iterator_traits<std::array<double, 1ul>*>::difference_type std::distance<std::array<double, 1ul>*>(std::array<double, 1ul>*, std::array<double, 1ul>*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 10ul>, 1797ul>::_S_ref(std::array<double, 10ul> const (&) [1797], unsigned long)' into 'std::array<std::array<double, 10ul>, 1797ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:239:0: Inlining function 'std::__array_traits<double, 10ul>::_S_ptr(double const (&) [10])' into 'std::array<double, 10ul>::data() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:131:0: Inlining function 'std::array<double, 10ul>::data() const' into 'std::array<double, 10ul>::begin() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:139:0: Inlining function 'std::array<double, 10ul>::data() const' into 'std::array<double, 10ul>::end() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5655:0: Inlining function 'bool __gnu_cxx::__ops::_Iter_less_iter::operator()<double const*, double const*>(double const*, double const*) const' into 'double const* std::__max_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>(double const*, double const*, __gnu_cxx::__ops::_Iter_less_iter)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5675:0: Inlining function 'double const* std::__max_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>(double const*, double const*, __gnu_cxx::__ops::_Iter_less_iter)' into 'double const* std::max_element<double const*>(double const*, double const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_iterator_base_funcs.h:139:0: Inlining function 'std::iterator_traits<double const*>::difference_type std::__distance<double const*>(double const*, double const*, std::random_access_iterator_tag)' into 'std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<double, 10ul>::_S_ref(double const (&) [10], unsigned long)' into 'std::array<double, 10ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 10ul>, 8ul>::_S_ref(std::array<double, 10ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 10ul>, 8ul>::operator[](unsigned long)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 8ul>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 10ul>, 8ul> transpose<10ul, 8ul>(std::array<std::array<double, 8ul>, 10ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 10ul>, 8ul> transpose<10ul, 8ul>(std::array<std::array<double, 8ul>, 10ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 10ul>, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 10ul>, 8ul> transpose<10ul, 8ul>(std::array<std::array<double, 8ul>, 10ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 10ul>::operator[](unsigned long)' into 'std::array<std::array<double, 10ul>, 8ul> transpose<10ul, 8ul>(std::array<std::array<double, 8ul>, 10ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 10ul>, 8ul>::_S_ref(std::array<double, 10ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 10ul>, 8ul>::operator[](unsigned long) const'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 10ul>, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 10ul, 1ul>(std::array<std::array<double, 10ul>, 8ul> const&, std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 10ul, 1ul>(std::array<std::array<double, 10ul>, 8ul> const&, std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 10ul, 1ul>(std::array<std::array<double, 10ul>, 8ul> const&, std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 10ul, 1ul>(std::array<std::array<double, 10ul>, 8ul> const&, std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 10ul, 1ul>(std::array<std::array<double, 10ul>, 8ul> const&, std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 10ul, 1ul>(std::array<std::array<double, 10ul>, 8ul> const&, std::array<std::array<double, 1ul>, 10ul> const&)'
remark: ../activation.cpp:20:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8> derivative_relu<8>(std::array<std::array<double, 1ul>, 8>&)'
remark: ../activation.cpp:20:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> derivative_relu<8>(std::array<std::array<double, 1ul>, 8>&)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 10ul>, 8ul> transpose<10ul, 8ul>(std::array<std::array<double, 8ul>, 10ul> const&)' into 'std::array<std::array<double, 1ul>, 8> backProp<8, 8, 10>(std::array<std::array<double, 8>, 10> const&, std::array<std::array<double, 1ul>, 10> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 8>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 10ul, 1ul>(std::array<std::array<double, 10ul>, 8ul> const&, std::array<std::array<double, 1ul>, 10ul> const&)' into 'std::array<std::array<double, 1ul>, 8> backProp<8, 8, 10>(std::array<std::array<double, 8>, 10> const&, std::array<std::array<double, 1ul>, 10> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 8>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&) (.25)' into 'std::array<std::array<double, 1ul>, 8> backProp<8, 8, 10>(std::array<std::array<double, 8>, 10> const&, std::array<std::array<double, 1ul>, 10> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 8>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8> backProp<8, 8, 10>(std::array<std::array<double, 8>, 10> const&, std::array<std::array<double, 1ul>, 10> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 8>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8> backProp<8, 8, 10>(std::array<std::array<double, 8>, 10> const&, std::array<std::array<double, 1ul>, 10> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 8>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> backProp<8, 8, 10>(std::array<std::array<double, 8>, 10> const&, std::array<std::array<double, 1ul>, 10> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 8>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8> derivative_relu<8>(std::array<std::array<double, 1ul>, 8>&)' into 'std::array<std::array<double, 1ul>, 8> backProp<8, 8, 10>(std::array<std::array<double, 8>, 10> const&, std::array<std::array<double, 1ul>, 10> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 8>, 8> const&, std::array<double, 8> const&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 8ul>::_S_ref(std::array<double, 8ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) (.103)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 8ul> transpose<8ul, 8ul>(std::array<std::array<double, 8ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 8ul> transpose<8ul, 8ul>(std::array<std::array<double, 8ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) (.103)' into 'std::array<std::array<double, 8ul>, 8ul> transpose<8ul, 8ul>(std::array<std::array<double, 8ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 8ul>, 8ul> transpose<8ul, 8ul>(std::array<std::array<double, 8ul>, 8ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 8ul>::_S_ref(std::array<double, 8ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) const (.99)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) const (.99)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul> transpose<8ul, 8ul>(std::array<std::array<double, 8ul>, 8ul> const&)' into 'std::array<std::array<double, 1ul>, 8> backProp<64, 8, 8>(std::array<std::array<double, 8>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 8ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)' into 'std::array<std::array<double, 1ul>, 8> backProp<64, 8, 8>(std::array<std::array<double, 8>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<double, 64ul>, 8ul> const&, std::array<std::array<double, 1ul>, 64ul> const&)' into 'std::array<std::array<double, 1ul>, 8> backProp<64, 8, 8>(std::array<std::array<double, 8>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) (.14)' into 'std::array<std::array<double, 1ul>, 8> backProp<64, 8, 8>(std::array<std::array<double, 8>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 8> backProp<64, 8, 8>(std::array<std::array<double, 8>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 8> backProp<64, 8, 8>(std::array<std::array<double, 8>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 8> const&, std::array<double, 8> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 8> derivative_relu<8>(std::array<std::array<double, 1ul>, 8>&)' into 'std::array<std::array<double, 1ul>, 8> backProp<64, 8, 8>(std::array<std::array<double, 8>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 8> const&, std::array<double, 8> const&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 64ul>::_S_ref(std::array<double, 8ul> const (&) [64], unsigned long)' into 'std::array<std::array<double, 8ul>, 64ul>::operator[](unsigned long)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 64ul>, 8ul>::operator[](unsigned long) const (.248)' into 'std::array<std::array<double, 8ul>, 64ul> transpose<8ul, 64ul>(std::array<std::array<double, 64ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 64ul> transpose<8ul, 64ul>(std::array<std::array<double, 64ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 8ul>, 64ul>::operator[](unsigned long)' into 'std::array<std::array<double, 8ul>, 64ul> transpose<8ul, 64ul>(std::array<std::array<double, 64ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 8ul>, 64ul> transpose<8ul, 64ul>(std::array<std::array<double, 64ul>, 8ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 64ul>::_S_ref(std::array<double, 8ul> const (&) [64], unsigned long)' into 'std::array<std::array<double, 8ul>, 64ul>::operator[](unsigned long) const'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 64ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) (.4)' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 64ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 64ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 64ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 64ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 64ul> matmul<64ul, 8ul, 1ul>(std::array<std::array<double, 8ul>, 64ul> const&, std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../activation.cpp:20:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) (.4)' into 'std::array<std::array<double, 1ul>, 64> derivative_relu<64>(std::array<std::array<double, 1ul>, 64>&)'
remark: ../activation.cpp:20:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 64> derivative_relu<64>(std::array<std::array<double, 1ul>, 64>&)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 8ul>, 64ul> transpose<8ul, 64ul>(std::array<std::array<double, 64ul>, 8ul> const&)' into 'std::array<std::array<double, 1ul>, 64> backProp<64, 64, 8>(std::array<std::array<double, 64>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 64> const&, std::array<double, 64> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) (.4)' into 'std::array<std::array<double, 1ul>, 64> backProp<64, 64, 8>(std::array<std::array<double, 64>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 64> const&, std::array<double, 64> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 1ul>, 64> backProp<64, 64, 8>(std::array<std::array<double, 64>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 64> const&, std::array<double, 64> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'std::array<std::array<double, 1ul>, 64> backProp<64, 64, 8>(std::array<std::array<double, 64>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 64> const&, std::array<double, 64> const&, int)'
remark: ../layer.h:257:0: Inlining function 'std::array<std::array<double, 1ul>, 64> derivative_relu<64>(std::array<std::array<double, 1ul>, 64>&)' into 'std::array<std::array<double, 1ul>, 64> backProp<64, 64, 8>(std::array<std::array<double, 64>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 64>, 64> const&, std::array<double, 64> const&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 1ul>::_S_ref(std::array<double, 8ul> const (&) [1], unsigned long)' into 'std::array<std::array<double, 8ul>, 1ul>::operator[](unsigned long) (.124)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 8ul>, 1ul>::operator[](unsigned long) (.124)' into 'std::array<std::array<double, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'std::array<std::array<double, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<double, 1ul>, 8ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<double, 1ul>, 8ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 1ul>::_S_ref(std::array<double, 8ul> const (&) [1], unsigned long)' into 'std::array<std::array<double, 8ul>, 1ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 10ul>::_S_ref(std::array<double, 8ul> const (&) [10], unsigned long)' into 'std::array<std::array<double, 8ul>, 10ul>::operator[](unsigned long)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 10ul> matmul<10ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 10ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 10ul> matmul<10ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 10ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<double, 8ul>, 10ul> matmul<10ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 10ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 10ul> matmul<10ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 10ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 8ul>, 10ul> matmul<10ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 10ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 10ul> matmul<10ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 10ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<double, 1ul>, 8ul> const&)' into 'void updateWeightBias<8, 10>(std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 10> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 8ul>, 10ul>::operator[](unsigned long)' into 'void updateWeightBias<8, 10>(std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 10> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'void updateWeightBias<8, 10>(std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 10> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 10ul>::operator[](unsigned long)' into 'void updateWeightBias<8, 10>(std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 10> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long) const' into 'void updateWeightBias<8, 10>(std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 10> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'void updateWeightBias<8, 10>(std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 10> const&, double)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 8ul> matmul<8ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'std::array<std::array<double, 8ul>, 8ul> matmul<8ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) (.103)' into 'std::array<std::array<double, 8ul>, 8ul> matmul<8ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 8ul> matmul<8ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 8ul>, 8ul> matmul<8ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 8ul>, 8ul> matmul<8ul, 1ul, 8ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 8ul>, 1ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 8ul>, 8ul>::_S_ref(std::array<double, 8ul> const (&) [8], unsigned long) (.294)' into 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<double, 1ul>, 8ul> const&)' into 'void updateWeightBias<8, 8>(std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long)' into 'void updateWeightBias<8, 8>(std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 8ul>, 8ul>::operator[](unsigned long) (.103)' into 'void updateWeightBias<8, 8>(std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'void updateWeightBias<8, 8>(std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'void updateWeightBias<8, 8>(std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'void updateWeightBias<8, 8>(std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 64ul>, 1ul>::_S_ref(std::array<double, 64ul> const (&) [1], unsigned long)' into 'std::array<std::array<double, 64ul>, 1ul>::operator[](unsigned long) (.142)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 64ul>, 1ul>::operator[](unsigned long) (.142)' into 'std::array<std::array<double, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) const (.154)' into 'std::array<std::array<double, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<double, 1ul>, 64ul> const&)'
remark: ../layer.h:36:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long)' into 'std::array<std::array<double, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<double, 1ul>, 64ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<double, 64ul>, 1ul>::_S_ref(std::array<double, 64ul> const (&) [1], unsigned long)' into 'std::array<std::array<double, 64ul>, 1ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 64ul>, 8ul>::_S_ref(std::array<double, 64ul> const (&) [8], unsigned long)' into 'std::array<std::array<double, 64ul>, 8ul>::operator[](unsigned long)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 64ul>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'std::array<std::array<double, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 64ul>, 8ul>::operator[](unsigned long)' into 'std::array<std::array<double, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long)' into 'std::array<std::array<double, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 8ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<double, 1ul>, 64ul> const&)' into 'void updateWeightBias<64, 8>(std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 64ul>, 8ul>::operator[](unsigned long)' into 'void updateWeightBias<64, 8>(std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long)' into 'void updateWeightBias<64, 8>(std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 8ul>::operator[](unsigned long)' into 'void updateWeightBias<64, 8>(std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 1ul>, 8ul>::operator[](unsigned long) const (.161)' into 'void updateWeightBias<64, 8>(std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'void updateWeightBias<64, 8>(std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 8> const&, double)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<double, 64ul>, 64ul>::_S_ref(std::array<double, 64ul> const (&) [64], unsigned long)' into 'std::array<std::array<double, 64ul>, 64ul>::operator[](unsigned long)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 64ul>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 64ul>, 64ul> matmul<64ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 64ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) const (.154)' into 'std::array<std::array<double, 64ul>, 64ul> matmul<64ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 64ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<std::array<double, 64ul>, 64ul>::operator[](unsigned long)' into 'std::array<std::array<double, 64ul>, 64ul> matmul<64ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 64ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 64ul>, 64ul> matmul<64ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 64ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long)' into 'std::array<std::array<double, 64ul>, 64ul> matmul<64ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 64ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:58:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<double, 64ul>, 64ul> matmul<64ul, 1ul, 64ul>(std::array<std::array<double, 1ul>, 64ul> const&, std::array<std::array<double, 64ul>, 1ul> const&)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<double, 1ul>, 64ul> const&)' into 'void updateWeightBias<64, 64>(std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 64> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 64ul>, 64ul>::operator[](unsigned long)' into 'void updateWeightBias<64, 64>(std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 64> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 64ul>::operator[](unsigned long)' into 'void updateWeightBias<64, 64>(std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 64> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<std::array<double, 1ul>, 64ul>::operator[](unsigned long) const (.154)' into 'void updateWeightBias<64, 64>(std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 64> const&, double)'
remark: ../layer.h:313:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long) const' into 'void updateWeightBias<64, 64>(std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 64> const&, double)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul>::operator[](unsigned long) const' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::begin()' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::end()' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<double, 1ul>* std::max_element<std::array<double, 1ul>*, accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0>(std::array<double, 1ul>*, std::array<double, 1ul>*, accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)::$_0)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::iterator_traits<std::array<double, 1ul>*>::difference_type std::distance<std::array<double, 1ul>*>(std::array<double, 1ul>*, std::array<double, 1ul>*)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<std::array<double, 10ul>, 1797ul>::operator[](unsigned long) const' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<double, 10ul>::begin() const' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<double, 10ul>::end() const' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'double const* std::max_element<double const*>(double const*, double const*)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::iterator_traits<double const*>::difference_type std::distance<double const*>(double const*, double const*)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<std::array<double, 1ul>, 10ul>::operator[](unsigned long)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<double, 10ul>::operator[](unsigned long) const' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'std::array<double, 1ul>::operator[](unsigned long)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'void updateWeightBias<8, 10>(std::array<std::array<double, 8>, 10>&, std::array<double, 10>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 10> const&, double)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'void updateWeightBias<8, 8>(std::array<std::array<double, 8>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 8> const&, std::array<std::array<double, 1ul>, 8> const&, double)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'void updateWeightBias<64, 8>(std::array<std::array<double, 64>, 8>&, std::array<double, 8>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 8> const&, double)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'void updateWeightBias<64, 64>(std::array<std::array<double, 64>, 64>&, std::array<double, 64>&, std::array<std::array<double, 1ul>, 64> const&, std::array<std::array<double, 1ul>, 64> const&, double)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
remark: ../accelerator.cpp:24:0: Inlining function 'int const& std::min<int>(int const&, int const&)' into 'accelerator(std::array<std::array<std::array<double, 1ul>, 64ul>, 1797ul> const&, std::array<std::array<double, 10ul>, 1797ul> const&, std::array<std::array<double, 64ul>, 64ul>&, std::array<std::array<double, 64ul>, 8ul>&, std::array<std::array<double, 8ul>, 8ul>&, std::array<std::array<double, 8ul>, 10ul>&, std::array<double, 64ul>&, std::array<double, 8ul>&, std::array<double, 8ul>&, std::array<double, 10ul>&)'
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/predefined_ops.h:43:25: The program may have out of bound array access on variable 'y_true'
remark: ../accelerator.cpp:24:0: Aggregating scalar variable 'biases_l3' with compact=bit mode in 640-bits
remark: ../accelerator.cpp:24:0: Aggregating scalar variable 'biases_l2' with compact=bit mode in 512-bits
remark: ../accelerator.cpp:24:0: Aggregating scalar variable 'biases_l1' with compact=bit mode in 512-bits
remark: ../accelerator.cpp:24:0: Aggregating scalar variable 'biases_l0' with compact=bit mode in 4096-bits
remark: ../accelerator.cpp:24:0: Aggregating bram variable 'weights_l3' with compact=bit mode in 512-bits
remark: ../accelerator.cpp:24:0: Aggregating scalar variable 'weights_l2' with compact=bit mode in 4096-bits
remark: <unknown>:0:0: Aggregating bram variable 'weights_l1' with compact=bit mode in 4096-bits
remark: <unknown>:0:0: Aggregating bram variable 'weights_l0' with compact=bit mode in 4096-bits
remark: <unknown>:0:0: Aggregating bram variable 'y_true' with compact=bit mode in 640-bits
remark: <unknown>:0:0: Aggregating bram variable 'input' with compact=bit mode in 4096-bits
remark: automatically set the pipeline for Loop< VITIS_LOOP_82_2> at ../layer.h:82:26 
remark: automatically set the pipeline for Loop< VITIS_LOOP_82_2> at ../layer.h:82:26 
remark: automatically set the pipeline for Loop< VITIS_LOOP_82_2> at ../layer.h:82:26 
remark: automatically set the pipeline for Loop< VITIS_LOOP_82_2> at ../layer.h:82:26 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_40_1> at ../layer.h:40:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_266_1> at ../layer.h:266:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_22_1> at ../activation.cpp:22:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_284_3> at ../layer.h:284:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_41_2> at ../layer.h:41:26 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_266_1> at ../layer.h:266:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_22_1> at ../activation.cpp:22:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_284_3> at ../layer.h:284:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_40_1> at ../layer.h:40:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_266_1> at ../layer.h:266:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_22_1> at ../activation.cpp:22:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_284_3> at ../layer.h:284:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_161_1> at ../layer.h:161:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_180_4> at ../layer.h:180:31 
remark: automatically set the pipeline for Loop< VITIS_LOOP_114_3> at ../activation.cpp:114:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_89_1> at ../activation.cpp:89:22 
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5658:7 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_161_1> at ../layer.h:161:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_13_1> at ../activation.cpp:13:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_161_1> at ../layer.h:161:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_13_1> at ../activation.cpp:13:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_13_1> at ../activation.cpp:13:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_81_1> at ../layer.h:81:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_161_1> at ../layer.h:161:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_323_1> at ../layer.h:323:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_40_1> at ../layer.h:40:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_323_1> at ../layer.h:323:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_40_1> at ../layer.h:40:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_324_2> at ../layer.h:324:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_40_1> at ../layer.h:40:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_323_1> at ../layer.h:323:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_40_1> at ../layer.h:40:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_67_3> at ../accelerator.cpp:67:30 
remark: ../layer.h:324:27: Loop 'VITIS_LOOP_324_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:324:27: Loop 'VITIS_LOOP_324_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:324:27: Loop 'VITIS_LOOP_324_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:41:26: Loop 'VITIS_LOOP_41_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:41:26: Loop 'VITIS_LOOP_41_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:40:22: Loop 'VITIS_LOOP_40_1' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:83:30: Loop 'VITIS_LOOP_83_3' is marked as complete unroll implied by the pipeline pragma
remark: ../accelerator.cpp:24:0: Unrolling loop 'VITIS_LOOP_324_2' (../layer.h:324:27) in function 'accelerator' completely with a factor of 8
remark: ../accelerator.cpp:24:0: Unrolling loop 'VITIS_LOOP_324_2' (../layer.h:324:27) in function 'accelerator' completely with a factor of 64
remark: ../accelerator.cpp:24:0: Unrolling loop 'VITIS_LOOP_324_2' (../layer.h:324:27) in function 'accelerator' completely with a factor of 64
remark: ../layer.h:257:0: Unrolling loop 'VITIS_LOOP_41_2' (../layer.h:41:26) in function 'backProp<64, 64, 8>' completely with a factor of 64
remark: ../layer.h:58:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'matmul<64ul, 8ul, 1ul>' completely with a factor of 8
remark: ../layer.h:257:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'backProp<64, 8, 8>' completely with a factor of 64
remark: ../layer.h:257:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'backProp<64, 8, 8>' completely with a factor of 8
remark: ../layer.h:257:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'backProp<8, 8, 10>' completely with a factor of 8
remark: ../layer.h:257:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'backProp<8, 8, 10>' completely with a factor of 10
remark: ../layer.h:257:0: Unrolling loop 'VITIS_LOOP_41_2' (../layer.h:41:26) in function 'backProp<8, 8, 10>' completely with a factor of 8
remark: ../layer.h:153:0: Unrolling loop 'VITIS_LOOP_40_1' (../layer.h:40:22) in function 'forwardPropagation<8, 10>' completely with a factor of 10
remark: ../layer.h:153:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'forwardPropagation<8, 10>' completely with a factor of 8
remark: ../layer.h:153:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'forwardPropagation<8, 8>' completely with a factor of 8
remark: ../layer.h:153:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'forwardPropagation<64, 8>' completely with a factor of 64
remark: ../layer.h:58:0: Unrolling loop 'VITIS_LOOP_83_3' (../layer.h:83:30) in function 'matmul<64ul, 64ul, 1ul>' completely with a factor of 64
remark: ../layer.h:177:27: Automatically disabling loop flattening for loop 'VITIS_LOOP_177_3'.
remark: ../layer.h:177:27: loop_flatten off 1 forwardPropagation<8, 10> ../layer.h:177:27VITIS_LOOP_177_3 ../layer.h:177:27 
remark: ../accelerator.cpp:41:18: array_partition dim=1 type=complete  variable=input_ref 1 accelerator ../accelerator.cpp:41:18 input_ref 
remark: ../accelerator.cpp:41:18: Inferring pragma 'array_partition type=complete dim=1' for array 'input_ref' due to pipeline pragma
remark: ../accelerator.cpp:42:18: array_partition dim=1 type=complete  variable=result_l0 1 accelerator ../accelerator.cpp:42:18 result_l0 
remark: ../accelerator.cpp:42:18: Inferring pragma 'array_partition type=complete dim=1' for array 'result_l0' due to pipeline pragma
remark: ../accelerator.cpp:44:18: array_partition dim=1 type=complete  variable=result_l1 1 accelerator ../accelerator.cpp:44:18 result_l1 
remark: ../accelerator.cpp:44:18: Inferring pragma 'array_partition type=complete dim=1' for array 'result_l1' due to pipeline pragma
remark: ../accelerator.cpp:46:18: array_partition dim=1 type=complete  variable=result_l2 1 accelerator ../accelerator.cpp:46:18 result_l2 
remark: ../accelerator.cpp:46:18: Inferring pragma 'array_partition type=complete dim=1' for array 'result_l2' due to pipeline pragma
remark: ../accelerator.cpp:66:51: array_partition dim=1 type=complete  variable=final_error 1 accelerator ../accelerator.cpp:66:51 final_error 
remark: ../accelerator.cpp:66:51: Inferring pragma 'array_partition type=complete dim=1' for array 'final_error' due to pipeline pragma
remark: ../accelerator.cpp:79:18: array_partition dim=1 type=complete  variable=d_l2 1 accelerator ../accelerator.cpp:79:18 d_l2 
remark: ../accelerator.cpp:79:18: Inferring pragma 'array_partition type=complete dim=1' for array 'd_l2' due to pipeline pragma
remark: ../accelerator.cpp:81:18: array_partition dim=1 type=complete  variable=d_l1 1 accelerator ../accelerator.cpp:81:18 d_l1 
remark: ../accelerator.cpp:81:18: Inferring pragma 'array_partition type=complete dim=1' for array 'd_l1' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=1 type=complete  variable=w_l_plus1_T 1 backProp<64, 64, 8> w_l_plus1_T 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=1' for array 'w_l_plus1_T' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=w_l_plus1_T 1 backProp<64, 64, 8> w_l_plus1_T 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'w_l_plus1_T' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=1 type=complete  variable=w_l_plus1_T 1 backProp<8, 8, 10> w_l_plus1_T 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=1' for array 'w_l_plus1_T' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=w_l_plus1_T 1 backProp<8, 8, 10> w_l_plus1_T 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'w_l_plus1_T' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=w_l_plus1_T 1 backProp<64, 8, 8> w_l_plus1_T 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'w_l_plus1_T' due to pipeline pragma
remark: ../layer.h:315:55: array_partition dim=2 type=complete  variable=update_temp_mat.i 1 accelerator ../layer.h:315:55 update_temp_mat.i 
remark: ../layer.h:315:55: Inferring pragma 'array_partition type=complete dim=2' for array 'update_temp_mat.i' due to pipeline pragma
remark: ../layer.h:315:55: array_partition dim=2 type=complete  variable=update_temp_mat.i62 1 accelerator ../layer.h:315:55 update_temp_mat.i62 
remark: ../layer.h:315:55: Inferring pragma 'array_partition type=complete dim=2' for array 'update_temp_mat.i62' due to pipeline pragma
remark: ../layer.h:315:55: array_partition dim=2 type=complete  variable=update_temp_mat.i98 1 accelerator ../layer.h:315:55 update_temp_mat.i98 
remark: ../layer.h:315:55: Inferring pragma 'array_partition type=complete dim=2' for array 'update_temp_mat.i98' due to pipeline pragma
remark: <unknown>:0:0: Applying array_partition to 'w_l_plus1_T': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'w_l_plus1_T': Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'w_l_plus1_T': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../layer.h:315:55: Applying array_partition to 'update_temp_mat.i98': Complete partitioning on dimension 2.
remark: ../layer.h:315:55: Applying array_partition to 'update_temp_mat.i62': Complete partitioning on dimension 2.
remark: ../layer.h:315:55: Applying array_partition to 'update_temp_mat.i': Complete partitioning on dimension 2.
remark: ../accelerator.cpp:41:18: Applying array_partition to 'input_ref': Complete partitioning on dimension 1.
remark: ../accelerator.cpp:42:18: Applying array_partition to 'result_l0': Complete partitioning on dimension 1.
remark: ../accelerator.cpp:44:18: Applying array_partition to 'result_l1': Complete partitioning on dimension 1.
remark: ../accelerator.cpp:46:18: Applying array_partition to 'result_l2': Complete partitioning on dimension 1.
remark: ../accelerator.cpp:66:51: Applying array_partition to 'final_error': Complete partitioning on dimension 1.
remark: ../accelerator.cpp:79:18: Applying array_partition to 'd_l2': Complete partitioning on dimension 1.
remark: ../accelerator.cpp:81:18: Applying array_partition to 'd_l1': Complete partitioning on dimension 1.
===-------------------------------------------------------------------------===
                         Miscellaneous Ungrouped Timers
===-------------------------------------------------------------------------===

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  60.3281 (100.0%)   0.7969 (100.0%)  61.1250 (100.0%)  61.4098 (100.0%)  Code Generation Time
  60.3281 (100.0%)   0.7969 (100.0%)  61.1250 (100.0%)  61.4098 (100.0%)  Total

===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 61.1719 seconds (61.4786 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   4.7656 (  7.9%)   0.0000 (  0.0%)   4.7656 (  7.8%)   4.7978 (  7.8%)  Loop Invariant Code Motion
   2.0625 (  3.4%)   0.0156 (  1.8%)   2.0781 (  3.4%)   2.1302 (  3.5%)  Dead Store Elimination
   2.0781 (  3.4%)   0.0000 (  0.0%)   2.0781 (  3.4%)   2.1176 (  3.4%)  Dead Store Elimination
   2.0781 (  3.4%)   0.0000 (  0.0%)   2.0781 (  3.4%)   2.0607 (  3.4%)  Dead Store Elimination
   2.0156 (  3.3%)   0.0313 (  3.6%)   2.0469 (  3.3%)   2.0371 (  3.3%)  Dead Store Elimination
   1.9688 (  3.3%)   0.0000 (  0.0%)   1.9688 (  3.2%)   2.0098 (  3.3%)  Dead Store Elimination
   1.9531 (  3.2%)   0.0000 (  0.0%)   1.9531 (  3.2%)   2.0024 (  3.3%)  Dead Store Elimination
   2.0000 (  3.3%)   0.0000 (  0.0%)   2.0000 (  3.3%)   1.9995 (  3.3%)  Dead Store Elimination
   1.9531 (  3.2%)   0.0156 (  1.8%)   1.9688 (  3.2%)   1.9951 (  3.2%)  Dead Store Elimination
   2.0000 (  3.3%)   0.0000 (  0.0%)   2.0000 (  3.3%)   1.9945 (  3.2%)  Dead Store Elimination
   1.9531 (  3.2%)   0.0000 (  0.0%)   1.9531 (  3.2%)   1.9924 (  3.2%)  Dead Store Elimination
   1.9688 (  3.3%)   0.0000 (  0.0%)   1.9688 (  3.2%)   1.9920 (  3.2%)  Dead Store Elimination
   1.9844 (  3.3%)   0.0000 (  0.0%)   1.9844 (  3.2%)   1.9874 (  3.2%)  Dead Store Elimination
   1.9844 (  3.3%)   0.0000 (  0.0%)   1.9844 (  3.2%)   1.9815 (  3.2%)  Dead Store Elimination
   1.9531 (  3.2%)   0.0156 (  1.8%)   1.9688 (  3.2%)   1.9811 (  3.2%)  Dead Store Elimination
   1.9844 (  3.3%)   0.0000 (  0.0%)   1.9844 (  3.2%)   1.9789 (  3.2%)  Dead Store Elimination
   1.9375 (  3.2%)   0.0156 (  1.8%)   1.9531 (  3.2%)   1.9769 (  3.2%)  Dead Store Elimination
   1.9688 (  3.3%)   0.0156 (  1.8%)   1.9844 (  3.2%)   1.9765 (  3.2%)  Dead Store Elimination
   1.9688 (  3.3%)   0.0000 (  0.0%)   1.9688 (  3.2%)   1.9757 (  3.2%)  Dead Store Elimination
   1.9844 (  3.3%)   0.0000 (  0.0%)   1.9844 (  3.2%)   1.9732 (  3.2%)  Dead Store Elimination
   1.9531 (  3.2%)   0.0000 (  0.0%)   1.9531 (  3.2%)   1.9717 (  3.2%)  Dead Store Elimination
   1.9531 (  3.2%)   0.0000 (  0.0%)   1.9531 (  3.2%)   1.9654 (  3.2%)  Dead Store Elimination
   1.9688 (  3.3%)   0.0000 (  0.0%)   1.9688 (  3.2%)   1.9627 (  3.2%)  Dead Store Elimination
   1.9688 (  3.3%)   0.0000 (  0.0%)   1.9688 (  3.2%)   1.9489 (  3.2%)  Dead Store Elimination
   0.7500 (  1.2%)   0.0313 (  3.6%)   0.7813 (  1.3%)   0.7775 (  1.3%)  ArrayPartition - Partition Arrays into Banks
   0.5469 (  0.9%)   0.0000 (  0.0%)   0.5469 (  0.9%)   0.5346 (  0.9%)  Loop Invariant Code Motion
   0.5000 (  0.8%)   0.0000 (  0.0%)   0.5000 (  0.8%)   0.5103 (  0.8%)  Dead Store Elimination
   0.5156 (  0.9%)   0.0000 (  0.0%)   0.5156 (  0.8%)   0.5089 (  0.8%)  Dead Store Elimination
   0.1875 (  0.3%)   0.3125 ( 35.7%)   0.5000 (  0.8%)   0.5033 (  0.8%)  Auto automatic array partition analysis
   0.5313 (  0.9%)   0.0000 (  0.0%)   0.5313 (  0.9%)   0.4974 (  0.8%)  Dead Store Elimination
   0.4844 (  0.8%)   0.0000 (  0.0%)   0.4844 (  0.8%)   0.4973 (  0.8%)  Dead Store Elimination
   0.5000 (  0.8%)   0.0000 (  0.0%)   0.5000 (  0.8%)   0.4915 (  0.8%)  Dead Store Elimination
   0.4688 (  0.8%)   0.0000 (  0.0%)   0.4688 (  0.8%)   0.4904 (  0.8%)  Dead Store Elimination
   0.3594 (  0.6%)   0.0000 (  0.0%)   0.3594 (  0.6%)   0.3508 (  0.6%)  Combine redundant instructions
   0.1250 (  0.2%)   0.1250 ( 14.3%)   0.2500 (  0.4%)   0.2667 (  0.4%)  Build loop flatten cost model
   0.1719 (  0.3%)   0.0313 (  3.6%)   0.2031 (  0.3%)   0.2062 (  0.3%)  Generate HLS compatible IR
   0.1563 (  0.3%)   0.0000 (  0.0%)   0.1563 (  0.3%)   0.1711 (  0.3%)  Global Value Numbering
   0.1875 (  0.3%)   0.0000 (  0.0%)   0.1875 (  0.3%)   0.1632 (  0.3%)  Global Value Numbering
   0.1563 (  0.3%)   0.0000 (  0.0%)   0.1563 (  0.3%)   0.1601 (  0.3%)  Global Value Numbering
   0.0781 (  0.1%)   0.0625 (  7.1%)   0.1406 (  0.2%)   0.1564 (  0.3%)  PredicateAnalyzer - Predidate Analysis
   0.1406 (  0.2%)   0.0156 (  1.8%)   0.1563 (  0.3%)   0.1544 (  0.3%)  Global Value Numbering
   0.1406 (  0.2%)   0.0000 (  0.0%)   0.1406 (  0.2%)   0.1512 (  0.2%)  Global Value Numbering
   0.1719 (  0.3%)   0.0000 (  0.0%)   0.1719 (  0.3%)   0.1502 (  0.2%)  Global Value Numbering
   0.1563 (  0.3%)   0.0000 (  0.0%)   0.1563 (  0.3%)   0.1249 (  0.2%)  Aggressive Dead Code Elimination
   0.0938 (  0.2%)   0.0000 (  0.0%)   0.0938 (  0.2%)   0.1054 (  0.2%)  Global Value Numbering
   0.0938 (  0.2%)   0.0000 (  0.0%)   0.0938 (  0.2%)   0.0953 (  0.2%)  Global Value Numbering
   0.0781 (  0.1%)   0.0000 (  0.0%)   0.0781 (  0.1%)   0.0796 (  0.1%)  Lower intermediate type generated by HLSGen
   0.0781 (  0.1%)   0.0000 (  0.0%)   0.0781 (  0.1%)   0.0787 (  0.1%)  Automatic array partition transformation
   0.0625 (  0.1%)   0.0000 (  0.0%)   0.0625 (  0.1%)   0.0697 (  0.1%)  Automatic inliner in reflow
   0.0625 (  0.1%)   0.0000 (  0.0%)   0.0625 (  0.1%)   0.0666 (  0.1%)  AlignMemory - Align memory accesses
   0.0313 (  0.1%)   0.0313 (  3.6%)   0.0625 (  0.1%)   0.0663 (  0.1%)  Memory Summary
   0.0625 (  0.1%)   0.0000 (  0.0%)   0.0625 (  0.1%)   0.0545 (  0.1%)  Global Value Numbering
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0543 (  0.1%)  Global Value Numbering
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0533 (  0.1%)  Lower HLS related loops
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0503 (  0.1%)  Detach IR Wrapper
   0.0625 (  0.1%)   0.0000 (  0.0%)   0.0625 (  0.1%)   0.0483 (  0.1%)  Auto automatic array partition analysis
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0476 (  0.1%)  Auto automatic array partition analysis
   0.0625 (  0.1%)   0.0000 (  0.0%)   0.0625 (  0.1%)   0.0459 (  0.1%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0453 (  0.1%)  Jump Threading
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0446 (  0.1%)  Merge accesses
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0408 (  0.1%)  Global Value Numbering
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0408 (  0.1%)  Global Value Numbering
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0401 (  0.1%)  Auto automatic array partition analysis
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0376 (  0.1%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0371 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0370 (  0.1%)  Object Decomposition
   0.0313 (  0.1%)   0.0156 (  1.8%)   0.0469 (  0.1%)   0.0344 (  0.1%)  Bitcode for HLS
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0282 (  0.0%)  AlignMemory - Align memory accesses
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0280 (  0.0%)  Collect complexity metrics for FE reflow
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0274 (  0.0%)  AlignMemory - Align memory accesses
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0273 (  0.0%)  AlignMemory - Align memory accesses
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0271 (  0.0%)  AlignMemory - Align memory accesses
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0270 (  0.0%)  AlignMemory - Align memory accesses
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0266 (  0.0%)  AlignMemory - Align memory accesses
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0265 (  0.0%)  AlignMemory - Align memory accesses
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0260 (  0.0%)  AlignMemory - Align memory accesses
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0240 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0231 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0201 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0201 (  0.0%)  Memory SSA
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0192 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0190 (  0.0%)  Memory SSA
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0189 (  0.0%)  Memory Summary
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0187 (  0.0%)  Memory SSA
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0179 (  0.0%)  Memory SSA
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0176 (  0.0%)  Memory SSA
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0173 (  0.0%)  Combine redundant instructions
   0.0469 (  0.1%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0169 (  0.0%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0166 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0160 (  0.0%)  Analyze sequential accesses
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0159 (  0.0%)  Memory Summary
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0156 (  0.0%)  Memory Summary
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0155 (  0.0%)  Reflow pragma unroll loops
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0142 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0141 (  0.0%)  Memory Summary
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0136 (  0.0%)  Value Propagation
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0135 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0134 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0133 (  0.0%)  AccessGroup - Group the memory access for the same object
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0133 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0132 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0132 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0131 (  0.0%)  Object Decomposition
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0130 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0156 (  1.8%)   0.0313 (  0.1%)   0.0129 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0129 (  0.0%)  Inliner for always_inline functions
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0128 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0127 (  0.0%)  Produce message if basic block has too many instructions
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0127 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0127 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0126 (  0.0%)  Combine redundant instructions
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0125 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0124 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0123 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0123 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0122 (  0.0%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0122 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0122 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0122 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0121 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0120 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0120 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0119 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0119 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0118 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0116 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0116 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0115 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0114 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0114 (  0.0%)  Early GVN Hoisting of Expressions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0113 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0112 (  0.0%)  Global Value Numbering
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0112 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0111 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0108 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0106 (  0.0%)  CallGraph Construction
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0103 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0103 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0101 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0091 (  0.0%)  Deduce function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0089 (  0.0%)  Dump HBM driver helper code
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0088 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0086 (  0.0%)  Automatic data reuse optimization
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0084 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0083 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0083 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0082 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0081 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0079 (  0.0%)  Deduce function attributes
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0078 (  0.0%)  Synthesis checker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0076 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0075 (  0.0%)  Induction Variable Simplification
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0072 (  0.0%)  Induction Variable Simplification
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0070 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0070 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0068 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0068 (  0.0%)  Value Propagation
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0066 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0063 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0061 (  0.0%)   automatic function inline driven by performance to break up circuit dependence
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0061 (  0.0%)  Struct object aggregation
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0061 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0061 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0059 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0059 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0059 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0058 (  0.0%)  Inliner for always_inline functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0058 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0058 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0058 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0058 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0057 (  0.0%)  Remove redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0056 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0056 (  0.0%)  Value Propagation
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0055 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0055 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0055 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0054 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0053 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0052 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0052 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0052 (  0.0%)  Merge accesses
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0052 (  0.0%)  Remove redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0051 (  0.0%)  Deduce function attributes
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0051 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)  Print module to file
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0051 (  0.0%)  Reflow pragma unroll loops
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0050 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.0%)  Induction Variable Simplification
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0050 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0049 (  0.0%)  Deduce function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0048 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0048 (  0.0%)  Synthesis checker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0048 (  0.0%)  Value Propagation
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0046 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0046 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0045 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)  Loop Load Elimination
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0043 (  0.0%)  Lower HLS related attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0042 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)  Generate IR Wrapper
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)  Combine redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0041 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0041 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0041 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.0%)  Early GVN Hoisting of Expressions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0038 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0038 (  0.0%)  Early GVN Hoisting of Expressions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0038 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)  Reflow pipeline loop automatically
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.0%)  Early GVN Hoisting of Expressions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0034 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)  MemSSAOpt - Memory SSA based optimizations
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0033 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0033 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)  Recursively inline barriers caller to kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0032 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Pragma preprocessing after clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0030 (  0.0%)  Produce message if basic block has too many instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0029 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)  Structure stription
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0028 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0027 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)  Memory SSA
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0027 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0027 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0024 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Infer PPPO for array-to-streams
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0023 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Interleave memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0023 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  dump pragma info via xml format
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Extract dataflow loop
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0020 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Promote 'by reference' arguments to scalars
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0156 (  1.8%)   0.0156 (  0.0%)   0.0019 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0018 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0018 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Dead Store Elimination
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0018 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0018 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Infer loop trip count
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0017 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Automatically infer occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Array abnormal access check
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0016 (  0.0%)  Aggressive Dead Code Elimination
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0016 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0015 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  ReflowCheckPragmaConflicts - check pragma conflicts in reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Lower directive scopes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  ROM inference pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Eliminate dead debug information intrinsic
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Special handling of axis with side-channels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  ROM inference pass
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0014 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  InterfaceEncodingChange - Change Interface Encoding format
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Remove redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  RemoveConflictingBurst - Remove port conflicting bursts
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  AccessGroup - Group the memory access for the same object
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Remove redundant instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0011 (  0.0%)  Straight line strength reduction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Internalize Global Symbols
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  WidenBurst - Widen bursts
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Simplify the CFG
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   automatic parallel and pipeline insertion based performance constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Pragma preprocessing after clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0009 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Simplify the CFG
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0009 (  0.0%)  Global Variable Optimizer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Disaggregation preprocessing
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  demangle Name to normal Name
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0009 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Simplify the CFG
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0008 (  0.0%)  Divergence Analysis
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0008 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  CallGraph Construction
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  do loop unroll according tripcount threshold config
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Preprocessing before loop rotation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0007 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Lower tasks into dataflow form
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Transform SSA value on top function to variable with pointer type
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Scalarize vector operations
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  AttrPropagation - Propagate Pointer Parameter Attribute
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dead Instruction Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  ArrayPartition - Partition Arrays into Banks
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dataflow Process Duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Unswitch loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  DefaultInterfaceBuilderNew - Build Default Top Interface
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Lower black box
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  ReflowCheckVarPragmaConflicts - check variable pragma conflicts in reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Auto automatic array partition filter analysis
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0005 (  0.0%)  ArrayReshape - Reshape Arrays into Wider Arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Global Variable Optimizer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominance Frontier Construction
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0005 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer workgroup size for opencl Kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  LegalizeName - Check interface name in terms of HDL syntax
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Lower printf for the fpga target
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Array Access Range Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Change xcl attribute to call sideeffect
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Outline pipeline stages
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Normalize loop index
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  normalize array partition result to reduce redundant sub array arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Struct object aggregation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  InferXCLAttributes - Infer XCL attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Build Synchronization Regions in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Expand private memory for each workitem in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Generate Loops to iterate over workitems
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  clean some traps produced by clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection for FIFO
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Performance Evaluation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  verify cache pragmas
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0002 (  0.0%)  Disaggregation preprocessing
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Stream object marker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ProduceBurstMessages - Produce Burst Messages
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  InferXCLAttrImplications - Infer XCL attribute implications
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lower BINDOP scope bundle
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop Access Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Unify function exit nodes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Inline sub function calls recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lower fence group
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Reflow auto unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  top function attribute attaching
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Predicate SPIR Kernels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Shrink Synchronization Regions in SPMD program to reduce CFG complexity
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer set function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delinearization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SeqAccessesInference - Infer Sequential accesses for HLS C/C++
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  DeSPMD - Insert barriers into uniform loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  InterfaceCheck - Check Interface
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Analyze occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0156 (  0.0%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Vectorize the SPMD regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower llvm.assume to _ssdm_AssertFail
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Extract occurrence region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Structure Decomposition
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Assumption Cache Tracker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower memory intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Evaluate _ssdm_string2bits
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Collect basic metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Transform Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Profile summary info
  60.2969 (100.0%)   0.8750 (100.0%)  61.1719 (100.0%)  61.4786 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0156 seconds (0.0239 wall clock)

   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0156 (100.0%)   0.0156 (100.0%)   0.0239 (100.0%)  Parse IR
   0.0156 (100.0%)   0.0156 (100.0%)   0.0239 (100.0%)  Total

===-------------------------------------------------------------------------===
                          Clang front-end time report
===-------------------------------------------------------------------------===
  Total Execution Time: 61.1406 seconds (61.4363 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  60.3281 (100.0%)   0.8125 (100.0%)  61.1406 (100.0%)  61.4363 (100.0%)  Clang front-end timer
  60.3281 (100.0%)   0.8125 (100.0%)  61.1406 (100.0%)  61.4363 (100.0%)  Total

