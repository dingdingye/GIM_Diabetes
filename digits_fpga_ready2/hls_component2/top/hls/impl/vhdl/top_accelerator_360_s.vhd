-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_accelerator_360_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_0_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_0_0_ce0 : OUT STD_LOGIC;
    input_0_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_1_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_1_0_ce0 : OUT STD_LOGIC;
    input_1_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_2_0_ce0 : OUT STD_LOGIC;
    input_2_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_3_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_3_0_ce0 : OUT STD_LOGIC;
    input_3_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_4_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_4_0_ce0 : OUT STD_LOGIC;
    input_4_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_5_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_5_0_ce0 : OUT STD_LOGIC;
    input_5_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_6_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_6_0_ce0 : OUT STD_LOGIC;
    input_6_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_7_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_7_0_ce0 : OUT STD_LOGIC;
    input_7_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_8_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_8_0_ce0 : OUT STD_LOGIC;
    input_8_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_9_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_9_0_ce0 : OUT STD_LOGIC;
    input_9_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_10_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_10_0_ce0 : OUT STD_LOGIC;
    input_10_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_11_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_11_0_ce0 : OUT STD_LOGIC;
    input_11_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    input_12_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_12_0_ce0 : OUT STD_LOGIC;
    input_12_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    y_test_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_test_ce0 : OUT STD_LOGIC;
    y_test_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    y_test_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_test_ce1 : OUT STD_LOGIC;
    y_test_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
    weights_l1_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_0_ce0 : OUT STD_LOGIC;
    weights_l1_0_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_1_ce0 : OUT STD_LOGIC;
    weights_l1_1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_2_ce0 : OUT STD_LOGIC;
    weights_l1_2_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_3_ce0 : OUT STD_LOGIC;
    weights_l1_3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_4_ce0 : OUT STD_LOGIC;
    weights_l1_4_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_5_ce0 : OUT STD_LOGIC;
    weights_l1_5_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_6_ce0 : OUT STD_LOGIC;
    weights_l1_6_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_7_ce0 : OUT STD_LOGIC;
    weights_l1_7_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_8_ce0 : OUT STD_LOGIC;
    weights_l1_8_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_9_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_9_ce0 : OUT STD_LOGIC;
    weights_l1_9_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_10_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_10_ce0 : OUT STD_LOGIC;
    weights_l1_10_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_11_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_11_ce0 : OUT STD_LOGIC;
    weights_l1_11_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_12_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_12_ce0 : OUT STD_LOGIC;
    weights_l1_12_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_13_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_13_ce0 : OUT STD_LOGIC;
    weights_l1_13_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_14_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_14_ce0 : OUT STD_LOGIC;
    weights_l1_14_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_15_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_15_ce0 : OUT STD_LOGIC;
    weights_l1_15_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_16_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_16_ce0 : OUT STD_LOGIC;
    weights_l1_16_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_17_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_17_ce0 : OUT STD_LOGIC;
    weights_l1_17_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_18_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_18_ce0 : OUT STD_LOGIC;
    weights_l1_18_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_19_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_19_ce0 : OUT STD_LOGIC;
    weights_l1_19_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_20_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_20_ce0 : OUT STD_LOGIC;
    weights_l1_20_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_21_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_21_ce0 : OUT STD_LOGIC;
    weights_l1_21_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_22_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_22_ce0 : OUT STD_LOGIC;
    weights_l1_22_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_23_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_23_ce0 : OUT STD_LOGIC;
    weights_l1_23_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_24_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_24_ce0 : OUT STD_LOGIC;
    weights_l1_24_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_25_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_25_ce0 : OUT STD_LOGIC;
    weights_l1_25_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_26_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_26_ce0 : OUT STD_LOGIC;
    weights_l1_26_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_27_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_27_ce0 : OUT STD_LOGIC;
    weights_l1_27_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_28_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_28_ce0 : OUT STD_LOGIC;
    weights_l1_28_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_29_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_29_ce0 : OUT STD_LOGIC;
    weights_l1_29_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_30_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_30_ce0 : OUT STD_LOGIC;
    weights_l1_30_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_31_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_31_ce0 : OUT STD_LOGIC;
    weights_l1_31_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_32_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_32_ce0 : OUT STD_LOGIC;
    weights_l1_32_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_33_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_33_ce0 : OUT STD_LOGIC;
    weights_l1_33_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_34_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_34_ce0 : OUT STD_LOGIC;
    weights_l1_34_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_35_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_35_ce0 : OUT STD_LOGIC;
    weights_l1_35_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_36_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_36_ce0 : OUT STD_LOGIC;
    weights_l1_36_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_37_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_37_ce0 : OUT STD_LOGIC;
    weights_l1_37_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_38_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_38_ce0 : OUT STD_LOGIC;
    weights_l1_38_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_39_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_39_ce0 : OUT STD_LOGIC;
    weights_l1_39_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_40_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_40_ce0 : OUT STD_LOGIC;
    weights_l1_40_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_41_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_41_ce0 : OUT STD_LOGIC;
    weights_l1_41_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_42_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_42_ce0 : OUT STD_LOGIC;
    weights_l1_42_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_43_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_43_ce0 : OUT STD_LOGIC;
    weights_l1_43_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_44_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_44_ce0 : OUT STD_LOGIC;
    weights_l1_44_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_45_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_45_ce0 : OUT STD_LOGIC;
    weights_l1_45_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_46_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_46_ce0 : OUT STD_LOGIC;
    weights_l1_46_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_47_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_47_ce0 : OUT STD_LOGIC;
    weights_l1_47_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_48_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_48_ce0 : OUT STD_LOGIC;
    weights_l1_48_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_49_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_49_ce0 : OUT STD_LOGIC;
    weights_l1_49_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_50_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_50_ce0 : OUT STD_LOGIC;
    weights_l1_50_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_51_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_51_ce0 : OUT STD_LOGIC;
    weights_l1_51_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_52_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_52_ce0 : OUT STD_LOGIC;
    weights_l1_52_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_53_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_53_ce0 : OUT STD_LOGIC;
    weights_l1_53_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_54_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_54_ce0 : OUT STD_LOGIC;
    weights_l1_54_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_55_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_55_ce0 : OUT STD_LOGIC;
    weights_l1_55_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_56_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_56_ce0 : OUT STD_LOGIC;
    weights_l1_56_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_57_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_57_ce0 : OUT STD_LOGIC;
    weights_l1_57_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_58_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_58_ce0 : OUT STD_LOGIC;
    weights_l1_58_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_59_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_59_ce0 : OUT STD_LOGIC;
    weights_l1_59_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_60_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_60_ce0 : OUT STD_LOGIC;
    weights_l1_60_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_61_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_61_ce0 : OUT STD_LOGIC;
    weights_l1_61_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_62_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_62_ce0 : OUT STD_LOGIC;
    weights_l1_62_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l1_63_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    weights_l1_63_ce0 : OUT STD_LOGIC;
    weights_l1_63_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_0_ce0 : OUT STD_LOGIC;
    weights_l2_0_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_1_ce0 : OUT STD_LOGIC;
    weights_l2_1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_2_ce0 : OUT STD_LOGIC;
    weights_l2_2_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_3_ce0 : OUT STD_LOGIC;
    weights_l2_3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_4_ce0 : OUT STD_LOGIC;
    weights_l2_4_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_5_ce0 : OUT STD_LOGIC;
    weights_l2_5_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_6_ce0 : OUT STD_LOGIC;
    weights_l2_6_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l2_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    weights_l2_7_ce0 : OUT STD_LOGIC;
    weights_l2_7_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l3_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_l3_0_ce0 : OUT STD_LOGIC;
    weights_l3_0_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l3_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_l3_1_ce0 : OUT STD_LOGIC;
    weights_l3_1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l3_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_l3_2_ce0 : OUT STD_LOGIC;
    weights_l3_2_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    weights_l3_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    weights_l3_3_ce0 : OUT STD_LOGIC;
    weights_l3_3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    biases_l1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    biases_l1_ce0 : OUT STD_LOGIC;
    biases_l1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    p_read : IN STD_LOGIC_VECTOR (24 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (24 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (24 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (24 downto 0);
    biases_l3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    biases_l3_ce0 : OUT STD_LOGIC;
    biases_l3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (24 downto 0);
    grp_fu_8506_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_8506_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_8506_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_8506_p_ce : OUT STD_LOGIC;
    grp_fu_8510_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_8510_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_8510_p_ce : OUT STD_LOGIC;
    grp_fu_8513_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_8513_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_8513_p_ce : OUT STD_LOGIC );
end;


architecture behav of top_accelerator_360_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_43B40000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011101101000000000000000000";
    constant ap_const_lv9_168 : STD_LOGIC_VECTOR (8 downto 0) := "101101000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_11 : STD_LOGIC_VECTOR (11 downto 0) := "000000010001";
    constant ap_const_lv11_7EF : STD_LOGIC_VECTOR (10 downto 0) := "11111101111";
    constant ap_const_lv11_11 : STD_LOGIC_VECTOR (10 downto 0) := "00000010001";
    constant ap_const_lv11_36 : STD_LOGIC_VECTOR (10 downto 0) := "00000110110";
    constant ap_const_lv25_1FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111111111";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv11_19 : STD_LOGIC_VECTOR (10 downto 0) := "00000011001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln174_fu_665_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln174_reg_1128 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln174_1_fu_683_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln174_1_reg_1133 : STD_LOGIC_VECTOR (10 downto 0);
    signal result_l2_reg_1143 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal result_l2_1_reg_1148 : STD_LOGIC_VECTOR (24 downto 0);
    signal result_l2_2_reg_1153 : STD_LOGIC_VECTOR (24 downto 0);
    signal result_l2_3_reg_1158 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln5658_fu_716_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln5658_reg_1166 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_first_assign_3_fu_722_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_first_assign_3_reg_1171 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln139_fu_731_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln139_reg_1178 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln60_fu_760_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln60_reg_1183 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln5674_fu_766_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln5674_reg_1188 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_accelerator_360_Pipeline_2_fu_612_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal targetBlock_reg_1194 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln5653_fu_776_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal conv_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal div_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal result_l3125_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_l3125_ce0 : STD_LOGIC;
    signal result_l3125_we0 : STD_LOGIC;
    signal result_l3125_q0 : STD_LOGIC_VECTOR (24 downto 0);
    signal result_l3125_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_l3125_ce1 : STD_LOGIC;
    signal result_l3125_we1 : STD_LOGIC;
    signal result_l3125_q1 : STD_LOGIC_VECTOR (24 downto 0);
    signal input_ref_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_ref_0_ce0 : STD_LOGIC;
    signal input_ref_0_we0 : STD_LOGIC;
    signal input_ref_0_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal result_l1_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal result_l1_0_ce0 : STD_LOGIC;
    signal result_l1_0_we0 : STD_LOGIC;
    signal result_l1_0_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal result_l1_0_ce1 : STD_LOGIC;
    signal result_l1_0_we1 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_done : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_idle : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_ready : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_0_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_0_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_1_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_1_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_2_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_2_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_3_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_3_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_4_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_4_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_5_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_5_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_6_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_6_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_7_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_7_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_8_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_8_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_9_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_9_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_10_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_10_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_11_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_11_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_12_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_12_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_we0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_ap_start : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_ap_done : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_ap_idle : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_ap_ready : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce1 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we1 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_agg_result_0_d1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_input_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_input_0_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_0_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_1_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_2_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_3_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_4_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_5_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_6_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_7_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_8_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_8_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_9_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_9_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_10_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_10_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_11_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_11_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_12_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_12_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_13_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_13_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_14_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_14_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_15_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_15_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_16_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_16_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_17_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_17_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_18_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_18_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_19_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_19_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_20_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_20_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_21_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_21_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_22_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_22_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_23_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_23_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_24_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_24_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_25_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_25_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_26_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_26_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_27_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_27_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_28_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_28_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_29_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_29_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_30_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_30_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_31_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_31_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_32_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_32_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_33_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_33_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_34_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_34_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_35_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_35_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_36_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_36_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_37_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_37_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_38_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_38_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_39_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_39_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_40_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_40_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_41_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_41_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_42_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_42_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_43_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_43_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_44_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_44_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_45_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_45_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_46_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_46_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_47_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_47_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_48_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_48_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_49_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_49_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_50_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_50_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_51_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_51_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_52_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_52_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_53_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_53_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_54_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_54_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_55_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_55_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_56_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_56_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_57_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_57_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_58_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_58_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_59_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_59_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_60_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_60_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_61_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_61_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_62_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_62_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_weights_63_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_weights_63_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_64_8_s_fu_432_biases_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_64_8_s_fu_432_biases_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_ap_start : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_ap_done : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_ap_idle : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_ap_ready : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_input_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_input_0_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_0_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_1_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_1_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_2_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_2_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_3_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_3_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_4_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_4_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_5_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_5_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_6_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_6_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_weights_7_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_weights_7_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_8_4_s_fu_568_ap_return_0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_ap_return_1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_ap_return_2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_forwardPropagation_8_4_s_fu_568_ap_return_3 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_ap_start : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_ap_done : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_ap_idle : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_ap_ready : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_we0 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_d0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce1 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_we1 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_result_l3125_d1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_weights_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_weights_0_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_weights_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_weights_1_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_weights_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_weights_2_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_weights_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_weights_3_ce0 : STD_LOGIC;
    signal grp_forwardPropagation_4_10_s_fu_593_biases_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardPropagation_4_10_s_fu_593_biases_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_2_fu_612_ap_start : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_2_fu_612_ap_done : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_2_fu_612_ap_idle : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_2_fu_612_ap_ready : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce1 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_2_fu_612_add_ln871_out : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accelerator_360_Pipeline_2_fu_612_add_ln871_out_ap_vld : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_3_fu_622_ap_start : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_3_fu_622_ap_done : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_3_fu_622_ap_idle : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_3_fu_622_ap_ready : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_3_fu_622_y_test_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_accelerator_360_Pipeline_3_fu_622_y_test_ce0 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_3_fu_622_y_test_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_accelerator_360_Pipeline_3_fu_622_y_test_ce1 : STD_LOGIC;
    signal grp_accelerator_360_Pipeline_3_fu_622_p_result_3_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_accelerator_360_Pipeline_3_fu_622_p_result_3_out_ap_vld : STD_LOGIC;
    signal p_result_2_reg_362 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal idx_reg_374 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_result_1_reg_385 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln888_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln174_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_forwardPropagation_64_8_s_fu_432_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_forwardPropagation_8_4_s_fu_568_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_forwardPropagation_4_10_s_fu_593_ap_start_reg : STD_LOGIC := '0';
    signal grp_accelerator_360_Pipeline_2_fu_612_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln5658_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln871_loc_fu_322 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_accelerator_360_Pipeline_3_fu_622_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal p_result_3_loc_fu_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal correct_fu_310 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal correct_1_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal iteration_fu_314 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal tmp_11_fu_675_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln174_fu_671_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_738_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_749_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln60_fu_745_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln60_1_fu_756_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln139_1_fu_779_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln5674_fu_793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal predicted_digit_fu_799_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal actual_digit_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln188_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln189_fu_821_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal bitcast_ln716_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_856_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln193_1_fu_870_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln193_1_cast_fu_874_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln193_1_fu_882_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_848_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln193_fu_886_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln193_fu_844_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln193_fu_866_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln193_1_fu_906_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln193_2_fu_912_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln193_1_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln193_fu_922_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln193_2_fu_928_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln193_fu_892_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln193_1_fu_934_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln193_2_fu_958_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln193_fu_962_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln193_3_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln193_4_fu_968_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln193_4_fu_972_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln193_3_fu_948_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln193_1cast_fu_994_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal icmp_ln193_4_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln193_fu_998_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal icmp_ln193_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln193_2_fu_942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln193_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln193_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln193_1_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_1_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal test_accuracy_fu_1052_p6 : STD_LOGIC_VECTOR (24 downto 0);
    signal test_accuracy_fu_1052_p8 : STD_LOGIC_VECTOR (24 downto 0);
    signal test_accuracy_fu_1052_p9 : STD_LOGIC_VECTOR (24 downto 0);
    signal test_accuracy_fu_1052_p10 : STD_LOGIC_VECTOR (2 downto 0);
    signal test_accuracy_fu_1052_p11 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal test_accuracy_fu_1052_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal test_accuracy_fu_1052_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal test_accuracy_fu_1052_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal test_accuracy_fu_1052_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component top_accelerator_360_Pipeline_VITIS_LOOP_176_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln177 : IN STD_LOGIC_VECTOR (10 downto 0);
        input_0_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_0_0_ce0 : OUT STD_LOGIC;
        input_0_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_1_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_1_0_ce0 : OUT STD_LOGIC;
        input_1_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_2_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_2_0_ce0 : OUT STD_LOGIC;
        input_2_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_3_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_3_0_ce0 : OUT STD_LOGIC;
        input_3_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_4_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_4_0_ce0 : OUT STD_LOGIC;
        input_4_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_5_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_5_0_ce0 : OUT STD_LOGIC;
        input_5_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_6_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_6_0_ce0 : OUT STD_LOGIC;
        input_6_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_7_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_7_0_ce0 : OUT STD_LOGIC;
        input_7_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_8_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_8_0_ce0 : OUT STD_LOGIC;
        input_8_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_9_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_9_0_ce0 : OUT STD_LOGIC;
        input_9_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_10_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_10_0_ce0 : OUT STD_LOGIC;
        input_10_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_11_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_11_0_ce0 : OUT STD_LOGIC;
        input_11_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_12_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        input_12_0_ce0 : OUT STD_LOGIC;
        input_12_0_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_ref_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_ref_0_ce0 : OUT STD_LOGIC;
        input_ref_0_we0 : OUT STD_LOGIC;
        input_ref_0_d0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component top_forwardPropagation_64_8_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        agg_result_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        agg_result_0_ce0 : OUT STD_LOGIC;
        agg_result_0_we0 : OUT STD_LOGIC;
        agg_result_0_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        agg_result_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        agg_result_0_ce1 : OUT STD_LOGIC;
        agg_result_0_we1 : OUT STD_LOGIC;
        agg_result_0_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
        input_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        weights_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_1_ce0 : OUT STD_LOGIC;
        weights_1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_2_ce0 : OUT STD_LOGIC;
        weights_2_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_3_ce0 : OUT STD_LOGIC;
        weights_3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_4_ce0 : OUT STD_LOGIC;
        weights_4_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_5_ce0 : OUT STD_LOGIC;
        weights_5_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_6_ce0 : OUT STD_LOGIC;
        weights_6_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_7_ce0 : OUT STD_LOGIC;
        weights_7_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_8_ce0 : OUT STD_LOGIC;
        weights_8_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_9_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_9_ce0 : OUT STD_LOGIC;
        weights_9_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_10_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_10_ce0 : OUT STD_LOGIC;
        weights_10_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_11_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_11_ce0 : OUT STD_LOGIC;
        weights_11_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_12_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_12_ce0 : OUT STD_LOGIC;
        weights_12_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_13_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_13_ce0 : OUT STD_LOGIC;
        weights_13_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_14_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_14_ce0 : OUT STD_LOGIC;
        weights_14_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_15_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_15_ce0 : OUT STD_LOGIC;
        weights_15_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_16_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_16_ce0 : OUT STD_LOGIC;
        weights_16_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_17_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_17_ce0 : OUT STD_LOGIC;
        weights_17_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_18_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_18_ce0 : OUT STD_LOGIC;
        weights_18_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_19_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_19_ce0 : OUT STD_LOGIC;
        weights_19_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_20_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_20_ce0 : OUT STD_LOGIC;
        weights_20_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_21_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_21_ce0 : OUT STD_LOGIC;
        weights_21_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_22_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_22_ce0 : OUT STD_LOGIC;
        weights_22_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_23_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_23_ce0 : OUT STD_LOGIC;
        weights_23_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_24_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_24_ce0 : OUT STD_LOGIC;
        weights_24_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_25_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_25_ce0 : OUT STD_LOGIC;
        weights_25_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_26_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_26_ce0 : OUT STD_LOGIC;
        weights_26_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_27_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_27_ce0 : OUT STD_LOGIC;
        weights_27_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_28_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_28_ce0 : OUT STD_LOGIC;
        weights_28_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_29_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_29_ce0 : OUT STD_LOGIC;
        weights_29_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_30_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_30_ce0 : OUT STD_LOGIC;
        weights_30_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_31_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_31_ce0 : OUT STD_LOGIC;
        weights_31_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_32_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_32_ce0 : OUT STD_LOGIC;
        weights_32_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_33_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_33_ce0 : OUT STD_LOGIC;
        weights_33_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_34_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_34_ce0 : OUT STD_LOGIC;
        weights_34_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_35_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_35_ce0 : OUT STD_LOGIC;
        weights_35_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_36_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_36_ce0 : OUT STD_LOGIC;
        weights_36_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_37_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_37_ce0 : OUT STD_LOGIC;
        weights_37_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_38_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_38_ce0 : OUT STD_LOGIC;
        weights_38_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_39_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_39_ce0 : OUT STD_LOGIC;
        weights_39_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_40_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_40_ce0 : OUT STD_LOGIC;
        weights_40_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_41_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_41_ce0 : OUT STD_LOGIC;
        weights_41_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_42_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_42_ce0 : OUT STD_LOGIC;
        weights_42_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_43_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_43_ce0 : OUT STD_LOGIC;
        weights_43_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_44_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_44_ce0 : OUT STD_LOGIC;
        weights_44_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_45_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_45_ce0 : OUT STD_LOGIC;
        weights_45_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_46_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_46_ce0 : OUT STD_LOGIC;
        weights_46_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_47_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_47_ce0 : OUT STD_LOGIC;
        weights_47_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_48_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_48_ce0 : OUT STD_LOGIC;
        weights_48_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_49_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_49_ce0 : OUT STD_LOGIC;
        weights_49_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_50_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_50_ce0 : OUT STD_LOGIC;
        weights_50_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_51_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_51_ce0 : OUT STD_LOGIC;
        weights_51_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_52_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_52_ce0 : OUT STD_LOGIC;
        weights_52_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_53_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_53_ce0 : OUT STD_LOGIC;
        weights_53_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_54_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_54_ce0 : OUT STD_LOGIC;
        weights_54_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_55_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_55_ce0 : OUT STD_LOGIC;
        weights_55_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_56_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_56_ce0 : OUT STD_LOGIC;
        weights_56_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_57_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_57_ce0 : OUT STD_LOGIC;
        weights_57_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_58_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_58_ce0 : OUT STD_LOGIC;
        weights_58_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_59_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_59_ce0 : OUT STD_LOGIC;
        weights_59_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_60_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_60_ce0 : OUT STD_LOGIC;
        weights_60_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_61_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_61_ce0 : OUT STD_LOGIC;
        weights_61_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_62_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_62_ce0 : OUT STD_LOGIC;
        weights_62_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_63_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        weights_63_ce0 : OUT STD_LOGIC;
        weights_63_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        biases_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        biases_ce0 : OUT STD_LOGIC;
        biases_q0 : IN STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_forwardPropagation_8_4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        weights_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_1_ce0 : OUT STD_LOGIC;
        weights_1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_2_ce0 : OUT STD_LOGIC;
        weights_2_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_3_ce0 : OUT STD_LOGIC;
        weights_3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_4_ce0 : OUT STD_LOGIC;
        weights_4_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_5_ce0 : OUT STD_LOGIC;
        weights_5_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_6_ce0 : OUT STD_LOGIC;
        weights_6_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        weights_7_ce0 : OUT STD_LOGIC;
        weights_7_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (24 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (24 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (24 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (24 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (24 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_forwardPropagation_4_10_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result_l3125_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_l3125_ce0 : OUT STD_LOGIC;
        result_l3125_we0 : OUT STD_LOGIC;
        result_l3125_d0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        result_l3125_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_l3125_ce1 : OUT STD_LOGIC;
        result_l3125_we1 : OUT STD_LOGIC;
        result_l3125_d1 : OUT STD_LOGIC_VECTOR (24 downto 0);
        p_read : IN STD_LOGIC_VECTOR (24 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (24 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (24 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_1_ce0 : OUT STD_LOGIC;
        weights_1_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_2_ce0 : OUT STD_LOGIC;
        weights_2_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        weights_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weights_3_ce0 : OUT STD_LOGIC;
        weights_3_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        biases_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        biases_ce0 : OUT STD_LOGIC;
        biases_q0 : IN STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_accelerator_360_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_result_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln139 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_first_assign_3 : IN STD_LOGIC_VECTOR (5 downto 0);
        result_l3125_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_l3125_ce0 : OUT STD_LOGIC;
        result_l3125_q0 : IN STD_LOGIC_VECTOR (24 downto 0);
        result_l3125_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        result_l3125_ce1 : OUT STD_LOGIC;
        result_l3125_q1 : IN STD_LOGIC_VECTOR (24 downto 0);
        add_ln871_out : OUT STD_LOGIC_VECTOR (5 downto 0);
        add_ln871_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component top_accelerator_360_Pipeline_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln5674 : IN STD_LOGIC_VECTOR (11 downto 0);
        empty : IN STD_LOGIC_VECTOR (11 downto 0);
        y_test_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        y_test_ce0 : OUT STD_LOGIC;
        y_test_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        y_test_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        y_test_ce1 : OUT STD_LOGIC;
        y_test_q1 : IN STD_LOGIC_VECTOR (0 downto 0);
        p_result_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_result_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component top_fdiv_32ns_32ns_32_10_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_sitofp_32ns_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_sparsemux_9_3_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        din3 : IN STD_LOGIC_VECTOR (24 downto 0);
        def : IN STD_LOGIC_VECTOR (24 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_forwardPropagation_4_10_s_ref_tmp20_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (24 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (24 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (24 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_accelerator_360_s_input_ref_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (21 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component top_accelerator_360_s_result_l1_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    result_l3125_U : component top_forwardPropagation_4_10_s_ref_tmp20_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 25,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_l3125_address0,
        ce0 => result_l3125_ce0,
        we0 => result_l3125_we0,
        d0 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_d0,
        q0 => result_l3125_q0,
        address1 => result_l3125_address1,
        ce1 => result_l3125_ce1,
        we1 => result_l3125_we1,
        d1 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_d1,
        q1 => result_l3125_q1);

    input_ref_0_U : component top_accelerator_360_s_input_ref_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 22,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_ref_0_address0,
        ce0 => input_ref_0_ce0,
        we0 => input_ref_0_we0,
        d0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_d0,
        q0 => input_ref_0_q0);

    result_l1_0_U : component top_accelerator_360_s_result_l1_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_l1_0_address0,
        ce0 => result_l1_0_ce0,
        we0 => result_l1_0_we0,
        d0 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_d0,
        q0 => result_l1_0_q0,
        address1 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_address1,
        ce1 => result_l1_0_ce1,
        we1 => result_l1_0_we1,
        d1 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_d1);

    grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400 : component top_accelerator_360_Pipeline_VITIS_LOOP_176_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start,
        ap_done => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_done,
        ap_idle => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_idle,
        ap_ready => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_ready,
        mul_ln177 => add_ln174_1_reg_1133,
        input_0_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_0_0_address0,
        input_0_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_0_0_ce0,
        input_0_0_q0 => input_0_0_q0,
        input_1_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_1_0_address0,
        input_1_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_1_0_ce0,
        input_1_0_q0 => input_1_0_q0,
        input_2_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_2_0_address0,
        input_2_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_2_0_ce0,
        input_2_0_q0 => input_2_0_q0,
        input_3_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_3_0_address0,
        input_3_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_3_0_ce0,
        input_3_0_q0 => input_3_0_q0,
        input_4_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_4_0_address0,
        input_4_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_4_0_ce0,
        input_4_0_q0 => input_4_0_q0,
        input_5_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_5_0_address0,
        input_5_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_5_0_ce0,
        input_5_0_q0 => input_5_0_q0,
        input_6_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_6_0_address0,
        input_6_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_6_0_ce0,
        input_6_0_q0 => input_6_0_q0,
        input_7_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_7_0_address0,
        input_7_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_7_0_ce0,
        input_7_0_q0 => input_7_0_q0,
        input_8_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_8_0_address0,
        input_8_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_8_0_ce0,
        input_8_0_q0 => input_8_0_q0,
        input_9_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_9_0_address0,
        input_9_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_9_0_ce0,
        input_9_0_q0 => input_9_0_q0,
        input_10_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_10_0_address0,
        input_10_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_10_0_ce0,
        input_10_0_q0 => input_10_0_q0,
        input_11_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_11_0_address0,
        input_11_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_11_0_ce0,
        input_11_0_q0 => input_11_0_q0,
        input_12_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_12_0_address0,
        input_12_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_12_0_ce0,
        input_12_0_q0 => input_12_0_q0,
        input_ref_0_address0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_address0,
        input_ref_0_ce0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_ce0,
        input_ref_0_we0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_we0,
        input_ref_0_d0 => grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_d0);

    grp_forwardPropagation_64_8_s_fu_432 : component top_forwardPropagation_64_8_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_forwardPropagation_64_8_s_fu_432_ap_start,
        ap_done => grp_forwardPropagation_64_8_s_fu_432_ap_done,
        ap_idle => grp_forwardPropagation_64_8_s_fu_432_ap_idle,
        ap_ready => grp_forwardPropagation_64_8_s_fu_432_ap_ready,
        agg_result_0_address0 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_address0,
        agg_result_0_ce0 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce0,
        agg_result_0_we0 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we0,
        agg_result_0_d0 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_d0,
        agg_result_0_address1 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_address1,
        agg_result_0_ce1 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce1,
        agg_result_0_we1 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we1,
        agg_result_0_d1 => grp_forwardPropagation_64_8_s_fu_432_agg_result_0_d1,
        input_0_address0 => grp_forwardPropagation_64_8_s_fu_432_input_0_address0,
        input_0_ce0 => grp_forwardPropagation_64_8_s_fu_432_input_0_ce0,
        input_0_q0 => input_ref_0_q0,
        weights_0_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_0_address0,
        weights_0_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_0_ce0,
        weights_0_q0 => weights_l1_0_q0,
        weights_1_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_1_address0,
        weights_1_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_1_ce0,
        weights_1_q0 => weights_l1_1_q0,
        weights_2_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_2_address0,
        weights_2_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_2_ce0,
        weights_2_q0 => weights_l1_2_q0,
        weights_3_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_3_address0,
        weights_3_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_3_ce0,
        weights_3_q0 => weights_l1_3_q0,
        weights_4_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_4_address0,
        weights_4_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_4_ce0,
        weights_4_q0 => weights_l1_4_q0,
        weights_5_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_5_address0,
        weights_5_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_5_ce0,
        weights_5_q0 => weights_l1_5_q0,
        weights_6_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_6_address0,
        weights_6_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_6_ce0,
        weights_6_q0 => weights_l1_6_q0,
        weights_7_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_7_address0,
        weights_7_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_7_ce0,
        weights_7_q0 => weights_l1_7_q0,
        weights_8_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_8_address0,
        weights_8_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_8_ce0,
        weights_8_q0 => weights_l1_8_q0,
        weights_9_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_9_address0,
        weights_9_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_9_ce0,
        weights_9_q0 => weights_l1_9_q0,
        weights_10_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_10_address0,
        weights_10_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_10_ce0,
        weights_10_q0 => weights_l1_10_q0,
        weights_11_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_11_address0,
        weights_11_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_11_ce0,
        weights_11_q0 => weights_l1_11_q0,
        weights_12_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_12_address0,
        weights_12_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_12_ce0,
        weights_12_q0 => weights_l1_12_q0,
        weights_13_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_13_address0,
        weights_13_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_13_ce0,
        weights_13_q0 => weights_l1_13_q0,
        weights_14_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_14_address0,
        weights_14_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_14_ce0,
        weights_14_q0 => weights_l1_14_q0,
        weights_15_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_15_address0,
        weights_15_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_15_ce0,
        weights_15_q0 => weights_l1_15_q0,
        weights_16_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_16_address0,
        weights_16_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_16_ce0,
        weights_16_q0 => weights_l1_16_q0,
        weights_17_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_17_address0,
        weights_17_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_17_ce0,
        weights_17_q0 => weights_l1_17_q0,
        weights_18_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_18_address0,
        weights_18_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_18_ce0,
        weights_18_q0 => weights_l1_18_q0,
        weights_19_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_19_address0,
        weights_19_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_19_ce0,
        weights_19_q0 => weights_l1_19_q0,
        weights_20_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_20_address0,
        weights_20_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_20_ce0,
        weights_20_q0 => weights_l1_20_q0,
        weights_21_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_21_address0,
        weights_21_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_21_ce0,
        weights_21_q0 => weights_l1_21_q0,
        weights_22_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_22_address0,
        weights_22_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_22_ce0,
        weights_22_q0 => weights_l1_22_q0,
        weights_23_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_23_address0,
        weights_23_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_23_ce0,
        weights_23_q0 => weights_l1_23_q0,
        weights_24_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_24_address0,
        weights_24_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_24_ce0,
        weights_24_q0 => weights_l1_24_q0,
        weights_25_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_25_address0,
        weights_25_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_25_ce0,
        weights_25_q0 => weights_l1_25_q0,
        weights_26_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_26_address0,
        weights_26_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_26_ce0,
        weights_26_q0 => weights_l1_26_q0,
        weights_27_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_27_address0,
        weights_27_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_27_ce0,
        weights_27_q0 => weights_l1_27_q0,
        weights_28_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_28_address0,
        weights_28_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_28_ce0,
        weights_28_q0 => weights_l1_28_q0,
        weights_29_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_29_address0,
        weights_29_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_29_ce0,
        weights_29_q0 => weights_l1_29_q0,
        weights_30_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_30_address0,
        weights_30_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_30_ce0,
        weights_30_q0 => weights_l1_30_q0,
        weights_31_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_31_address0,
        weights_31_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_31_ce0,
        weights_31_q0 => weights_l1_31_q0,
        weights_32_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_32_address0,
        weights_32_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_32_ce0,
        weights_32_q0 => weights_l1_32_q0,
        weights_33_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_33_address0,
        weights_33_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_33_ce0,
        weights_33_q0 => weights_l1_33_q0,
        weights_34_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_34_address0,
        weights_34_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_34_ce0,
        weights_34_q0 => weights_l1_34_q0,
        weights_35_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_35_address0,
        weights_35_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_35_ce0,
        weights_35_q0 => weights_l1_35_q0,
        weights_36_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_36_address0,
        weights_36_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_36_ce0,
        weights_36_q0 => weights_l1_36_q0,
        weights_37_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_37_address0,
        weights_37_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_37_ce0,
        weights_37_q0 => weights_l1_37_q0,
        weights_38_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_38_address0,
        weights_38_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_38_ce0,
        weights_38_q0 => weights_l1_38_q0,
        weights_39_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_39_address0,
        weights_39_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_39_ce0,
        weights_39_q0 => weights_l1_39_q0,
        weights_40_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_40_address0,
        weights_40_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_40_ce0,
        weights_40_q0 => weights_l1_40_q0,
        weights_41_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_41_address0,
        weights_41_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_41_ce0,
        weights_41_q0 => weights_l1_41_q0,
        weights_42_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_42_address0,
        weights_42_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_42_ce0,
        weights_42_q0 => weights_l1_42_q0,
        weights_43_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_43_address0,
        weights_43_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_43_ce0,
        weights_43_q0 => weights_l1_43_q0,
        weights_44_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_44_address0,
        weights_44_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_44_ce0,
        weights_44_q0 => weights_l1_44_q0,
        weights_45_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_45_address0,
        weights_45_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_45_ce0,
        weights_45_q0 => weights_l1_45_q0,
        weights_46_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_46_address0,
        weights_46_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_46_ce0,
        weights_46_q0 => weights_l1_46_q0,
        weights_47_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_47_address0,
        weights_47_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_47_ce0,
        weights_47_q0 => weights_l1_47_q0,
        weights_48_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_48_address0,
        weights_48_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_48_ce0,
        weights_48_q0 => weights_l1_48_q0,
        weights_49_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_49_address0,
        weights_49_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_49_ce0,
        weights_49_q0 => weights_l1_49_q0,
        weights_50_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_50_address0,
        weights_50_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_50_ce0,
        weights_50_q0 => weights_l1_50_q0,
        weights_51_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_51_address0,
        weights_51_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_51_ce0,
        weights_51_q0 => weights_l1_51_q0,
        weights_52_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_52_address0,
        weights_52_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_52_ce0,
        weights_52_q0 => weights_l1_52_q0,
        weights_53_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_53_address0,
        weights_53_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_53_ce0,
        weights_53_q0 => weights_l1_53_q0,
        weights_54_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_54_address0,
        weights_54_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_54_ce0,
        weights_54_q0 => weights_l1_54_q0,
        weights_55_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_55_address0,
        weights_55_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_55_ce0,
        weights_55_q0 => weights_l1_55_q0,
        weights_56_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_56_address0,
        weights_56_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_56_ce0,
        weights_56_q0 => weights_l1_56_q0,
        weights_57_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_57_address0,
        weights_57_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_57_ce0,
        weights_57_q0 => weights_l1_57_q0,
        weights_58_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_58_address0,
        weights_58_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_58_ce0,
        weights_58_q0 => weights_l1_58_q0,
        weights_59_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_59_address0,
        weights_59_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_59_ce0,
        weights_59_q0 => weights_l1_59_q0,
        weights_60_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_60_address0,
        weights_60_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_60_ce0,
        weights_60_q0 => weights_l1_60_q0,
        weights_61_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_61_address0,
        weights_61_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_61_ce0,
        weights_61_q0 => weights_l1_61_q0,
        weights_62_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_62_address0,
        weights_62_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_62_ce0,
        weights_62_q0 => weights_l1_62_q0,
        weights_63_address0 => grp_forwardPropagation_64_8_s_fu_432_weights_63_address0,
        weights_63_ce0 => grp_forwardPropagation_64_8_s_fu_432_weights_63_ce0,
        weights_63_q0 => weights_l1_63_q0,
        biases_address0 => grp_forwardPropagation_64_8_s_fu_432_biases_address0,
        biases_ce0 => grp_forwardPropagation_64_8_s_fu_432_biases_ce0,
        biases_q0 => biases_l1_q0);

    grp_forwardPropagation_8_4_s_fu_568 : component top_forwardPropagation_8_4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_forwardPropagation_8_4_s_fu_568_ap_start,
        ap_done => grp_forwardPropagation_8_4_s_fu_568_ap_done,
        ap_idle => grp_forwardPropagation_8_4_s_fu_568_ap_idle,
        ap_ready => grp_forwardPropagation_8_4_s_fu_568_ap_ready,
        input_0_address0 => grp_forwardPropagation_8_4_s_fu_568_input_0_address0,
        input_0_ce0 => grp_forwardPropagation_8_4_s_fu_568_input_0_ce0,
        input_0_q0 => result_l1_0_q0,
        weights_0_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_0_address0,
        weights_0_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_0_ce0,
        weights_0_q0 => weights_l2_0_q0,
        weights_1_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_1_address0,
        weights_1_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_1_ce0,
        weights_1_q0 => weights_l2_1_q0,
        weights_2_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_2_address0,
        weights_2_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_2_ce0,
        weights_2_q0 => weights_l2_2_q0,
        weights_3_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_3_address0,
        weights_3_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_3_ce0,
        weights_3_q0 => weights_l2_3_q0,
        weights_4_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_4_address0,
        weights_4_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_4_ce0,
        weights_4_q0 => weights_l2_4_q0,
        weights_5_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_5_address0,
        weights_5_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_5_ce0,
        weights_5_q0 => weights_l2_5_q0,
        weights_6_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_6_address0,
        weights_6_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_6_ce0,
        weights_6_q0 => weights_l2_6_q0,
        weights_7_address0 => grp_forwardPropagation_8_4_s_fu_568_weights_7_address0,
        weights_7_ce0 => grp_forwardPropagation_8_4_s_fu_568_weights_7_ce0,
        weights_7_q0 => weights_l2_7_q0,
        p_read4 => p_read,
        p_read11 => p_read1,
        p_read12 => p_read2,
        p_read13 => p_read3,
        ap_return_0 => grp_forwardPropagation_8_4_s_fu_568_ap_return_0,
        ap_return_1 => grp_forwardPropagation_8_4_s_fu_568_ap_return_1,
        ap_return_2 => grp_forwardPropagation_8_4_s_fu_568_ap_return_2,
        ap_return_3 => grp_forwardPropagation_8_4_s_fu_568_ap_return_3);

    grp_forwardPropagation_4_10_s_fu_593 : component top_forwardPropagation_4_10_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_forwardPropagation_4_10_s_fu_593_ap_start,
        ap_done => grp_forwardPropagation_4_10_s_fu_593_ap_done,
        ap_idle => grp_forwardPropagation_4_10_s_fu_593_ap_idle,
        ap_ready => grp_forwardPropagation_4_10_s_fu_593_ap_ready,
        result_l3125_address0 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_address0,
        result_l3125_ce0 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce0,
        result_l3125_we0 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_we0,
        result_l3125_d0 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_d0,
        result_l3125_address1 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_address1,
        result_l3125_ce1 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce1,
        result_l3125_we1 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_we1,
        result_l3125_d1 => grp_forwardPropagation_4_10_s_fu_593_result_l3125_d1,
        p_read => result_l2_reg_1143,
        p_read1 => result_l2_1_reg_1148,
        p_read2 => result_l2_2_reg_1153,
        p_read3 => result_l2_3_reg_1158,
        weights_0_address0 => grp_forwardPropagation_4_10_s_fu_593_weights_0_address0,
        weights_0_ce0 => grp_forwardPropagation_4_10_s_fu_593_weights_0_ce0,
        weights_0_q0 => weights_l3_0_q0,
        weights_1_address0 => grp_forwardPropagation_4_10_s_fu_593_weights_1_address0,
        weights_1_ce0 => grp_forwardPropagation_4_10_s_fu_593_weights_1_ce0,
        weights_1_q0 => weights_l3_1_q0,
        weights_2_address0 => grp_forwardPropagation_4_10_s_fu_593_weights_2_address0,
        weights_2_ce0 => grp_forwardPropagation_4_10_s_fu_593_weights_2_ce0,
        weights_2_q0 => weights_l3_2_q0,
        weights_3_address0 => grp_forwardPropagation_4_10_s_fu_593_weights_3_address0,
        weights_3_ce0 => grp_forwardPropagation_4_10_s_fu_593_weights_3_ce0,
        weights_3_q0 => weights_l3_3_q0,
        biases_address0 => grp_forwardPropagation_4_10_s_fu_593_biases_address0,
        biases_ce0 => grp_forwardPropagation_4_10_s_fu_593_biases_ce0,
        biases_q0 => biases_l3_q0);

    grp_accelerator_360_Pipeline_2_fu_612 : component top_accelerator_360_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_accelerator_360_Pipeline_2_fu_612_ap_start,
        ap_done => grp_accelerator_360_Pipeline_2_fu_612_ap_done,
        ap_idle => grp_accelerator_360_Pipeline_2_fu_612_ap_idle,
        ap_ready => grp_accelerator_360_Pipeline_2_fu_612_ap_ready,
        p_result_2 => p_result_2_reg_362,
        add_ln139 => add_ln139_reg_1178,
        p_first_assign_3 => p_first_assign_3_reg_1171,
        result_l3125_address0 => grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address0,
        result_l3125_ce0 => grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce0,
        result_l3125_q0 => result_l3125_q0,
        result_l3125_address1 => grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address1,
        result_l3125_ce1 => grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce1,
        result_l3125_q1 => result_l3125_q1,
        add_ln871_out => grp_accelerator_360_Pipeline_2_fu_612_add_ln871_out,
        add_ln871_out_ap_vld => grp_accelerator_360_Pipeline_2_fu_612_add_ln871_out_ap_vld,
        ap_return => grp_accelerator_360_Pipeline_2_fu_612_ap_return);

    grp_accelerator_360_Pipeline_3_fu_622 : component top_accelerator_360_Pipeline_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_accelerator_360_Pipeline_3_fu_622_ap_start,
        ap_done => grp_accelerator_360_Pipeline_3_fu_622_ap_done,
        ap_idle => grp_accelerator_360_Pipeline_3_fu_622_ap_idle,
        ap_ready => grp_accelerator_360_Pipeline_3_fu_622_ap_ready,
        zext_ln5674 => trunc_ln5674_reg_1188,
        empty => trunc_ln5674_reg_1188,
        y_test_address0 => grp_accelerator_360_Pipeline_3_fu_622_y_test_address0,
        y_test_ce0 => grp_accelerator_360_Pipeline_3_fu_622_y_test_ce0,
        y_test_q0 => y_test_q0,
        y_test_address1 => grp_accelerator_360_Pipeline_3_fu_622_y_test_address1,
        y_test_ce1 => grp_accelerator_360_Pipeline_3_fu_622_y_test_ce1,
        y_test_q1 => y_test_q1,
        p_result_3_out => grp_accelerator_360_Pipeline_3_fu_622_p_result_3_out,
        p_result_3_out_ap_vld => grp_accelerator_360_Pipeline_3_fu_622_p_result_3_out_ap_vld);

    sparsemux_9_3_25_1_1_U1579 : component top_sparsemux_9_3_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "100",
        din0_WIDTH => 25,
        CASE1 => "010",
        din1_WIDTH => 25,
        CASE2 => "001",
        din2_WIDTH => 25,
        CASE3 => "000",
        din3_WIDTH => 25,
        def_WIDTH => 25,
        sel_WIDTH => 3,
        dout_WIDTH => 25)
    port map (
        din0 => ap_const_lv25_0,
        din1 => trunc_ln193_3_fu_948_p1,
        din2 => test_accuracy_fu_1052_p6,
        din3 => test_accuracy_fu_1052_p8,
        def => test_accuracy_fu_1052_p9,
        sel => test_accuracy_fu_1052_p10,
        dout => test_accuracy_fu_1052_p11);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv25_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    ap_return_preg <= test_accuracy_fu_1052_p11;
                end if; 
            end if;
        end if;
    end process;


    grp_accelerator_360_Pipeline_2_fu_612_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_accelerator_360_Pipeline_2_fu_612_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln5658_fu_710_p2 = ap_const_lv1_0))) then 
                    grp_accelerator_360_Pipeline_2_fu_612_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_accelerator_360_Pipeline_2_fu_612_ap_ready = ap_const_logic_1)) then 
                    grp_accelerator_360_Pipeline_2_fu_612_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_accelerator_360_Pipeline_3_fu_622_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_accelerator_360_Pipeline_3_fu_622_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln5658_fu_710_p2 = ap_const_lv1_1))) then 
                    grp_accelerator_360_Pipeline_3_fu_622_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_accelerator_360_Pipeline_3_fu_622_ap_ready = ap_const_logic_1)) then 
                    grp_accelerator_360_Pipeline_3_fu_622_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln174_fu_659_p2 = ap_const_lv1_0))) then 
                    grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_ready = ap_const_logic_1)) then 
                    grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forwardPropagation_4_10_s_fu_593_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_forwardPropagation_4_10_s_fu_593_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_forwardPropagation_8_4_s_fu_568_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_forwardPropagation_4_10_s_fu_593_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forwardPropagation_4_10_s_fu_593_ap_ready = ap_const_logic_1)) then 
                    grp_forwardPropagation_4_10_s_fu_593_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forwardPropagation_64_8_s_fu_432_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_forwardPropagation_64_8_s_fu_432_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_forwardPropagation_64_8_s_fu_432_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forwardPropagation_64_8_s_fu_432_ap_ready = ap_const_logic_1)) then 
                    grp_forwardPropagation_64_8_s_fu_432_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forwardPropagation_8_4_s_fu_568_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_forwardPropagation_8_4_s_fu_568_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_forwardPropagation_8_4_s_fu_568_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forwardPropagation_8_4_s_fu_568_ap_ready = ap_const_logic_1)) then 
                    grp_forwardPropagation_8_4_s_fu_568_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    correct_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                correct_fu_310 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                correct_fu_310 <= correct_1_fu_827_p3;
            end if; 
        end if;
    end process;

    idx_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                idx_reg_374 <= add_ln5658_reg_1166;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_forwardPropagation_4_10_s_fu_593_ap_done = ap_const_logic_1))) then 
                idx_reg_374 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    iteration_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                iteration_fu_314 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln5658_fu_710_p2 = ap_const_lv1_1))) then 
                iteration_fu_314 <= add_ln174_reg_1128;
            end if; 
        end if;
    end process;

    p_result_1_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((not((targetBlock_reg_1194 = ap_const_lv2_1)) and not((targetBlock_reg_1194 = ap_const_lv2_0))) or ((targetBlock_reg_1194 = ap_const_lv2_0) and (icmp_ln888_fu_787_p2 = ap_const_lv1_0))))) then 
                p_result_1_reg_385 <= zext_ln5653_fu_776_p1;
            elsif ((((targetBlock_reg_1194 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((targetBlock_reg_1194 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln888_fu_787_p2 = ap_const_lv1_1)))) then 
                p_result_1_reg_385 <= p_result_2_reg_362;
            end if; 
        end if;
    end process;

    p_result_2_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                p_result_2_reg_362 <= p_result_1_reg_385;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_forwardPropagation_4_10_s_fu_593_ap_done = ap_const_logic_1))) then 
                p_result_2_reg_362 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln139_reg_1178 <= add_ln139_fu_731_p2;
                add_ln5658_reg_1166 <= add_ln5658_fu_716_p2;
                    add_ln60_reg_1183(12 downto 1) <= add_ln60_fu_760_p2(12 downto 1);
                    p_first_assign_3_reg_1171(5 downto 2) <= p_first_assign_3_fu_722_p3(5 downto 2);
                    trunc_ln5674_reg_1188(11 downto 1) <= trunc_ln5674_fu_766_p1(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln174_1_reg_1133 <= add_ln174_1_fu_683_p2;
                add_ln174_reg_1128 <= add_ln174_fu_665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_accelerator_360_Pipeline_2_fu_612_add_ln871_out_ap_vld = ap_const_logic_1))) then
                add_ln871_loc_fu_322 <= grp_accelerator_360_Pipeline_2_fu_612_add_ln871_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                conv_reg_1206 <= grp_fu_8510_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                div_reg_1211 <= grp_fu_8506_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_accelerator_360_Pipeline_3_fu_622_p_result_3_out_ap_vld = ap_const_logic_1))) then
                p_result_3_loc_fu_318 <= grp_accelerator_360_Pipeline_3_fu_622_p_result_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                result_l2_1_reg_1148 <= grp_forwardPropagation_8_4_s_fu_568_ap_return_1;
                result_l2_2_reg_1153 <= grp_forwardPropagation_8_4_s_fu_568_ap_return_2;
                result_l2_3_reg_1158 <= grp_forwardPropagation_8_4_s_fu_568_ap_return_3;
                result_l2_reg_1143 <= grp_forwardPropagation_8_4_s_fu_568_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                targetBlock_reg_1194 <= grp_accelerator_360_Pipeline_2_fu_612_ap_return;
            end if;
        end if;
    end process;
    p_first_assign_3_reg_1171(1 downto 0) <= "00";
    add_ln60_reg_1183(0) <= '0';
    trunc_ln5674_reg_1188(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_done, grp_forwardPropagation_64_8_s_fu_432_ap_done, grp_forwardPropagation_8_4_s_fu_568_ap_done, grp_forwardPropagation_4_10_s_fu_593_ap_done, grp_accelerator_360_Pipeline_2_fu_612_ap_done, grp_accelerator_360_Pipeline_3_fu_622_ap_done, ap_CS_fsm_state8, icmp_ln174_fu_659_p2, ap_CS_fsm_state3, ap_CS_fsm_state5, icmp_ln5658_fu_710_p2, ap_CS_fsm_state13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln174_fu_659_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_forwardPropagation_64_8_s_fu_432_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_forwardPropagation_8_4_s_fu_568_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_forwardPropagation_4_10_s_fu_593_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln5658_fu_710_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_accelerator_360_Pipeline_2_fu_612_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_accelerator_360_Pipeline_3_fu_622_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    actual_digit_fu_809_p2 <= std_logic_vector(unsigned(p_result_3_loc_fu_318) - unsigned(zext_ln5674_fu_793_p1));
    add_ln139_1_fu_779_p2 <= std_logic_vector(unsigned(p_first_assign_3_reg_1171) + unsigned(ap_const_lv6_4));
    add_ln139_fu_731_p2 <= std_logic_vector(unsigned(p_result_2_reg_362) + unsigned(ap_const_lv64_4));
    add_ln174_1_fu_683_p2 <= std_logic_vector(unsigned(tmp_11_fu_675_p3) + unsigned(zext_ln174_fu_671_p1));
    add_ln174_fu_665_p2 <= std_logic_vector(unsigned(iteration_fu_314) + unsigned(ap_const_lv9_1));
    add_ln189_fu_821_p2 <= std_logic_vector(unsigned(correct_fu_310) + unsigned(ap_const_lv32_1));
    add_ln193_fu_922_p2 <= std_logic_vector(unsigned(trunc_ln193_2_fu_912_p1) + unsigned(ap_const_lv11_7EF));
    add_ln5658_fu_716_p2 <= std_logic_vector(unsigned(idx_reg_374) + unsigned(ap_const_lv4_1));
    add_ln60_fu_760_p2 <= std_logic_vector(unsigned(zext_ln60_fu_745_p1) + unsigned(zext_ln60_1_fu_756_p1));
    and_ln193_1_fu_1036_p2 <= (xor_ln193_1_fu_1030_p2 and icmp_ln193_1_fu_916_p2);
    and_ln193_fu_1018_p2 <= (xor_ln193_fu_1012_p2 and icmp_ln193_2_fu_942_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_accelerator_360_Pipeline_2_fu_612_ap_done)
    begin
        if ((grp_accelerator_360_Pipeline_2_fu_612_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_accelerator_360_Pipeline_3_fu_622_ap_done)
    begin
        if ((grp_accelerator_360_Pipeline_3_fu_622_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_done)
    begin
        if ((grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_forwardPropagation_64_8_s_fu_432_ap_done)
    begin
        if ((grp_forwardPropagation_64_8_s_fu_432_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_forwardPropagation_8_4_s_fu_568_ap_done)
    begin
        if ((grp_forwardPropagation_8_4_s_fu_568_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(grp_forwardPropagation_4_10_s_fu_593_ap_done)
    begin
        if ((grp_forwardPropagation_4_10_s_fu_593_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state29, test_accuracy_fu_1052_p11, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ap_return <= test_accuracy_fu_1052_p11;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    ashr_ln193_fu_962_p2 <= std_logic_vector(shift_right(signed(select_ln193_fu_892_p3),to_integer(unsigned('0' & zext_ln193_2_fu_958_p1(31-1 downto 0)))));
    biases_l1_address0 <= grp_forwardPropagation_64_8_s_fu_432_biases_address0;
    biases_l1_ce0 <= grp_forwardPropagation_64_8_s_fu_432_biases_ce0;
    biases_l3_address0 <= grp_forwardPropagation_4_10_s_fu_593_biases_address0;
    biases_l3_ce0 <= grp_forwardPropagation_4_10_s_fu_593_biases_ce0;
    bitcast_ln716_fu_840_p1 <= grp_fu_8513_p_dout0;
    correct_1_fu_827_p3 <= 
        add_ln189_fu_821_p2 when (icmp_ln188_fu_815_p2(0) = '1') else 
        correct_fu_310;
    grp_accelerator_360_Pipeline_2_fu_612_ap_start <= grp_accelerator_360_Pipeline_2_fu_612_ap_start_reg;
    grp_accelerator_360_Pipeline_3_fu_622_ap_start <= grp_accelerator_360_Pipeline_3_fu_622_ap_start_reg;
    grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_ap_start_reg;
    grp_forwardPropagation_4_10_s_fu_593_ap_start <= grp_forwardPropagation_4_10_s_fu_593_ap_start_reg;
    grp_forwardPropagation_64_8_s_fu_432_ap_start <= grp_forwardPropagation_64_8_s_fu_432_ap_start_reg;
    grp_forwardPropagation_8_4_s_fu_568_ap_start <= grp_forwardPropagation_8_4_s_fu_568_ap_start_reg;
    grp_fu_8506_p_ce <= ap_const_logic_1;
    grp_fu_8506_p_din0 <= conv_reg_1206;
    grp_fu_8506_p_din1 <= ap_const_lv32_43B40000;
    grp_fu_8510_p_ce <= ap_const_logic_1;
    grp_fu_8510_p_din0 <= correct_fu_310;
    grp_fu_8513_p_ce <= ap_const_logic_1;
    grp_fu_8513_p_din0 <= div_reg_1211;
    icmp_ln174_fu_659_p2 <= "1" when (iteration_fu_314 = ap_const_lv9_168) else "0";
    icmp_ln188_fu_815_p2 <= "1" when (predicted_digit_fu_799_p4 = actual_digit_fu_809_p2) else "0";
    icmp_ln193_1_fu_916_p2 <= "1" when (signed(sub_ln193_1_fu_906_p2) > signed(ap_const_lv12_11)) else "0";
    icmp_ln193_2_fu_942_p2 <= "1" when (sub_ln193_1_fu_906_p2 = ap_const_lv12_11) else "0";
    icmp_ln193_3_fu_952_p2 <= "1" when (unsigned(select_ln193_1_fu_934_p3) < unsigned(ap_const_lv11_36)) else "0";
    icmp_ln193_4_fu_988_p2 <= "1" when (unsigned(select_ln193_1_fu_934_p3) < unsigned(ap_const_lv11_19)) else "0";
    icmp_ln193_fu_900_p2 <= "1" when (trunc_ln193_fu_844_p1 = ap_const_lv63_0) else "0";
    icmp_ln5658_fu_710_p2 <= "1" when (idx_reg_374 = ap_const_lv4_9) else "0";
    icmp_ln888_fu_787_p2 <= "1" when (add_ln871_loc_fu_322 = add_ln139_1_fu_779_p2) else "0";
    input_0_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_0_0_address0;
    input_0_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_0_0_ce0;
    input_10_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_10_0_address0;
    input_10_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_10_0_ce0;
    input_11_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_11_0_address0;
    input_11_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_11_0_ce0;
    input_12_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_12_0_address0;
    input_12_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_12_0_ce0;
    input_1_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_1_0_address0;
    input_1_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_1_0_ce0;
    input_2_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_2_0_address0;
    input_2_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_2_0_ce0;
    input_3_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_3_0_address0;
    input_3_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_3_0_ce0;
    input_4_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_4_0_address0;
    input_4_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_4_0_ce0;
    input_5_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_5_0_address0;
    input_5_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_5_0_ce0;
    input_6_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_6_0_address0;
    input_6_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_6_0_ce0;
    input_7_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_7_0_address0;
    input_7_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_7_0_ce0;
    input_8_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_8_0_address0;
    input_8_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_8_0_ce0;
    input_9_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_9_0_address0;
    input_9_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_9_0_ce0;

    input_ref_0_address0_assign_proc : process(grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_address0, grp_forwardPropagation_64_8_s_fu_432_input_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_ref_0_address0 <= grp_forwardPropagation_64_8_s_fu_432_input_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_ref_0_address0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_address0;
        else 
            input_ref_0_address0 <= "XXXXXX";
        end if; 
    end process;


    input_ref_0_ce0_assign_proc : process(grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_ce0, grp_forwardPropagation_64_8_s_fu_432_input_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_ref_0_ce0 <= grp_forwardPropagation_64_8_s_fu_432_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_ref_0_ce0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_ce0;
        else 
            input_ref_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_ref_0_we0_assign_proc : process(grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_ref_0_we0 <= grp_accelerator_360_Pipeline_VITIS_LOOP_176_7_fu_400_input_ref_0_we0;
        else 
            input_ref_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln193_fu_1024_p2 <= (icmp_ln193_fu_900_p2 or icmp_ln193_2_fu_942_p2);
    p_first_assign_3_fu_722_p3 <= (add_ln5658_fu_716_p2 & ap_const_lv2_0);
    predicted_digit_fu_799_p4 <= p_result_2_reg_362(33 downto 2);

    result_l1_0_address0_assign_proc : process(ap_CS_fsm_state7, grp_forwardPropagation_64_8_s_fu_432_agg_result_0_address0, grp_forwardPropagation_8_4_s_fu_568_input_0_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            result_l1_0_address0 <= grp_forwardPropagation_8_4_s_fu_568_input_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            result_l1_0_address0 <= grp_forwardPropagation_64_8_s_fu_432_agg_result_0_address0;
        else 
            result_l1_0_address0 <= "XXX";
        end if; 
    end process;


    result_l1_0_ce0_assign_proc : process(ap_CS_fsm_state7, grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce0, grp_forwardPropagation_8_4_s_fu_568_input_0_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            result_l1_0_ce0 <= grp_forwardPropagation_8_4_s_fu_568_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            result_l1_0_ce0 <= grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce0;
        else 
            result_l1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_l1_0_ce1_assign_proc : process(grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            result_l1_0_ce1 <= grp_forwardPropagation_64_8_s_fu_432_agg_result_0_ce1;
        else 
            result_l1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    result_l1_0_we0_assign_proc : process(grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            result_l1_0_we0 <= grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we0;
        else 
            result_l1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_l1_0_we1_assign_proc : process(grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            result_l1_0_we1 <= grp_forwardPropagation_64_8_s_fu_432_agg_result_0_we1;
        else 
            result_l1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    result_l3125_address0_assign_proc : process(ap_CS_fsm_state10, grp_forwardPropagation_4_10_s_fu_593_result_l3125_address0, grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            result_l3125_address0 <= grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            result_l3125_address0 <= grp_forwardPropagation_4_10_s_fu_593_result_l3125_address0;
        else 
            result_l3125_address0 <= "XXXX";
        end if; 
    end process;


    result_l3125_address1_assign_proc : process(ap_CS_fsm_state10, grp_forwardPropagation_4_10_s_fu_593_result_l3125_address1, grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            result_l3125_address1 <= grp_accelerator_360_Pipeline_2_fu_612_result_l3125_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            result_l3125_address1 <= grp_forwardPropagation_4_10_s_fu_593_result_l3125_address1;
        else 
            result_l3125_address1 <= "XXXX";
        end if; 
    end process;


    result_l3125_ce0_assign_proc : process(ap_CS_fsm_state10, grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce0, grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            result_l3125_ce0 <= grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            result_l3125_ce0 <= grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce0;
        else 
            result_l3125_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_l3125_ce1_assign_proc : process(ap_CS_fsm_state10, grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce1, grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            result_l3125_ce1 <= grp_accelerator_360_Pipeline_2_fu_612_result_l3125_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            result_l3125_ce1 <= grp_forwardPropagation_4_10_s_fu_593_result_l3125_ce1;
        else 
            result_l3125_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    result_l3125_we0_assign_proc : process(grp_forwardPropagation_4_10_s_fu_593_result_l3125_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            result_l3125_we0 <= grp_forwardPropagation_4_10_s_fu_593_result_l3125_we0;
        else 
            result_l3125_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_l3125_we1_assign_proc : process(grp_forwardPropagation_4_10_s_fu_593_result_l3125_we1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            result_l3125_we1 <= grp_forwardPropagation_4_10_s_fu_593_result_l3125_we1;
        else 
            result_l3125_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln193_1_fu_934_p3 <= 
        add_ln193_fu_922_p2 when (icmp_ln193_1_fu_916_p2(0) = '1') else 
        sub_ln193_2_fu_928_p2;
    select_ln193_1cast_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln193_1_fu_934_p3),25));
    select_ln193_4_fu_972_p3 <= 
        ap_const_lv25_1FFFFFF when (tmp_fu_848_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln193_fu_892_p3 <= 
        sub_ln193_fu_886_p2 when (tmp_fu_848_p3(0) = '1') else 
        zext_ln193_1_fu_882_p1;
    shl_ln193_fu_998_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln193_3_fu_948_p1),to_integer(unsigned('0' & select_ln193_1cast_fu_994_p1(25-1 downto 0)))));
    sub_ln193_1_fu_906_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln193_fu_866_p1));
    sub_ln193_2_fu_928_p2 <= std_logic_vector(unsigned(ap_const_lv11_11) - unsigned(trunc_ln193_2_fu_912_p1));
    sub_ln193_fu_886_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln193_1_fu_882_p1));
    test_accuracy_fu_1052_p10 <= ((icmp_ln193_fu_900_p2 & and_ln193_fu_1018_p2) & and_ln193_1_fu_1036_p2);
    test_accuracy_fu_1052_p6 <= 
        trunc_ln193_4_fu_968_p1 when (icmp_ln193_3_fu_952_p2(0) = '1') else 
        select_ln193_4_fu_972_p3;
    test_accuracy_fu_1052_p8 <= 
        shl_ln193_fu_998_p2 when (icmp_ln193_4_fu_988_p2(0) = '1') else 
        ap_const_lv25_0;
    test_accuracy_fu_1052_p9 <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_11_fu_675_p3 <= (iteration_fu_314 & ap_const_lv2_0);
    tmp_12_fu_738_p3 <= (iteration_fu_314 & ap_const_lv3_0);
    tmp_13_fu_749_p3 <= (iteration_fu_314 & ap_const_lv1_0);
    tmp_fu_848_p3 <= bitcast_ln716_fu_840_p1(63 downto 63);
    tmp_s_fu_856_p4 <= bitcast_ln716_fu_840_p1(62 downto 52);
    trunc_ln193_1_fu_870_p1 <= bitcast_ln716_fu_840_p1(52 - 1 downto 0);
    trunc_ln193_2_fu_912_p1 <= sub_ln193_1_fu_906_p2(11 - 1 downto 0);
    trunc_ln193_3_fu_948_p1 <= select_ln193_fu_892_p3(25 - 1 downto 0);
    trunc_ln193_4_fu_968_p1 <= ashr_ln193_fu_962_p2(25 - 1 downto 0);
    trunc_ln193_fu_844_p1 <= bitcast_ln716_fu_840_p1(63 - 1 downto 0);
    trunc_ln5674_fu_766_p1 <= add_ln60_fu_760_p2(12 - 1 downto 0);
    weights_l1_0_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_0_address0;
    weights_l1_0_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_0_ce0;
    weights_l1_10_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_10_address0;
    weights_l1_10_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_10_ce0;
    weights_l1_11_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_11_address0;
    weights_l1_11_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_11_ce0;
    weights_l1_12_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_12_address0;
    weights_l1_12_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_12_ce0;
    weights_l1_13_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_13_address0;
    weights_l1_13_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_13_ce0;
    weights_l1_14_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_14_address0;
    weights_l1_14_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_14_ce0;
    weights_l1_15_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_15_address0;
    weights_l1_15_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_15_ce0;
    weights_l1_16_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_16_address0;
    weights_l1_16_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_16_ce0;
    weights_l1_17_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_17_address0;
    weights_l1_17_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_17_ce0;
    weights_l1_18_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_18_address0;
    weights_l1_18_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_18_ce0;
    weights_l1_19_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_19_address0;
    weights_l1_19_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_19_ce0;
    weights_l1_1_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_1_address0;
    weights_l1_1_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_1_ce0;
    weights_l1_20_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_20_address0;
    weights_l1_20_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_20_ce0;
    weights_l1_21_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_21_address0;
    weights_l1_21_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_21_ce0;
    weights_l1_22_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_22_address0;
    weights_l1_22_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_22_ce0;
    weights_l1_23_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_23_address0;
    weights_l1_23_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_23_ce0;
    weights_l1_24_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_24_address0;
    weights_l1_24_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_24_ce0;
    weights_l1_25_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_25_address0;
    weights_l1_25_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_25_ce0;
    weights_l1_26_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_26_address0;
    weights_l1_26_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_26_ce0;
    weights_l1_27_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_27_address0;
    weights_l1_27_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_27_ce0;
    weights_l1_28_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_28_address0;
    weights_l1_28_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_28_ce0;
    weights_l1_29_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_29_address0;
    weights_l1_29_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_29_ce0;
    weights_l1_2_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_2_address0;
    weights_l1_2_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_2_ce0;
    weights_l1_30_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_30_address0;
    weights_l1_30_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_30_ce0;
    weights_l1_31_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_31_address0;
    weights_l1_31_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_31_ce0;
    weights_l1_32_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_32_address0;
    weights_l1_32_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_32_ce0;
    weights_l1_33_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_33_address0;
    weights_l1_33_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_33_ce0;
    weights_l1_34_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_34_address0;
    weights_l1_34_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_34_ce0;
    weights_l1_35_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_35_address0;
    weights_l1_35_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_35_ce0;
    weights_l1_36_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_36_address0;
    weights_l1_36_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_36_ce0;
    weights_l1_37_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_37_address0;
    weights_l1_37_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_37_ce0;
    weights_l1_38_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_38_address0;
    weights_l1_38_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_38_ce0;
    weights_l1_39_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_39_address0;
    weights_l1_39_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_39_ce0;
    weights_l1_3_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_3_address0;
    weights_l1_3_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_3_ce0;
    weights_l1_40_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_40_address0;
    weights_l1_40_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_40_ce0;
    weights_l1_41_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_41_address0;
    weights_l1_41_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_41_ce0;
    weights_l1_42_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_42_address0;
    weights_l1_42_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_42_ce0;
    weights_l1_43_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_43_address0;
    weights_l1_43_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_43_ce0;
    weights_l1_44_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_44_address0;
    weights_l1_44_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_44_ce0;
    weights_l1_45_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_45_address0;
    weights_l1_45_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_45_ce0;
    weights_l1_46_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_46_address0;
    weights_l1_46_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_46_ce0;
    weights_l1_47_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_47_address0;
    weights_l1_47_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_47_ce0;
    weights_l1_48_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_48_address0;
    weights_l1_48_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_48_ce0;
    weights_l1_49_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_49_address0;
    weights_l1_49_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_49_ce0;
    weights_l1_4_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_4_address0;
    weights_l1_4_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_4_ce0;
    weights_l1_50_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_50_address0;
    weights_l1_50_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_50_ce0;
    weights_l1_51_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_51_address0;
    weights_l1_51_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_51_ce0;
    weights_l1_52_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_52_address0;
    weights_l1_52_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_52_ce0;
    weights_l1_53_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_53_address0;
    weights_l1_53_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_53_ce0;
    weights_l1_54_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_54_address0;
    weights_l1_54_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_54_ce0;
    weights_l1_55_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_55_address0;
    weights_l1_55_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_55_ce0;
    weights_l1_56_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_56_address0;
    weights_l1_56_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_56_ce0;
    weights_l1_57_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_57_address0;
    weights_l1_57_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_57_ce0;
    weights_l1_58_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_58_address0;
    weights_l1_58_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_58_ce0;
    weights_l1_59_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_59_address0;
    weights_l1_59_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_59_ce0;
    weights_l1_5_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_5_address0;
    weights_l1_5_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_5_ce0;
    weights_l1_60_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_60_address0;
    weights_l1_60_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_60_ce0;
    weights_l1_61_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_61_address0;
    weights_l1_61_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_61_ce0;
    weights_l1_62_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_62_address0;
    weights_l1_62_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_62_ce0;
    weights_l1_63_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_63_address0;
    weights_l1_63_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_63_ce0;
    weights_l1_6_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_6_address0;
    weights_l1_6_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_6_ce0;
    weights_l1_7_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_7_address0;
    weights_l1_7_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_7_ce0;
    weights_l1_8_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_8_address0;
    weights_l1_8_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_8_ce0;
    weights_l1_9_address0 <= grp_forwardPropagation_64_8_s_fu_432_weights_9_address0;
    weights_l1_9_ce0 <= grp_forwardPropagation_64_8_s_fu_432_weights_9_ce0;
    weights_l2_0_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_0_address0;
    weights_l2_0_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_0_ce0;
    weights_l2_1_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_1_address0;
    weights_l2_1_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_1_ce0;
    weights_l2_2_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_2_address0;
    weights_l2_2_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_2_ce0;
    weights_l2_3_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_3_address0;
    weights_l2_3_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_3_ce0;
    weights_l2_4_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_4_address0;
    weights_l2_4_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_4_ce0;
    weights_l2_5_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_5_address0;
    weights_l2_5_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_5_ce0;
    weights_l2_6_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_6_address0;
    weights_l2_6_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_6_ce0;
    weights_l2_7_address0 <= grp_forwardPropagation_8_4_s_fu_568_weights_7_address0;
    weights_l2_7_ce0 <= grp_forwardPropagation_8_4_s_fu_568_weights_7_ce0;
    weights_l3_0_address0 <= grp_forwardPropagation_4_10_s_fu_593_weights_0_address0;
    weights_l3_0_ce0 <= grp_forwardPropagation_4_10_s_fu_593_weights_0_ce0;
    weights_l3_1_address0 <= grp_forwardPropagation_4_10_s_fu_593_weights_1_address0;
    weights_l3_1_ce0 <= grp_forwardPropagation_4_10_s_fu_593_weights_1_ce0;
    weights_l3_2_address0 <= grp_forwardPropagation_4_10_s_fu_593_weights_2_address0;
    weights_l3_2_ce0 <= grp_forwardPropagation_4_10_s_fu_593_weights_2_ce0;
    weights_l3_3_address0 <= grp_forwardPropagation_4_10_s_fu_593_weights_3_address0;
    weights_l3_3_ce0 <= grp_forwardPropagation_4_10_s_fu_593_weights_3_ce0;
    xor_ln193_1_fu_1030_p2 <= (or_ln193_fu_1024_p2 xor ap_const_lv1_1);
    xor_ln193_fu_1012_p2 <= (icmp_ln193_fu_900_p2 xor ap_const_lv1_1);
    y_test_address0 <= grp_accelerator_360_Pipeline_3_fu_622_y_test_address0;
    y_test_address1 <= grp_accelerator_360_Pipeline_3_fu_622_y_test_address1;
    y_test_ce0 <= grp_accelerator_360_Pipeline_3_fu_622_y_test_ce0;
    y_test_ce1 <= grp_accelerator_360_Pipeline_3_fu_622_y_test_ce1;
    zext_ln174_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iteration_fu_314),11));
    zext_ln193_1_cast_fu_874_p3 <= (ap_const_lv1_1 & trunc_ln193_1_fu_870_p1);
    zext_ln193_1_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln193_1_cast_fu_874_p3),54));
    zext_ln193_2_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln193_1_fu_934_p3),54));
    zext_ln193_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_856_p4),12));
    zext_ln5653_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_first_assign_3_reg_1171),64));
    zext_ln5674_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln60_reg_1183),32));
    zext_ln60_1_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_749_p3),13));
    zext_ln60_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_738_p3),13));
end behav;
