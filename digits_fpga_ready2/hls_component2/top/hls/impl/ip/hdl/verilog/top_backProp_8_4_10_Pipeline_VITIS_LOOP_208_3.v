// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_backProp_8_4_10_Pipeline_VITIS_LOOP_208_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        agg_result_0_i,
        agg_result_0_o,
        agg_result_0_o_ap_vld,
        agg_result_3_i,
        agg_result_3_o,
        agg_result_3_o_ap_vld,
        agg_result_2_i,
        agg_result_2_o,
        agg_result_2_o_ap_vld,
        agg_result_1_i,
        agg_result_1_o,
        agg_result_1_o_ap_vld,
        output_load_reload,
        output_10_load_reload,
        output_13_load_1_reload,
        output_16_load_reload
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [24:0] agg_result_0_i;
output  [24:0] agg_result_0_o;
output   agg_result_0_o_ap_vld;
input  [24:0] agg_result_3_i;
output  [24:0] agg_result_3_o;
output   agg_result_3_o_ap_vld;
input  [24:0] agg_result_2_i;
output  [24:0] agg_result_2_o;
output   agg_result_2_o_ap_vld;
input  [24:0] agg_result_1_i;
output  [24:0] agg_result_1_o;
output   agg_result_1_o_ap_vld;
input  [17:0] output_load_reload;
input  [17:0] output_10_load_reload;
input  [17:0] output_13_load_1_reload;
input  [17:0] output_16_load_reload;

reg ap_idle;
reg[24:0] agg_result_0_o;
reg agg_result_0_o_ap_vld;
reg[24:0] agg_result_3_o;
reg agg_result_3_o_ap_vld;
reg[24:0] agg_result_2_o;
reg agg_result_2_o_ap_vld;
reg[24:0] agg_result_1_o;
reg agg_result_1_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln208_fu_164_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [1:0] trunc_ln208_fu_176_p1;
reg   [1:0] trunc_ln208_reg_273;
wire    ap_block_pp0_stage0_11001;
reg   [24:0] trunc_ln_reg_280;
reg   [2:0] ii_fu_72;
wire   [2:0] add_ln208_fu_170_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_ii_1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln211_fu_242_p2;
wire   [24:0] tmp_3_fu_180_p9;
wire  signed [24:0] tmp_3_fu_180_p11;
wire   [17:0] sext_ln211_1_fu_208_p9;
wire   [17:0] sext_ln211_1_fu_208_p11;
wire   [17:0] mul_ln211_fu_236_p0;
wire   [42:0] mul_ln211_fu_236_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [42:0] mul_ln211_fu_236_p00;
reg    ap_condition_240;
reg    ap_condition_246;
reg    ap_condition_252;
reg    ap_condition_258;
wire   [1:0] tmp_3_fu_180_p1;
wire   [1:0] tmp_3_fu_180_p3;
wire  signed [1:0] tmp_3_fu_180_p5;
wire  signed [1:0] tmp_3_fu_180_p7;
wire   [1:0] sext_ln211_1_fu_208_p1;
wire   [1:0] sext_ln211_1_fu_208_p3;
wire  signed [1:0] sext_ln211_1_fu_208_p5;
wire  signed [1:0] sext_ln211_1_fu_208_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ii_fu_72 = 3'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) top_sparsemux_9_2_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 25 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 25 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 25 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 25 ),
    .def_WIDTH( 25 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 25 ))
sparsemux_9_2_25_1_1_U511(
    .din0(agg_result_0_i),
    .din1(agg_result_1_i),
    .din2(agg_result_2_i),
    .din3(agg_result_3_i),
    .def(tmp_3_fu_180_p9),
    .sel(trunc_ln208_fu_176_p1),
    .dout(tmp_3_fu_180_p11)
);

(* dissolve_hierarchy = "yes" *) top_sparsemux_9_2_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 18 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 18 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 18 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 18 ),
    .def_WIDTH( 18 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
sparsemux_9_2_18_1_1_U512(
    .din0(output_load_reload),
    .din1(output_10_load_reload),
    .din2(output_13_load_1_reload),
    .din3(output_16_load_reload),
    .def(sext_ln211_1_fu_208_p9),
    .sel(trunc_ln208_fu_176_p1),
    .dout(sext_ln211_1_fu_208_p11)
);

top_mul_18ns_25s_43_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 43 ))
mul_18ns_25s_43_1_1_U513(
    .din0(mul_ln211_fu_236_p0),
    .din1(tmp_3_fu_180_p11),
    .dout(mul_ln211_fu_236_p2)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln208_fu_164_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            ii_fu_72 <= add_ln208_fu_170_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ii_fu_72 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln208_reg_273 <= trunc_ln208_fu_176_p1;
        trunc_ln_reg_280 <= {{mul_ln211_fu_236_p2[41:17]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((trunc_ln208_reg_273 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            agg_result_0_o = trunc_ln_reg_280;
        end else if ((1'b1 == ap_condition_240)) begin
            agg_result_0_o = 25'd0;
        end else begin
            agg_result_0_o = agg_result_0_i;
        end
    end else begin
        agg_result_0_o = agg_result_0_i;
    end
end

always @ (*) begin
    if ((((trunc_ln208_reg_273 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln208_fu_176_p1 == 2'd0) & (icmp_ln208_fu_164_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln211_fu_242_p2 == 1'd1)))) begin
        agg_result_0_o_ap_vld = 1'b1;
    end else begin
        agg_result_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((trunc_ln208_reg_273 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            agg_result_1_o = trunc_ln_reg_280;
        end else if ((1'b1 == ap_condition_246)) begin
            agg_result_1_o = 25'd0;
        end else begin
            agg_result_1_o = agg_result_1_i;
        end
    end else begin
        agg_result_1_o = agg_result_1_i;
    end
end

always @ (*) begin
    if ((((trunc_ln208_reg_273 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln208_fu_176_p1 == 2'd1) & (icmp_ln208_fu_164_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln211_fu_242_p2 == 1'd1)))) begin
        agg_result_1_o_ap_vld = 1'b1;
    end else begin
        agg_result_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((trunc_ln208_reg_273 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            agg_result_2_o = trunc_ln_reg_280;
        end else if ((1'b1 == ap_condition_252)) begin
            agg_result_2_o = 25'd0;
        end else begin
            agg_result_2_o = agg_result_2_i;
        end
    end else begin
        agg_result_2_o = agg_result_2_i;
    end
end

always @ (*) begin
    if ((((trunc_ln208_reg_273 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln208_fu_176_p1 == 2'd2) & (icmp_ln208_fu_164_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln211_fu_242_p2 == 1'd1)))) begin
        agg_result_2_o_ap_vld = 1'b1;
    end else begin
        agg_result_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((trunc_ln208_reg_273 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            agg_result_3_o = trunc_ln_reg_280;
        end else if ((1'b1 == ap_condition_258)) begin
            agg_result_3_o = 25'd0;
        end else begin
            agg_result_3_o = agg_result_3_i;
        end
    end else begin
        agg_result_3_o = agg_result_3_i;
    end
end

always @ (*) begin
    if ((((trunc_ln208_reg_273 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln208_fu_176_p1 == 2'd3) & (icmp_ln208_fu_164_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln211_fu_242_p2 == 1'd1)))) begin
        agg_result_3_o_ap_vld = 1'b1;
    end else begin
        agg_result_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln208_fu_164_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ii_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_ii_1 = ii_fu_72;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln208_fu_170_p2 = (ap_sig_allocacmp_ii_1 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_240 = ((trunc_ln208_fu_176_p1 == 2'd0) & (icmp_ln208_fu_164_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln211_fu_242_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_246 = ((trunc_ln208_fu_176_p1 == 2'd1) & (icmp_ln208_fu_164_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln211_fu_242_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_252 = ((trunc_ln208_fu_176_p1 == 2'd2) & (icmp_ln208_fu_164_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln211_fu_242_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_258 = ((trunc_ln208_fu_176_p1 == 2'd3) & (icmp_ln208_fu_164_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln211_fu_242_p2 == 1'd1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln208_fu_164_p2 = ((ap_sig_allocacmp_ii_1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_242_p2 = ((mul_ln211_fu_236_p2 == 43'd0) ? 1'b1 : 1'b0);

assign mul_ln211_fu_236_p0 = mul_ln211_fu_236_p00;

assign mul_ln211_fu_236_p00 = sext_ln211_1_fu_208_p11;

assign sext_ln211_1_fu_208_p9 = 'bx;

assign tmp_3_fu_180_p9 = 'bx;

assign trunc_ln208_fu_176_p1 = ap_sig_allocacmp_ii_1[1:0];

endmodule //top_backProp_8_4_10_Pipeline_VITIS_LOOP_208_3
