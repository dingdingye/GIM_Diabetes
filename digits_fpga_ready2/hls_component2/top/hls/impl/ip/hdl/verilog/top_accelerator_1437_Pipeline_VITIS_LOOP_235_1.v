// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_accelerator_1437_Pipeline_VITIS_LOOP_235_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weights_l3_3_address0,
        weights_l3_3_ce0,
        weights_l3_3_we0,
        weights_l3_3_d0,
        weights_l3_3_address1,
        weights_l3_3_ce1,
        weights_l3_3_q1,
        weights_l3_2_address0,
        weights_l3_2_ce0,
        weights_l3_2_we0,
        weights_l3_2_d0,
        weights_l3_2_address1,
        weights_l3_2_ce1,
        weights_l3_2_q1,
        weights_l3_1_address0,
        weights_l3_1_ce0,
        weights_l3_1_we0,
        weights_l3_1_d0,
        weights_l3_1_address1,
        weights_l3_1_ce1,
        weights_l3_1_q1,
        weights_l3_0_address0,
        weights_l3_0_ce0,
        weights_l3_0_we0,
        weights_l3_0_d0,
        weights_l3_0_address1,
        weights_l3_0_ce1,
        weights_l3_0_q1,
        update_temp_mat_78_address0,
        update_temp_mat_78_ce0,
        update_temp_mat_78_q0,
        update_temp_mat_79_address0,
        update_temp_mat_79_ce0,
        update_temp_mat_79_q0,
        update_temp_mat_80_address0,
        update_temp_mat_80_ce0,
        update_temp_mat_80_q0,
        update_temp_mat_81_address0,
        update_temp_mat_81_ce0,
        update_temp_mat_81_q0,
        final_error_0_address0,
        final_error_0_ce0,
        final_error_0_q0,
        biases_l3_address0,
        biases_l3_ce0,
        biases_l3_we0,
        biases_l3_d0,
        biases_l3_address1,
        biases_l3_ce1,
        biases_l3_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] weights_l3_3_address0;
output   weights_l3_3_ce0;
output   weights_l3_3_we0;
output  [24:0] weights_l3_3_d0;
output  [3:0] weights_l3_3_address1;
output   weights_l3_3_ce1;
input  [24:0] weights_l3_3_q1;
output  [3:0] weights_l3_2_address0;
output   weights_l3_2_ce0;
output   weights_l3_2_we0;
output  [24:0] weights_l3_2_d0;
output  [3:0] weights_l3_2_address1;
output   weights_l3_2_ce1;
input  [24:0] weights_l3_2_q1;
output  [3:0] weights_l3_1_address0;
output   weights_l3_1_ce0;
output   weights_l3_1_we0;
output  [24:0] weights_l3_1_d0;
output  [3:0] weights_l3_1_address1;
output   weights_l3_1_ce1;
input  [24:0] weights_l3_1_q1;
output  [3:0] weights_l3_0_address0;
output   weights_l3_0_ce0;
output   weights_l3_0_we0;
output  [24:0] weights_l3_0_d0;
output  [3:0] weights_l3_0_address1;
output   weights_l3_0_ce1;
input  [24:0] weights_l3_0_q1;
output  [3:0] update_temp_mat_78_address0;
output   update_temp_mat_78_ce0;
input  [24:0] update_temp_mat_78_q0;
output  [3:0] update_temp_mat_79_address0;
output   update_temp_mat_79_ce0;
input  [24:0] update_temp_mat_79_q0;
output  [3:0] update_temp_mat_80_address0;
output   update_temp_mat_80_ce0;
input  [24:0] update_temp_mat_80_q0;
output  [3:0] update_temp_mat_81_address0;
output   update_temp_mat_81_ce0;
input  [24:0] update_temp_mat_81_q0;
output  [3:0] final_error_0_address0;
output   final_error_0_ce0;
input  [24:0] final_error_0_q0;
output  [3:0] biases_l3_address0;
output   biases_l3_ce0;
output   biases_l3_we0;
output  [24:0] biases_l3_d0;
output  [3:0] biases_l3_address1;
output   biases_l3_ce1;
input  [24:0] biases_l3_q1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln235_fu_215_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] weights_l3_0_addr_reg_417;
reg   [3:0] weights_l3_0_addr_reg_417_pp0_iter1_reg;
reg   [3:0] weights_l3_0_addr_reg_417_pp0_iter2_reg;
reg   [3:0] weights_l3_0_addr_reg_417_pp0_iter3_reg;
reg   [3:0] weights_l3_1_addr_reg_428;
reg   [3:0] weights_l3_1_addr_reg_428_pp0_iter1_reg;
reg   [3:0] weights_l3_1_addr_reg_428_pp0_iter2_reg;
reg   [3:0] weights_l3_1_addr_reg_428_pp0_iter3_reg;
reg   [3:0] weights_l3_2_addr_reg_439;
reg   [3:0] weights_l3_2_addr_reg_439_pp0_iter1_reg;
reg   [3:0] weights_l3_2_addr_reg_439_pp0_iter2_reg;
reg   [3:0] weights_l3_2_addr_reg_439_pp0_iter3_reg;
reg   [3:0] weights_l3_3_addr_reg_450;
reg   [3:0] weights_l3_3_addr_reg_450_pp0_iter1_reg;
reg   [3:0] weights_l3_3_addr_reg_450_pp0_iter2_reg;
reg   [3:0] weights_l3_3_addr_reg_450_pp0_iter3_reg;
reg   [3:0] biases_l3_addr_reg_461;
reg   [3:0] biases_l3_addr_reg_461_pp0_iter1_reg;
reg   [3:0] biases_l3_addr_reg_461_pp0_iter2_reg;
reg   [3:0] biases_l3_addr_reg_461_pp0_iter3_reg;
wire   [63:0] zext_ln235_fu_227_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_41_fu_58;
wire   [3:0] add_ln235_fu_221_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i;
reg    update_temp_mat_78_ce0_local;
reg    update_temp_mat_79_ce0_local;
reg    update_temp_mat_80_ce0_local;
reg    update_temp_mat_81_ce0_local;
reg    final_error_0_ce0_local;
reg    weights_l3_0_ce1_local;
reg    weights_l3_0_we0_local;
reg    weights_l3_0_ce0_local;
reg    weights_l3_1_ce1_local;
reg    weights_l3_1_we0_local;
reg    weights_l3_1_ce0_local;
reg    weights_l3_2_ce1_local;
reg    weights_l3_2_we0_local;
reg    weights_l3_2_ce0_local;
reg    weights_l3_3_ce1_local;
reg    weights_l3_3_we0_local;
reg    weights_l3_3_ce0_local;
reg    biases_l3_ce1_local;
reg    biases_l3_we0_local;
reg    biases_l3_ce0_local;
wire  signed [41:0] grp_fu_356_p3;
wire  signed [41:0] grp_fu_365_p3;
wire  signed [41:0] grp_fu_374_p3;
wire  signed [41:0] grp_fu_383_p3;
wire  signed [41:0] grp_fu_392_p3;
wire   [7:0] grp_fu_356_p1;
wire  signed [41:0] grp_fu_356_p2;
wire   [7:0] grp_fu_365_p1;
wire  signed [41:0] grp_fu_365_p2;
wire   [7:0] grp_fu_374_p1;
wire  signed [41:0] grp_fu_374_p2;
wire   [7:0] grp_fu_383_p1;
wire  signed [41:0] grp_fu_383_p2;
wire   [7:0] grp_fu_392_p1;
wire  signed [41:0] grp_fu_392_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 i_41_fu_58 = 4'd0;
#0 ap_done_reg = 1'b0;
end

top_mac_mulsub_25s_8ns_42s_42_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
mac_mulsub_25s_8ns_42s_42_4_1_U756(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(update_temp_mat_78_q0),
    .din1(grp_fu_356_p1),
    .din2(grp_fu_356_p2),
    .ce(1'b1),
    .dout(grp_fu_356_p3)
);

top_mac_mulsub_25s_8ns_42s_42_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
mac_mulsub_25s_8ns_42s_42_4_1_U757(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(update_temp_mat_79_q0),
    .din1(grp_fu_365_p1),
    .din2(grp_fu_365_p2),
    .ce(1'b1),
    .dout(grp_fu_365_p3)
);

top_mac_mulsub_25s_8ns_42s_42_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
mac_mulsub_25s_8ns_42s_42_4_1_U758(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(update_temp_mat_80_q0),
    .din1(grp_fu_374_p1),
    .din2(grp_fu_374_p2),
    .ce(1'b1),
    .dout(grp_fu_374_p3)
);

top_mac_mulsub_25s_8ns_42s_42_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
mac_mulsub_25s_8ns_42s_42_4_1_U759(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(update_temp_mat_81_q0),
    .din1(grp_fu_383_p1),
    .din2(grp_fu_383_p2),
    .ce(1'b1),
    .dout(grp_fu_383_p3)
);

top_mac_mulsub_25s_8ns_42s_42_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 42 ),
    .dout_WIDTH( 42 ))
mac_mulsub_25s_8ns_42s_42_4_1_U760(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(final_error_0_q0),
    .din1(grp_fu_392_p1),
    .din2(grp_fu_392_p2),
    .ce(1'b1),
    .dout(grp_fu_392_p3)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln235_fu_215_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_41_fu_58 <= add_ln235_fu_221_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_41_fu_58 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        biases_l3_addr_reg_461 <= zext_ln235_fu_227_p1;
        biases_l3_addr_reg_461_pp0_iter1_reg <= biases_l3_addr_reg_461;
        weights_l3_0_addr_reg_417 <= zext_ln235_fu_227_p1;
        weights_l3_0_addr_reg_417_pp0_iter1_reg <= weights_l3_0_addr_reg_417;
        weights_l3_1_addr_reg_428 <= zext_ln235_fu_227_p1;
        weights_l3_1_addr_reg_428_pp0_iter1_reg <= weights_l3_1_addr_reg_428;
        weights_l3_2_addr_reg_439 <= zext_ln235_fu_227_p1;
        weights_l3_2_addr_reg_439_pp0_iter1_reg <= weights_l3_2_addr_reg_439;
        weights_l3_3_addr_reg_450 <= zext_ln235_fu_227_p1;
        weights_l3_3_addr_reg_450_pp0_iter1_reg <= weights_l3_3_addr_reg_450;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        biases_l3_addr_reg_461_pp0_iter2_reg <= biases_l3_addr_reg_461_pp0_iter1_reg;
        biases_l3_addr_reg_461_pp0_iter3_reg <= biases_l3_addr_reg_461_pp0_iter2_reg;
        weights_l3_0_addr_reg_417_pp0_iter2_reg <= weights_l3_0_addr_reg_417_pp0_iter1_reg;
        weights_l3_0_addr_reg_417_pp0_iter3_reg <= weights_l3_0_addr_reg_417_pp0_iter2_reg;
        weights_l3_1_addr_reg_428_pp0_iter2_reg <= weights_l3_1_addr_reg_428_pp0_iter1_reg;
        weights_l3_1_addr_reg_428_pp0_iter3_reg <= weights_l3_1_addr_reg_428_pp0_iter2_reg;
        weights_l3_2_addr_reg_439_pp0_iter2_reg <= weights_l3_2_addr_reg_439_pp0_iter1_reg;
        weights_l3_2_addr_reg_439_pp0_iter3_reg <= weights_l3_2_addr_reg_439_pp0_iter2_reg;
        weights_l3_3_addr_reg_450_pp0_iter2_reg <= weights_l3_3_addr_reg_450_pp0_iter1_reg;
        weights_l3_3_addr_reg_450_pp0_iter3_reg <= weights_l3_3_addr_reg_450_pp0_iter2_reg;
    end
end

always @ (*) begin
    if (((icmp_ln235_fu_215_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_41_fu_58;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        biases_l3_ce0_local = 1'b1;
    end else begin
        biases_l3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        biases_l3_ce1_local = 1'b1;
    end else begin
        biases_l3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        biases_l3_we0_local = 1'b1;
    end else begin
        biases_l3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        final_error_0_ce0_local = 1'b1;
    end else begin
        final_error_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_78_ce0_local = 1'b1;
    end else begin
        update_temp_mat_78_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_79_ce0_local = 1'b1;
    end else begin
        update_temp_mat_79_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_80_ce0_local = 1'b1;
    end else begin
        update_temp_mat_80_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_81_ce0_local = 1'b1;
    end else begin
        update_temp_mat_81_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_0_ce0_local = 1'b1;
    end else begin
        weights_l3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weights_l3_0_ce1_local = 1'b1;
    end else begin
        weights_l3_0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_0_we0_local = 1'b1;
    end else begin
        weights_l3_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_1_ce0_local = 1'b1;
    end else begin
        weights_l3_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weights_l3_1_ce1_local = 1'b1;
    end else begin
        weights_l3_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_1_we0_local = 1'b1;
    end else begin
        weights_l3_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_2_ce0_local = 1'b1;
    end else begin
        weights_l3_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weights_l3_2_ce1_local = 1'b1;
    end else begin
        weights_l3_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_2_we0_local = 1'b1;
    end else begin
        weights_l3_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_3_ce0_local = 1'b1;
    end else begin
        weights_l3_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        weights_l3_3_ce1_local = 1'b1;
    end else begin
        weights_l3_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_l3_3_we0_local = 1'b1;
    end else begin
        weights_l3_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln235_fu_221_p2 = (ap_sig_allocacmp_i + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign biases_l3_address0 = biases_l3_addr_reg_461_pp0_iter3_reg;

assign biases_l3_address1 = biases_l3_addr_reg_461_pp0_iter1_reg;

assign biases_l3_ce0 = biases_l3_ce0_local;

assign biases_l3_ce1 = biases_l3_ce1_local;

assign biases_l3_d0 = {{grp_fu_392_p3[41:17]}};

assign biases_l3_we0 = biases_l3_we0_local;

assign final_error_0_address0 = zext_ln235_fu_227_p1;

assign final_error_0_ce0 = final_error_0_ce0_local;

assign grp_fu_356_p1 = 34'd131;

assign grp_fu_356_p2 = {{weights_l3_0_q1}, {17'd0}};

assign grp_fu_365_p1 = 34'd131;

assign grp_fu_365_p2 = {{weights_l3_1_q1}, {17'd0}};

assign grp_fu_374_p1 = 34'd131;

assign grp_fu_374_p2 = {{weights_l3_2_q1}, {17'd0}};

assign grp_fu_383_p1 = 34'd131;

assign grp_fu_383_p2 = {{weights_l3_3_q1}, {17'd0}};

assign grp_fu_392_p1 = 34'd131;

assign grp_fu_392_p2 = {{biases_l3_q1}, {17'd0}};

assign icmp_ln235_fu_215_p2 = ((ap_sig_allocacmp_i == 4'd10) ? 1'b1 : 1'b0);

assign update_temp_mat_78_address0 = zext_ln235_fu_227_p1;

assign update_temp_mat_78_ce0 = update_temp_mat_78_ce0_local;

assign update_temp_mat_79_address0 = zext_ln235_fu_227_p1;

assign update_temp_mat_79_ce0 = update_temp_mat_79_ce0_local;

assign update_temp_mat_80_address0 = zext_ln235_fu_227_p1;

assign update_temp_mat_80_ce0 = update_temp_mat_80_ce0_local;

assign update_temp_mat_81_address0 = zext_ln235_fu_227_p1;

assign update_temp_mat_81_ce0 = update_temp_mat_81_ce0_local;

assign weights_l3_0_address0 = weights_l3_0_addr_reg_417_pp0_iter3_reg;

assign weights_l3_0_address1 = weights_l3_0_addr_reg_417_pp0_iter1_reg;

assign weights_l3_0_ce0 = weights_l3_0_ce0_local;

assign weights_l3_0_ce1 = weights_l3_0_ce1_local;

assign weights_l3_0_d0 = {{grp_fu_356_p3[41:17]}};

assign weights_l3_0_we0 = weights_l3_0_we0_local;

assign weights_l3_1_address0 = weights_l3_1_addr_reg_428_pp0_iter3_reg;

assign weights_l3_1_address1 = weights_l3_1_addr_reg_428_pp0_iter1_reg;

assign weights_l3_1_ce0 = weights_l3_1_ce0_local;

assign weights_l3_1_ce1 = weights_l3_1_ce1_local;

assign weights_l3_1_d0 = {{grp_fu_365_p3[41:17]}};

assign weights_l3_1_we0 = weights_l3_1_we0_local;

assign weights_l3_2_address0 = weights_l3_2_addr_reg_439_pp0_iter3_reg;

assign weights_l3_2_address1 = weights_l3_2_addr_reg_439_pp0_iter1_reg;

assign weights_l3_2_ce0 = weights_l3_2_ce0_local;

assign weights_l3_2_ce1 = weights_l3_2_ce1_local;

assign weights_l3_2_d0 = {{grp_fu_374_p3[41:17]}};

assign weights_l3_2_we0 = weights_l3_2_we0_local;

assign weights_l3_3_address0 = weights_l3_3_addr_reg_450_pp0_iter3_reg;

assign weights_l3_3_address1 = weights_l3_3_addr_reg_450_pp0_iter1_reg;

assign weights_l3_3_ce0 = weights_l3_3_ce0_local;

assign weights_l3_3_ce1 = weights_l3_3_ce1_local;

assign weights_l3_3_d0 = {{grp_fu_383_p3[41:17]}};

assign weights_l3_3_we0 = weights_l3_3_we0_local;

assign zext_ln235_fu_227_p1 = ap_sig_allocacmp_i;

endmodule //top_accelerator_1437_Pipeline_VITIS_LOOP_235_1
