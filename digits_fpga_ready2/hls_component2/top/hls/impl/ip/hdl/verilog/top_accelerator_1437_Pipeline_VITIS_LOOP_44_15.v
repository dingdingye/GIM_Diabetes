// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_accelerator_1437_Pipeline_VITIS_LOOP_44_15 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_ref_0_address0,
        input_ref_0_ce0,
        input_ref_0_q0,
        input_T_0_load_out,
        input_T_0_load_out_ap_vld,
        input_T_0_1_load_out,
        input_T_0_1_load_out_ap_vld,
        input_T_0_2_load_out,
        input_T_0_2_load_out_ap_vld,
        input_T_0_3_load_out,
        input_T_0_3_load_out_ap_vld,
        input_T_0_4_load_out,
        input_T_0_4_load_out_ap_vld,
        input_T_0_5_load_out,
        input_T_0_5_load_out_ap_vld,
        input_T_0_6_load_out,
        input_T_0_6_load_out_ap_vld,
        input_T_0_7_load_out,
        input_T_0_7_load_out_ap_vld,
        input_T_0_8_load_out,
        input_T_0_8_load_out_ap_vld,
        input_T_0_9_load_out,
        input_T_0_9_load_out_ap_vld,
        input_T_0_10_load_out,
        input_T_0_10_load_out_ap_vld,
        input_T_0_11_load_out,
        input_T_0_11_load_out_ap_vld,
        input_T_0_12_load_out,
        input_T_0_12_load_out_ap_vld,
        input_T_0_13_load_out,
        input_T_0_13_load_out_ap_vld,
        input_T_0_14_load_out,
        input_T_0_14_load_out_ap_vld,
        input_T_0_15_load_out,
        input_T_0_15_load_out_ap_vld,
        input_T_0_16_load_out,
        input_T_0_16_load_out_ap_vld,
        input_T_0_17_load_out,
        input_T_0_17_load_out_ap_vld,
        input_T_0_18_load_out,
        input_T_0_18_load_out_ap_vld,
        input_T_0_19_load_out,
        input_T_0_19_load_out_ap_vld,
        input_T_0_20_load_out,
        input_T_0_20_load_out_ap_vld,
        input_T_0_21_load_out,
        input_T_0_21_load_out_ap_vld,
        input_T_0_22_load_out,
        input_T_0_22_load_out_ap_vld,
        input_T_0_23_load_out,
        input_T_0_23_load_out_ap_vld,
        input_T_0_24_load_out,
        input_T_0_24_load_out_ap_vld,
        input_T_0_25_load_out,
        input_T_0_25_load_out_ap_vld,
        input_T_0_26_load_out,
        input_T_0_26_load_out_ap_vld,
        input_T_0_27_load_out,
        input_T_0_27_load_out_ap_vld,
        input_T_0_28_load_out,
        input_T_0_28_load_out_ap_vld,
        input_T_0_29_load_out,
        input_T_0_29_load_out_ap_vld,
        input_T_0_30_load_out,
        input_T_0_30_load_out_ap_vld,
        input_T_0_31_load_out,
        input_T_0_31_load_out_ap_vld,
        input_T_0_32_load_out,
        input_T_0_32_load_out_ap_vld,
        input_T_0_33_load_out,
        input_T_0_33_load_out_ap_vld,
        input_T_0_34_load_out,
        input_T_0_34_load_out_ap_vld,
        input_T_0_35_load_out,
        input_T_0_35_load_out_ap_vld,
        input_T_0_36_load_out,
        input_T_0_36_load_out_ap_vld,
        input_T_0_37_load_out,
        input_T_0_37_load_out_ap_vld,
        input_T_0_38_load_out,
        input_T_0_38_load_out_ap_vld,
        input_T_0_39_load_out,
        input_T_0_39_load_out_ap_vld,
        input_T_0_40_load_out,
        input_T_0_40_load_out_ap_vld,
        input_T_0_41_load_out,
        input_T_0_41_load_out_ap_vld,
        input_T_0_42_load_out,
        input_T_0_42_load_out_ap_vld,
        input_T_0_43_load_out,
        input_T_0_43_load_out_ap_vld,
        input_T_0_44_load_out,
        input_T_0_44_load_out_ap_vld,
        input_T_0_45_load_out,
        input_T_0_45_load_out_ap_vld,
        input_T_0_46_load_out,
        input_T_0_46_load_out_ap_vld,
        input_T_0_47_load_out,
        input_T_0_47_load_out_ap_vld,
        input_T_0_48_load_out,
        input_T_0_48_load_out_ap_vld,
        input_T_0_49_load_out,
        input_T_0_49_load_out_ap_vld,
        input_T_0_50_load_out,
        input_T_0_50_load_out_ap_vld,
        input_T_0_51_load_out,
        input_T_0_51_load_out_ap_vld,
        input_T_0_52_load_out,
        input_T_0_52_load_out_ap_vld,
        input_T_0_53_load_out,
        input_T_0_53_load_out_ap_vld,
        input_T_0_54_load_out,
        input_T_0_54_load_out_ap_vld,
        input_T_0_55_load_out,
        input_T_0_55_load_out_ap_vld,
        input_T_0_56_load_out,
        input_T_0_56_load_out_ap_vld,
        input_T_0_57_load_out,
        input_T_0_57_load_out_ap_vld,
        input_T_0_58_load_out,
        input_T_0_58_load_out_ap_vld,
        input_T_0_59_load_out,
        input_T_0_59_load_out_ap_vld,
        input_T_0_60_load_out,
        input_T_0_60_load_out_ap_vld,
        input_T_0_61_load_out,
        input_T_0_61_load_out_ap_vld,
        input_T_0_62_load_out,
        input_T_0_62_load_out_ap_vld,
        input_T_0_63_load_out,
        input_T_0_63_load_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] input_ref_0_address0;
output   input_ref_0_ce0;
input  [21:0] input_ref_0_q0;
output  [21:0] input_T_0_load_out;
output   input_T_0_load_out_ap_vld;
output  [21:0] input_T_0_1_load_out;
output   input_T_0_1_load_out_ap_vld;
output  [21:0] input_T_0_2_load_out;
output   input_T_0_2_load_out_ap_vld;
output  [21:0] input_T_0_3_load_out;
output   input_T_0_3_load_out_ap_vld;
output  [21:0] input_T_0_4_load_out;
output   input_T_0_4_load_out_ap_vld;
output  [21:0] input_T_0_5_load_out;
output   input_T_0_5_load_out_ap_vld;
output  [21:0] input_T_0_6_load_out;
output   input_T_0_6_load_out_ap_vld;
output  [21:0] input_T_0_7_load_out;
output   input_T_0_7_load_out_ap_vld;
output  [21:0] input_T_0_8_load_out;
output   input_T_0_8_load_out_ap_vld;
output  [21:0] input_T_0_9_load_out;
output   input_T_0_9_load_out_ap_vld;
output  [21:0] input_T_0_10_load_out;
output   input_T_0_10_load_out_ap_vld;
output  [21:0] input_T_0_11_load_out;
output   input_T_0_11_load_out_ap_vld;
output  [21:0] input_T_0_12_load_out;
output   input_T_0_12_load_out_ap_vld;
output  [21:0] input_T_0_13_load_out;
output   input_T_0_13_load_out_ap_vld;
output  [21:0] input_T_0_14_load_out;
output   input_T_0_14_load_out_ap_vld;
output  [21:0] input_T_0_15_load_out;
output   input_T_0_15_load_out_ap_vld;
output  [21:0] input_T_0_16_load_out;
output   input_T_0_16_load_out_ap_vld;
output  [21:0] input_T_0_17_load_out;
output   input_T_0_17_load_out_ap_vld;
output  [21:0] input_T_0_18_load_out;
output   input_T_0_18_load_out_ap_vld;
output  [21:0] input_T_0_19_load_out;
output   input_T_0_19_load_out_ap_vld;
output  [21:0] input_T_0_20_load_out;
output   input_T_0_20_load_out_ap_vld;
output  [21:0] input_T_0_21_load_out;
output   input_T_0_21_load_out_ap_vld;
output  [21:0] input_T_0_22_load_out;
output   input_T_0_22_load_out_ap_vld;
output  [21:0] input_T_0_23_load_out;
output   input_T_0_23_load_out_ap_vld;
output  [21:0] input_T_0_24_load_out;
output   input_T_0_24_load_out_ap_vld;
output  [21:0] input_T_0_25_load_out;
output   input_T_0_25_load_out_ap_vld;
output  [21:0] input_T_0_26_load_out;
output   input_T_0_26_load_out_ap_vld;
output  [21:0] input_T_0_27_load_out;
output   input_T_0_27_load_out_ap_vld;
output  [21:0] input_T_0_28_load_out;
output   input_T_0_28_load_out_ap_vld;
output  [21:0] input_T_0_29_load_out;
output   input_T_0_29_load_out_ap_vld;
output  [21:0] input_T_0_30_load_out;
output   input_T_0_30_load_out_ap_vld;
output  [21:0] input_T_0_31_load_out;
output   input_T_0_31_load_out_ap_vld;
output  [21:0] input_T_0_32_load_out;
output   input_T_0_32_load_out_ap_vld;
output  [21:0] input_T_0_33_load_out;
output   input_T_0_33_load_out_ap_vld;
output  [21:0] input_T_0_34_load_out;
output   input_T_0_34_load_out_ap_vld;
output  [21:0] input_T_0_35_load_out;
output   input_T_0_35_load_out_ap_vld;
output  [21:0] input_T_0_36_load_out;
output   input_T_0_36_load_out_ap_vld;
output  [21:0] input_T_0_37_load_out;
output   input_T_0_37_load_out_ap_vld;
output  [21:0] input_T_0_38_load_out;
output   input_T_0_38_load_out_ap_vld;
output  [21:0] input_T_0_39_load_out;
output   input_T_0_39_load_out_ap_vld;
output  [21:0] input_T_0_40_load_out;
output   input_T_0_40_load_out_ap_vld;
output  [21:0] input_T_0_41_load_out;
output   input_T_0_41_load_out_ap_vld;
output  [21:0] input_T_0_42_load_out;
output   input_T_0_42_load_out_ap_vld;
output  [21:0] input_T_0_43_load_out;
output   input_T_0_43_load_out_ap_vld;
output  [21:0] input_T_0_44_load_out;
output   input_T_0_44_load_out_ap_vld;
output  [21:0] input_T_0_45_load_out;
output   input_T_0_45_load_out_ap_vld;
output  [21:0] input_T_0_46_load_out;
output   input_T_0_46_load_out_ap_vld;
output  [21:0] input_T_0_47_load_out;
output   input_T_0_47_load_out_ap_vld;
output  [21:0] input_T_0_48_load_out;
output   input_T_0_48_load_out_ap_vld;
output  [21:0] input_T_0_49_load_out;
output   input_T_0_49_load_out_ap_vld;
output  [21:0] input_T_0_50_load_out;
output   input_T_0_50_load_out_ap_vld;
output  [21:0] input_T_0_51_load_out;
output   input_T_0_51_load_out_ap_vld;
output  [21:0] input_T_0_52_load_out;
output   input_T_0_52_load_out_ap_vld;
output  [21:0] input_T_0_53_load_out;
output   input_T_0_53_load_out_ap_vld;
output  [21:0] input_T_0_54_load_out;
output   input_T_0_54_load_out_ap_vld;
output  [21:0] input_T_0_55_load_out;
output   input_T_0_55_load_out_ap_vld;
output  [21:0] input_T_0_56_load_out;
output   input_T_0_56_load_out_ap_vld;
output  [21:0] input_T_0_57_load_out;
output   input_T_0_57_load_out_ap_vld;
output  [21:0] input_T_0_58_load_out;
output   input_T_0_58_load_out_ap_vld;
output  [21:0] input_T_0_59_load_out;
output   input_T_0_59_load_out_ap_vld;
output  [21:0] input_T_0_60_load_out;
output   input_T_0_60_load_out_ap_vld;
output  [21:0] input_T_0_61_load_out;
output   input_T_0_61_load_out_ap_vld;
output  [21:0] input_T_0_62_load_out;
output   input_T_0_62_load_out_ap_vld;
output  [21:0] input_T_0_63_load_out;
output   input_T_0_63_load_out_ap_vld;

reg ap_idle;
reg input_T_0_load_out_ap_vld;
reg input_T_0_1_load_out_ap_vld;
reg input_T_0_2_load_out_ap_vld;
reg input_T_0_3_load_out_ap_vld;
reg input_T_0_4_load_out_ap_vld;
reg input_T_0_5_load_out_ap_vld;
reg input_T_0_6_load_out_ap_vld;
reg input_T_0_7_load_out_ap_vld;
reg input_T_0_8_load_out_ap_vld;
reg input_T_0_9_load_out_ap_vld;
reg input_T_0_10_load_out_ap_vld;
reg input_T_0_11_load_out_ap_vld;
reg input_T_0_12_load_out_ap_vld;
reg input_T_0_13_load_out_ap_vld;
reg input_T_0_14_load_out_ap_vld;
reg input_T_0_15_load_out_ap_vld;
reg input_T_0_16_load_out_ap_vld;
reg input_T_0_17_load_out_ap_vld;
reg input_T_0_18_load_out_ap_vld;
reg input_T_0_19_load_out_ap_vld;
reg input_T_0_20_load_out_ap_vld;
reg input_T_0_21_load_out_ap_vld;
reg input_T_0_22_load_out_ap_vld;
reg input_T_0_23_load_out_ap_vld;
reg input_T_0_24_load_out_ap_vld;
reg input_T_0_25_load_out_ap_vld;
reg input_T_0_26_load_out_ap_vld;
reg input_T_0_27_load_out_ap_vld;
reg input_T_0_28_load_out_ap_vld;
reg input_T_0_29_load_out_ap_vld;
reg input_T_0_30_load_out_ap_vld;
reg input_T_0_31_load_out_ap_vld;
reg input_T_0_32_load_out_ap_vld;
reg input_T_0_33_load_out_ap_vld;
reg input_T_0_34_load_out_ap_vld;
reg input_T_0_35_load_out_ap_vld;
reg input_T_0_36_load_out_ap_vld;
reg input_T_0_37_load_out_ap_vld;
reg input_T_0_38_load_out_ap_vld;
reg input_T_0_39_load_out_ap_vld;
reg input_T_0_40_load_out_ap_vld;
reg input_T_0_41_load_out_ap_vld;
reg input_T_0_42_load_out_ap_vld;
reg input_T_0_43_load_out_ap_vld;
reg input_T_0_44_load_out_ap_vld;
reg input_T_0_45_load_out_ap_vld;
reg input_T_0_46_load_out_ap_vld;
reg input_T_0_47_load_out_ap_vld;
reg input_T_0_48_load_out_ap_vld;
reg input_T_0_49_load_out_ap_vld;
reg input_T_0_50_load_out_ap_vld;
reg input_T_0_51_load_out_ap_vld;
reg input_T_0_52_load_out_ap_vld;
reg input_T_0_53_load_out_ap_vld;
reg input_T_0_54_load_out_ap_vld;
reg input_T_0_55_load_out_ap_vld;
reg input_T_0_56_load_out_ap_vld;
reg input_T_0_57_load_out_ap_vld;
reg input_T_0_58_load_out_ap_vld;
reg input_T_0_59_load_out_ap_vld;
reg input_T_0_60_load_out_ap_vld;
reg input_T_0_61_load_out_ap_vld;
reg input_T_0_62_load_out_ap_vld;
reg input_T_0_63_load_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln44_fu_1015_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] trunc_ln44_fu_1032_p1;
reg   [5:0] trunc_ln44_reg_2011;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln44_fu_1027_p1;
wire    ap_block_pp0_stage0;
reg   [6:0] i_fu_286;
wire   [6:0] i_40_fu_1021_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_39;
reg   [21:0] input_T_0_63_fu_290;
reg   [21:0] input_T_0_62_fu_294;
reg   [21:0] input_T_0_61_fu_298;
reg   [21:0] input_T_0_60_fu_302;
reg   [21:0] input_T_0_59_fu_306;
reg   [21:0] input_T_0_58_fu_310;
reg   [21:0] input_T_0_57_fu_314;
reg   [21:0] input_T_0_56_fu_318;
reg   [21:0] input_T_0_55_fu_322;
reg   [21:0] input_T_0_54_fu_326;
reg   [21:0] input_T_0_53_fu_330;
reg   [21:0] input_T_0_52_fu_334;
reg   [21:0] input_T_0_51_fu_338;
reg   [21:0] input_T_0_50_fu_342;
reg   [21:0] input_T_0_49_fu_346;
reg   [21:0] input_T_0_48_fu_350;
reg   [21:0] input_T_0_47_fu_354;
reg   [21:0] input_T_0_46_fu_358;
reg   [21:0] input_T_0_45_fu_362;
reg   [21:0] input_T_0_44_fu_366;
reg   [21:0] input_T_0_43_fu_370;
reg   [21:0] input_T_0_42_fu_374;
reg   [21:0] input_T_0_41_fu_378;
reg   [21:0] input_T_0_40_fu_382;
reg   [21:0] input_T_0_39_fu_386;
reg   [21:0] input_T_0_38_fu_390;
reg   [21:0] input_T_0_37_fu_394;
reg   [21:0] input_T_0_36_fu_398;
reg   [21:0] input_T_0_35_fu_402;
reg   [21:0] input_T_0_34_fu_406;
reg   [21:0] input_T_0_33_fu_410;
reg   [21:0] input_T_0_32_fu_414;
reg   [21:0] input_T_0_31_fu_418;
reg   [21:0] input_T_0_30_fu_422;
reg   [21:0] input_T_0_29_fu_426;
reg   [21:0] input_T_0_28_fu_430;
reg   [21:0] input_T_0_27_fu_434;
reg   [21:0] input_T_0_26_fu_438;
reg   [21:0] input_T_0_25_fu_442;
reg   [21:0] input_T_0_24_fu_446;
reg   [21:0] input_T_0_23_fu_450;
reg   [21:0] input_T_0_22_fu_454;
reg   [21:0] input_T_0_21_fu_458;
reg   [21:0] input_T_0_20_fu_462;
reg   [21:0] input_T_0_19_fu_466;
reg   [21:0] input_T_0_18_fu_470;
reg   [21:0] input_T_0_17_fu_474;
reg   [21:0] input_T_0_16_fu_478;
reg   [21:0] input_T_0_15_fu_482;
reg   [21:0] input_T_0_14_fu_486;
reg   [21:0] input_T_0_13_fu_490;
reg   [21:0] input_T_0_12_fu_494;
reg   [21:0] input_T_0_11_fu_498;
reg   [21:0] input_T_0_10_fu_502;
reg   [21:0] input_T_0_9_fu_506;
reg   [21:0] input_T_0_8_fu_510;
reg   [21:0] input_T_0_7_fu_514;
reg   [21:0] input_T_0_6_fu_518;
reg   [21:0] input_T_0_5_fu_522;
reg   [21:0] input_T_0_4_fu_526;
reg   [21:0] input_T_0_3_fu_530;
reg   [21:0] input_T_0_2_fu_534;
reg   [21:0] input_T_0_1_fu_538;
reg   [21:0] input_T_0_fu_542;
wire    ap_block_pp0_stage0_01001;
reg    input_ref_0_ce0_local;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 i_fu_286 = 7'd0;
#0 input_T_0_63_fu_290 = 22'd0;
#0 input_T_0_62_fu_294 = 22'd0;
#0 input_T_0_61_fu_298 = 22'd0;
#0 input_T_0_60_fu_302 = 22'd0;
#0 input_T_0_59_fu_306 = 22'd0;
#0 input_T_0_58_fu_310 = 22'd0;
#0 input_T_0_57_fu_314 = 22'd0;
#0 input_T_0_56_fu_318 = 22'd0;
#0 input_T_0_55_fu_322 = 22'd0;
#0 input_T_0_54_fu_326 = 22'd0;
#0 input_T_0_53_fu_330 = 22'd0;
#0 input_T_0_52_fu_334 = 22'd0;
#0 input_T_0_51_fu_338 = 22'd0;
#0 input_T_0_50_fu_342 = 22'd0;
#0 input_T_0_49_fu_346 = 22'd0;
#0 input_T_0_48_fu_350 = 22'd0;
#0 input_T_0_47_fu_354 = 22'd0;
#0 input_T_0_46_fu_358 = 22'd0;
#0 input_T_0_45_fu_362 = 22'd0;
#0 input_T_0_44_fu_366 = 22'd0;
#0 input_T_0_43_fu_370 = 22'd0;
#0 input_T_0_42_fu_374 = 22'd0;
#0 input_T_0_41_fu_378 = 22'd0;
#0 input_T_0_40_fu_382 = 22'd0;
#0 input_T_0_39_fu_386 = 22'd0;
#0 input_T_0_38_fu_390 = 22'd0;
#0 input_T_0_37_fu_394 = 22'd0;
#0 input_T_0_36_fu_398 = 22'd0;
#0 input_T_0_35_fu_402 = 22'd0;
#0 input_T_0_34_fu_406 = 22'd0;
#0 input_T_0_33_fu_410 = 22'd0;
#0 input_T_0_32_fu_414 = 22'd0;
#0 input_T_0_31_fu_418 = 22'd0;
#0 input_T_0_30_fu_422 = 22'd0;
#0 input_T_0_29_fu_426 = 22'd0;
#0 input_T_0_28_fu_430 = 22'd0;
#0 input_T_0_27_fu_434 = 22'd0;
#0 input_T_0_26_fu_438 = 22'd0;
#0 input_T_0_25_fu_442 = 22'd0;
#0 input_T_0_24_fu_446 = 22'd0;
#0 input_T_0_23_fu_450 = 22'd0;
#0 input_T_0_22_fu_454 = 22'd0;
#0 input_T_0_21_fu_458 = 22'd0;
#0 input_T_0_20_fu_462 = 22'd0;
#0 input_T_0_19_fu_466 = 22'd0;
#0 input_T_0_18_fu_470 = 22'd0;
#0 input_T_0_17_fu_474 = 22'd0;
#0 input_T_0_16_fu_478 = 22'd0;
#0 input_T_0_15_fu_482 = 22'd0;
#0 input_T_0_14_fu_486 = 22'd0;
#0 input_T_0_13_fu_490 = 22'd0;
#0 input_T_0_12_fu_494 = 22'd0;
#0 input_T_0_11_fu_498 = 22'd0;
#0 input_T_0_10_fu_502 = 22'd0;
#0 input_T_0_9_fu_506 = 22'd0;
#0 input_T_0_8_fu_510 = 22'd0;
#0 input_T_0_7_fu_514 = 22'd0;
#0 input_T_0_6_fu_518 = 22'd0;
#0 input_T_0_5_fu_522 = 22'd0;
#0 input_T_0_4_fu_526 = 22'd0;
#0 input_T_0_3_fu_530 = 22'd0;
#0 input_T_0_2_fu_534 = 22'd0;
#0 input_T_0_1_fu_538 = 22'd0;
#0 input_T_0_fu_542 = 22'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln44_fu_1015_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_286 <= i_40_fu_1021_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_286 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd10))) begin
        input_T_0_10_fu_502 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd11))) begin
        input_T_0_11_fu_498 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd12))) begin
        input_T_0_12_fu_494 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd13))) begin
        input_T_0_13_fu_490 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd14))) begin
        input_T_0_14_fu_486 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd15))) begin
        input_T_0_15_fu_482 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd16))) begin
        input_T_0_16_fu_478 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd17))) begin
        input_T_0_17_fu_474 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd18))) begin
        input_T_0_18_fu_470 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd19))) begin
        input_T_0_19_fu_466 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd1))) begin
        input_T_0_1_fu_538 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd20))) begin
        input_T_0_20_fu_462 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd21))) begin
        input_T_0_21_fu_458 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd22))) begin
        input_T_0_22_fu_454 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd23))) begin
        input_T_0_23_fu_450 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd24))) begin
        input_T_0_24_fu_446 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd25))) begin
        input_T_0_25_fu_442 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd26))) begin
        input_T_0_26_fu_438 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd27))) begin
        input_T_0_27_fu_434 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd28))) begin
        input_T_0_28_fu_430 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd29))) begin
        input_T_0_29_fu_426 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd2))) begin
        input_T_0_2_fu_534 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd30))) begin
        input_T_0_30_fu_422 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd31))) begin
        input_T_0_31_fu_418 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd32))) begin
        input_T_0_32_fu_414 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd33))) begin
        input_T_0_33_fu_410 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd34))) begin
        input_T_0_34_fu_406 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd35))) begin
        input_T_0_35_fu_402 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd36))) begin
        input_T_0_36_fu_398 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd37))) begin
        input_T_0_37_fu_394 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd38))) begin
        input_T_0_38_fu_390 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd39))) begin
        input_T_0_39_fu_386 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd3))) begin
        input_T_0_3_fu_530 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd40))) begin
        input_T_0_40_fu_382 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd41))) begin
        input_T_0_41_fu_378 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd42))) begin
        input_T_0_42_fu_374 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd43))) begin
        input_T_0_43_fu_370 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd44))) begin
        input_T_0_44_fu_366 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd45))) begin
        input_T_0_45_fu_362 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd46))) begin
        input_T_0_46_fu_358 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd47))) begin
        input_T_0_47_fu_354 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd48))) begin
        input_T_0_48_fu_350 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd49))) begin
        input_T_0_49_fu_346 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd4))) begin
        input_T_0_4_fu_526 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd50))) begin
        input_T_0_50_fu_342 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd51))) begin
        input_T_0_51_fu_338 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd52))) begin
        input_T_0_52_fu_334 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd53))) begin
        input_T_0_53_fu_330 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd54))) begin
        input_T_0_54_fu_326 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd55))) begin
        input_T_0_55_fu_322 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd56))) begin
        input_T_0_56_fu_318 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd57))) begin
        input_T_0_57_fu_314 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd58))) begin
        input_T_0_58_fu_310 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd59))) begin
        input_T_0_59_fu_306 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd5))) begin
        input_T_0_5_fu_522 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd60))) begin
        input_T_0_60_fu_302 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd61))) begin
        input_T_0_61_fu_298 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd62))) begin
        input_T_0_62_fu_294 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd63))) begin
        input_T_0_63_fu_290 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd6))) begin
        input_T_0_6_fu_518 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd7))) begin
        input_T_0_7_fu_514 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd8))) begin
        input_T_0_8_fu_510 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd9))) begin
        input_T_0_9_fu_506 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln44_reg_2011 == 6'd0))) begin
        input_T_0_fu_542 <= input_ref_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln44_reg_2011 <= trunc_ln44_fu_1032_p1;
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_39 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_39 = i_fu_286;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_10_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_10_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_11_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_11_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_12_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_12_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_13_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_13_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_14_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_14_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_15_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_15_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_16_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_16_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_17_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_17_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_18_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_18_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_19_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_19_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_1_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_1_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_20_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_20_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_21_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_21_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_22_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_22_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_23_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_23_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_24_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_24_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_25_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_25_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_26_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_26_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_27_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_27_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_28_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_28_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_29_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_29_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_2_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_2_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_30_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_30_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_31_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_31_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_32_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_32_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_33_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_33_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_34_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_34_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_35_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_35_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_36_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_36_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_37_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_37_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_38_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_38_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_39_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_39_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_3_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_3_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_40_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_40_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_41_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_41_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_42_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_42_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_43_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_43_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_44_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_44_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_45_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_45_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_46_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_46_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_47_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_47_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_48_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_48_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_49_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_49_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_4_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_4_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_50_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_50_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_51_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_51_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_52_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_52_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_53_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_53_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_54_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_54_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_55_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_55_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_56_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_56_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_57_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_57_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_58_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_58_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_59_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_59_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_5_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_5_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_60_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_60_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_61_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_61_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_62_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_62_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_63_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_63_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_6_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_6_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_7_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_7_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_8_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_8_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_9_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_9_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln44_fu_1015_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_T_0_load_out_ap_vld = 1'b1;
    end else begin
        input_T_0_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_ref_0_ce0_local = 1'b1;
    end else begin
        input_ref_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign i_40_fu_1021_p2 = (ap_sig_allocacmp_i_39 + 7'd1);

assign icmp_ln44_fu_1015_p2 = ((ap_sig_allocacmp_i_39 == 7'd64) ? 1'b1 : 1'b0);

assign input_T_0_10_load_out = input_T_0_10_fu_502;

assign input_T_0_11_load_out = input_T_0_11_fu_498;

assign input_T_0_12_load_out = input_T_0_12_fu_494;

assign input_T_0_13_load_out = input_T_0_13_fu_490;

assign input_T_0_14_load_out = input_T_0_14_fu_486;

assign input_T_0_15_load_out = input_T_0_15_fu_482;

assign input_T_0_16_load_out = input_T_0_16_fu_478;

assign input_T_0_17_load_out = input_T_0_17_fu_474;

assign input_T_0_18_load_out = input_T_0_18_fu_470;

assign input_T_0_19_load_out = input_T_0_19_fu_466;

assign input_T_0_1_load_out = input_T_0_1_fu_538;

assign input_T_0_20_load_out = input_T_0_20_fu_462;

assign input_T_0_21_load_out = input_T_0_21_fu_458;

assign input_T_0_22_load_out = input_T_0_22_fu_454;

assign input_T_0_23_load_out = input_T_0_23_fu_450;

assign input_T_0_24_load_out = input_T_0_24_fu_446;

assign input_T_0_25_load_out = input_T_0_25_fu_442;

assign input_T_0_26_load_out = input_T_0_26_fu_438;

assign input_T_0_27_load_out = input_T_0_27_fu_434;

assign input_T_0_28_load_out = input_T_0_28_fu_430;

assign input_T_0_29_load_out = input_T_0_29_fu_426;

assign input_T_0_2_load_out = input_T_0_2_fu_534;

assign input_T_0_30_load_out = input_T_0_30_fu_422;

assign input_T_0_31_load_out = input_T_0_31_fu_418;

assign input_T_0_32_load_out = input_T_0_32_fu_414;

assign input_T_0_33_load_out = input_T_0_33_fu_410;

assign input_T_0_34_load_out = input_T_0_34_fu_406;

assign input_T_0_35_load_out = input_T_0_35_fu_402;

assign input_T_0_36_load_out = input_T_0_36_fu_398;

assign input_T_0_37_load_out = input_T_0_37_fu_394;

assign input_T_0_38_load_out = input_T_0_38_fu_390;

assign input_T_0_39_load_out = input_T_0_39_fu_386;

assign input_T_0_3_load_out = input_T_0_3_fu_530;

assign input_T_0_40_load_out = input_T_0_40_fu_382;

assign input_T_0_41_load_out = input_T_0_41_fu_378;

assign input_T_0_42_load_out = input_T_0_42_fu_374;

assign input_T_0_43_load_out = input_T_0_43_fu_370;

assign input_T_0_44_load_out = input_T_0_44_fu_366;

assign input_T_0_45_load_out = input_T_0_45_fu_362;

assign input_T_0_46_load_out = input_T_0_46_fu_358;

assign input_T_0_47_load_out = input_T_0_47_fu_354;

assign input_T_0_48_load_out = input_T_0_48_fu_350;

assign input_T_0_49_load_out = input_T_0_49_fu_346;

assign input_T_0_4_load_out = input_T_0_4_fu_526;

assign input_T_0_50_load_out = input_T_0_50_fu_342;

assign input_T_0_51_load_out = input_T_0_51_fu_338;

assign input_T_0_52_load_out = input_T_0_52_fu_334;

assign input_T_0_53_load_out = input_T_0_53_fu_330;

assign input_T_0_54_load_out = input_T_0_54_fu_326;

assign input_T_0_55_load_out = input_T_0_55_fu_322;

assign input_T_0_56_load_out = input_T_0_56_fu_318;

assign input_T_0_57_load_out = input_T_0_57_fu_314;

assign input_T_0_58_load_out = input_T_0_58_fu_310;

assign input_T_0_59_load_out = input_T_0_59_fu_306;

assign input_T_0_5_load_out = input_T_0_5_fu_522;

assign input_T_0_60_load_out = input_T_0_60_fu_302;

assign input_T_0_61_load_out = input_T_0_61_fu_298;

assign input_T_0_62_load_out = input_T_0_62_fu_294;

assign input_T_0_63_load_out = input_T_0_63_fu_290;

assign input_T_0_6_load_out = input_T_0_6_fu_518;

assign input_T_0_7_load_out = input_T_0_7_fu_514;

assign input_T_0_8_load_out = input_T_0_8_fu_510;

assign input_T_0_9_load_out = input_T_0_9_fu_506;

assign input_T_0_load_out = input_T_0_fu_542;

assign input_ref_0_address0 = zext_ln44_fu_1027_p1;

assign input_ref_0_ce0 = input_ref_0_ce0_local;

assign trunc_ln44_fu_1032_p1 = ap_sig_allocacmp_i_39[5:0];

assign zext_ln44_fu_1027_p1 = ap_sig_allocacmp_i_39;

endmodule //top_accelerator_1437_Pipeline_VITIS_LOOP_44_15
