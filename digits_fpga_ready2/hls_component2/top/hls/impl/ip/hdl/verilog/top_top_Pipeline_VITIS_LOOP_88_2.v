// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_VITIS_LOOP_88_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_test_0_address0,
        input_test_0_ce0,
        input_test_0_we0,
        input_test_0_d0,
        input_test_0_address1,
        input_test_0_ce1,
        input_test_0_we1,
        input_test_0_d1,
        input_test_0_1_address0,
        input_test_0_1_ce0,
        input_test_0_1_we0,
        input_test_0_1_d0,
        input_test_0_1_address1,
        input_test_0_1_ce1,
        input_test_0_1_we1,
        input_test_0_1_d1,
        input_test_0_2_address0,
        input_test_0_2_ce0,
        input_test_0_2_we0,
        input_test_0_2_d0,
        input_test_0_2_address1,
        input_test_0_2_ce1,
        input_test_0_2_we1,
        input_test_0_2_d1,
        input_test_0_3_address0,
        input_test_0_3_ce0,
        input_test_0_3_we0,
        input_test_0_3_d0,
        input_test_0_3_address1,
        input_test_0_3_ce1,
        input_test_0_3_we1,
        input_test_0_3_d1,
        input_test_0_4_address0,
        input_test_0_4_ce0,
        input_test_0_4_we0,
        input_test_0_4_d0,
        input_test_0_4_address1,
        input_test_0_4_ce1,
        input_test_0_4_we1,
        input_test_0_4_d1,
        input_test_0_5_address0,
        input_test_0_5_ce0,
        input_test_0_5_we0,
        input_test_0_5_d0,
        input_test_0_5_address1,
        input_test_0_5_ce1,
        input_test_0_5_we1,
        input_test_0_5_d1,
        input_test_0_6_address0,
        input_test_0_6_ce0,
        input_test_0_6_we0,
        input_test_0_6_d0,
        input_test_0_6_address1,
        input_test_0_6_ce1,
        input_test_0_6_we1,
        input_test_0_6_d1,
        input_test_0_7_address0,
        input_test_0_7_ce0,
        input_test_0_7_we0,
        input_test_0_7_d0,
        input_test_0_7_address1,
        input_test_0_7_ce1,
        input_test_0_7_we1,
        input_test_0_7_d1,
        input_test_0_8_address0,
        input_test_0_8_ce0,
        input_test_0_8_we0,
        input_test_0_8_d0,
        input_test_0_8_address1,
        input_test_0_8_ce1,
        input_test_0_8_we1,
        input_test_0_8_d1,
        input_test_0_9_address0,
        input_test_0_9_ce0,
        input_test_0_9_we0,
        input_test_0_9_d0,
        input_test_0_9_address1,
        input_test_0_9_ce1,
        input_test_0_9_we1,
        input_test_0_9_d1,
        input_test_0_10_address0,
        input_test_0_10_ce0,
        input_test_0_10_we0,
        input_test_0_10_d0,
        input_test_0_10_address1,
        input_test_0_10_ce1,
        input_test_0_10_we1,
        input_test_0_10_d1,
        input_test_0_11_address0,
        input_test_0_11_ce0,
        input_test_0_11_we0,
        input_test_0_11_d0,
        input_test_0_11_address1,
        input_test_0_11_ce1,
        input_test_0_11_we1,
        input_test_0_11_d1,
        input_test_0_12_address0,
        input_test_0_12_ce0,
        input_test_0_12_we0,
        input_test_0_12_d0,
        input_test_0_12_address1,
        input_test_0_12_ce1,
        input_test_0_12_we1,
        input_test_0_12_d1,
        y_test_address0,
        y_test_ce0,
        y_test_we0,
        y_test_d0,
        y_test_address1,
        y_test_ce1,
        y_test_we1,
        y_test_d1,
        digits_features_1_0_0_address0,
        digits_features_1_0_0_ce0,
        digits_features_1_0_0_q0,
        digits_features_2_0_0_address0,
        digits_features_2_0_0_ce0,
        digits_features_2_0_0_q0,
        digits_features_3_0_0_address0,
        digits_features_3_0_0_ce0,
        digits_features_3_0_0_q0,
        digits_features_4_0_0_address0,
        digits_features_4_0_0_ce0,
        digits_features_4_0_0_q0,
        digits_features_5_0_0_address0,
        digits_features_5_0_0_ce0,
        digits_features_5_0_0_q0,
        digits_features_6_0_0_address0,
        digits_features_6_0_0_ce0,
        digits_features_6_0_0_q0,
        digits_features_7_0_0_address0,
        digits_features_7_0_0_ce0,
        digits_features_7_0_0_q0,
        digits_features_8_0_0_address0,
        digits_features_8_0_0_ce0,
        digits_features_8_0_0_q0,
        digits_features_9_0_0_address0,
        digits_features_9_0_0_ce0,
        digits_features_9_0_0_q0,
        digits_features_10_0_0_address0,
        digits_features_10_0_0_ce0,
        digits_features_10_0_0_q0,
        digits_features_11_0_0_address0,
        digits_features_11_0_0_ce0,
        digits_features_11_0_0_q0,
        digits_features_12_0_0_address0,
        digits_features_12_0_0_ce0,
        digits_features_12_0_0_q0,
        digits_features_0_1_0_address0,
        digits_features_0_1_0_ce0,
        digits_features_0_1_0_q0,
        digits_features_1_1_0_address0,
        digits_features_1_1_0_ce0,
        digits_features_1_1_0_q0,
        digits_features_2_1_0_address0,
        digits_features_2_1_0_ce0,
        digits_features_2_1_0_q0,
        digits_features_3_1_0_address0,
        digits_features_3_1_0_ce0,
        digits_features_3_1_0_q0,
        digits_features_4_1_0_address0,
        digits_features_4_1_0_ce0,
        digits_features_4_1_0_q0,
        digits_features_5_1_0_address0,
        digits_features_5_1_0_ce0,
        digits_features_5_1_0_q0,
        digits_features_6_1_0_address0,
        digits_features_6_1_0_ce0,
        digits_features_6_1_0_q0,
        digits_features_7_1_0_address0,
        digits_features_7_1_0_ce0,
        digits_features_7_1_0_q0,
        digits_features_8_1_0_address0,
        digits_features_8_1_0_ce0,
        digits_features_8_1_0_q0,
        digits_features_9_1_0_address0,
        digits_features_9_1_0_ce0,
        digits_features_9_1_0_q0,
        digits_features_10_1_0_address0,
        digits_features_10_1_0_ce0,
        digits_features_10_1_0_q0,
        digits_features_11_1_0_address0,
        digits_features_11_1_0_ce0,
        digits_features_11_1_0_q0,
        digits_features_12_1_0_address0,
        digits_features_12_1_0_ce0,
        digits_features_12_1_0_q0,
        digits_features_0_2_0_address0,
        digits_features_0_2_0_ce0,
        digits_features_0_2_0_q0,
        digits_features_1_2_0_address0,
        digits_features_1_2_0_ce0,
        digits_features_1_2_0_q0,
        digits_features_2_2_0_address0,
        digits_features_2_2_0_ce0,
        digits_features_2_2_0_q0,
        digits_features_3_2_0_address0,
        digits_features_3_2_0_ce0,
        digits_features_3_2_0_q0,
        digits_features_4_2_0_address0,
        digits_features_4_2_0_ce0,
        digits_features_4_2_0_q0,
        digits_features_5_2_0_address0,
        digits_features_5_2_0_ce0,
        digits_features_5_2_0_q0,
        digits_features_7_2_0_address0,
        digits_features_7_2_0_ce0,
        digits_features_7_2_0_q0,
        digits_features_8_2_0_address0,
        digits_features_8_2_0_ce0,
        digits_features_8_2_0_q0,
        digits_features_9_2_0_address0,
        digits_features_9_2_0_ce0,
        digits_features_9_2_0_q0,
        digits_features_10_2_0_address0,
        digits_features_10_2_0_ce0,
        digits_features_10_2_0_q0,
        digits_features_11_2_0_address0,
        digits_features_11_2_0_ce0,
        digits_features_11_2_0_q0,
        digits_features_12_2_0_address0,
        digits_features_12_2_0_ce0,
        digits_features_12_2_0_q0,
        digits_features_1_3_0_address0,
        digits_features_1_3_0_ce0,
        digits_features_1_3_0_q0,
        digits_features_2_3_0_address0,
        digits_features_2_3_0_ce0,
        digits_features_2_3_0_q0,
        digits_features_3_3_0_address0,
        digits_features_3_3_0_ce0,
        digits_features_3_3_0_q0,
        digits_features_4_3_0_address0,
        digits_features_4_3_0_ce0,
        digits_features_4_3_0_q0,
        digits_features_5_3_0_address0,
        digits_features_5_3_0_ce0,
        digits_features_5_3_0_q0,
        digits_features_6_3_0_address0,
        digits_features_6_3_0_ce0,
        digits_features_6_3_0_q0,
        digits_features_7_3_0_address0,
        digits_features_7_3_0_ce0,
        digits_features_7_3_0_q0,
        digits_features_8_3_0_address0,
        digits_features_8_3_0_ce0,
        digits_features_8_3_0_q0,
        digits_features_9_3_0_address0,
        digits_features_9_3_0_ce0,
        digits_features_9_3_0_q0,
        digits_features_10_3_0_address0,
        digits_features_10_3_0_ce0,
        digits_features_10_3_0_q0,
        digits_features_11_3_0_address0,
        digits_features_11_3_0_ce0,
        digits_features_11_3_0_q0,
        digits_features_12_3_0_address0,
        digits_features_12_3_0_ce0,
        digits_features_12_3_0_q0,
        digits_features_0_4_0_address0,
        digits_features_0_4_0_ce0,
        digits_features_0_4_0_q0,
        digits_features_1_4_0_address0,
        digits_features_1_4_0_ce0,
        digits_features_1_4_0_q0,
        digits_features_2_4_0_address0,
        digits_features_2_4_0_ce0,
        digits_features_2_4_0_q0,
        digits_features_3_4_0_address0,
        digits_features_3_4_0_ce0,
        digits_features_3_4_0_q0,
        digits_features_4_4_0_address0,
        digits_features_4_4_0_ce0,
        digits_features_4_4_0_q0,
        digits_features_5_4_0_address0,
        digits_features_5_4_0_ce0,
        digits_features_5_4_0_q0,
        digits_features_6_4_0_address0,
        digits_features_6_4_0_ce0,
        digits_features_6_4_0_q0,
        digits_features_7_4_0_address0,
        digits_features_7_4_0_ce0,
        digits_features_7_4_0_q0,
        digits_features_8_4_0_address0,
        digits_features_8_4_0_ce0,
        digits_features_8_4_0_q0,
        digits_features_9_4_0_address0,
        digits_features_9_4_0_ce0,
        digits_features_9_4_0_q0,
        digits_features_10_4_0_address0,
        digits_features_10_4_0_ce0,
        digits_features_10_4_0_q0,
        digits_features_11_4_0_address0,
        digits_features_11_4_0_ce0,
        digits_features_11_4_0_q0,
        digits_labels_0_address0,
        digits_labels_0_ce0,
        digits_labels_0_q0,
        digits_labels_1_address0,
        digits_labels_1_ce0,
        digits_labels_1_q0,
        digits_labels_2_address0,
        digits_labels_2_ce0,
        digits_labels_2_q0,
        digits_labels_3_address0,
        digits_labels_3_ce0,
        digits_labels_3_q0,
        digits_labels_4_address0,
        digits_labels_4_ce0,
        digits_labels_4_q0,
        digits_labels_5_address0,
        digits_labels_5_ce0,
        digits_labels_5_q0,
        digits_labels_6_address0,
        digits_labels_6_ce0,
        digits_labels_6_q0,
        digits_labels_7_address0,
        digits_labels_7_ce0,
        digits_labels_7_q0,
        digits_labels_8_address0,
        digits_labels_8_ce0,
        digits_labels_8_q0,
        digits_labels_9_address0,
        digits_labels_9_ce0,
        digits_labels_9_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] input_test_0_address0;
output   input_test_0_ce0;
output   input_test_0_we0;
output  [4:0] input_test_0_d0;
output  [10:0] input_test_0_address1;
output   input_test_0_ce1;
output   input_test_0_we1;
output  [4:0] input_test_0_d1;
output  [10:0] input_test_0_1_address0;
output   input_test_0_1_ce0;
output   input_test_0_1_we0;
output  [4:0] input_test_0_1_d0;
output  [10:0] input_test_0_1_address1;
output   input_test_0_1_ce1;
output   input_test_0_1_we1;
output  [4:0] input_test_0_1_d1;
output  [10:0] input_test_0_2_address0;
output   input_test_0_2_ce0;
output   input_test_0_2_we0;
output  [4:0] input_test_0_2_d0;
output  [10:0] input_test_0_2_address1;
output   input_test_0_2_ce1;
output   input_test_0_2_we1;
output  [4:0] input_test_0_2_d1;
output  [10:0] input_test_0_3_address0;
output   input_test_0_3_ce0;
output   input_test_0_3_we0;
output  [4:0] input_test_0_3_d0;
output  [10:0] input_test_0_3_address1;
output   input_test_0_3_ce1;
output   input_test_0_3_we1;
output  [4:0] input_test_0_3_d1;
output  [10:0] input_test_0_4_address0;
output   input_test_0_4_ce0;
output   input_test_0_4_we0;
output  [4:0] input_test_0_4_d0;
output  [10:0] input_test_0_4_address1;
output   input_test_0_4_ce1;
output   input_test_0_4_we1;
output  [4:0] input_test_0_4_d1;
output  [10:0] input_test_0_5_address0;
output   input_test_0_5_ce0;
output   input_test_0_5_we0;
output  [4:0] input_test_0_5_d0;
output  [10:0] input_test_0_5_address1;
output   input_test_0_5_ce1;
output   input_test_0_5_we1;
output  [4:0] input_test_0_5_d1;
output  [10:0] input_test_0_6_address0;
output   input_test_0_6_ce0;
output   input_test_0_6_we0;
output  [4:0] input_test_0_6_d0;
output  [10:0] input_test_0_6_address1;
output   input_test_0_6_ce1;
output   input_test_0_6_we1;
output  [4:0] input_test_0_6_d1;
output  [10:0] input_test_0_7_address0;
output   input_test_0_7_ce0;
output   input_test_0_7_we0;
output  [4:0] input_test_0_7_d0;
output  [10:0] input_test_0_7_address1;
output   input_test_0_7_ce1;
output   input_test_0_7_we1;
output  [4:0] input_test_0_7_d1;
output  [10:0] input_test_0_8_address0;
output   input_test_0_8_ce0;
output   input_test_0_8_we0;
output  [4:0] input_test_0_8_d0;
output  [10:0] input_test_0_8_address1;
output   input_test_0_8_ce1;
output   input_test_0_8_we1;
output  [4:0] input_test_0_8_d1;
output  [10:0] input_test_0_9_address0;
output   input_test_0_9_ce0;
output   input_test_0_9_we0;
output  [4:0] input_test_0_9_d0;
output  [10:0] input_test_0_9_address1;
output   input_test_0_9_ce1;
output   input_test_0_9_we1;
output  [4:0] input_test_0_9_d1;
output  [10:0] input_test_0_10_address0;
output   input_test_0_10_ce0;
output   input_test_0_10_we0;
output  [4:0] input_test_0_10_d0;
output  [10:0] input_test_0_10_address1;
output   input_test_0_10_ce1;
output   input_test_0_10_we1;
output  [4:0] input_test_0_10_d1;
output  [10:0] input_test_0_11_address0;
output   input_test_0_11_ce0;
output   input_test_0_11_we0;
output  [4:0] input_test_0_11_d0;
output  [10:0] input_test_0_11_address1;
output   input_test_0_11_ce1;
output   input_test_0_11_we1;
output  [4:0] input_test_0_11_d1;
output  [10:0] input_test_0_12_address0;
output   input_test_0_12_ce0;
output   input_test_0_12_we0;
output  [4:0] input_test_0_12_d0;
output  [10:0] input_test_0_12_address1;
output   input_test_0_12_ce1;
output   input_test_0_12_we1;
output  [4:0] input_test_0_12_d1;
output  [11:0] y_test_address0;
output   y_test_ce0;
output   y_test_we0;
output  [0:0] y_test_d0;
output  [11:0] y_test_address1;
output   y_test_ce1;
output   y_test_we1;
output  [0:0] y_test_d1;
output  [10:0] digits_features_1_0_0_address0;
output   digits_features_1_0_0_ce0;
input  [3:0] digits_features_1_0_0_q0;
output  [10:0] digits_features_2_0_0_address0;
output   digits_features_2_0_0_ce0;
input  [4:0] digits_features_2_0_0_q0;
output  [10:0] digits_features_3_0_0_address0;
output   digits_features_3_0_0_ce0;
input  [4:0] digits_features_3_0_0_q0;
output  [10:0] digits_features_4_0_0_address0;
output   digits_features_4_0_0_ce0;
input  [4:0] digits_features_4_0_0_q0;
output  [10:0] digits_features_5_0_0_address0;
output   digits_features_5_0_0_ce0;
input  [4:0] digits_features_5_0_0_q0;
output  [10:0] digits_features_6_0_0_address0;
output   digits_features_6_0_0_ce0;
input  [4:0] digits_features_6_0_0_q0;
output  [10:0] digits_features_7_0_0_address0;
output   digits_features_7_0_0_ce0;
input  [3:0] digits_features_7_0_0_q0;
output  [10:0] digits_features_8_0_0_address0;
output   digits_features_8_0_0_ce0;
input  [1:0] digits_features_8_0_0_q0;
output  [10:0] digits_features_9_0_0_address0;
output   digits_features_9_0_0_ce0;
input  [4:0] digits_features_9_0_0_q0;
output  [10:0] digits_features_10_0_0_address0;
output   digits_features_10_0_0_ce0;
input  [4:0] digits_features_10_0_0_q0;
output  [10:0] digits_features_11_0_0_address0;
output   digits_features_11_0_0_ce0;
input  [4:0] digits_features_11_0_0_q0;
output  [10:0] digits_features_12_0_0_address0;
output   digits_features_12_0_0_ce0;
input  [4:0] digits_features_12_0_0_q0;
output  [10:0] digits_features_0_1_0_address0;
output   digits_features_0_1_0_ce0;
input  [4:0] digits_features_0_1_0_q0;
output  [10:0] digits_features_1_1_0_address0;
output   digits_features_1_1_0_ce0;
input  [4:0] digits_features_1_1_0_q0;
output  [10:0] digits_features_2_1_0_address0;
output   digits_features_2_1_0_ce0;
input  [3:0] digits_features_2_1_0_q0;
output  [10:0] digits_features_3_1_0_address0;
output   digits_features_3_1_0_ce0;
input  [1:0] digits_features_3_1_0_q0;
output  [10:0] digits_features_4_1_0_address0;
output   digits_features_4_1_0_ce0;
input  [4:0] digits_features_4_1_0_q0;
output  [10:0] digits_features_5_1_0_address0;
output   digits_features_5_1_0_ce0;
input  [4:0] digits_features_5_1_0_q0;
output  [10:0] digits_features_6_1_0_address0;
output   digits_features_6_1_0_ce0;
input  [4:0] digits_features_6_1_0_q0;
output  [10:0] digits_features_7_1_0_address0;
output   digits_features_7_1_0_ce0;
input  [4:0] digits_features_7_1_0_q0;
output  [10:0] digits_features_8_1_0_address0;
output   digits_features_8_1_0_ce0;
input  [4:0] digits_features_8_1_0_q0;
output  [10:0] digits_features_9_1_0_address0;
output   digits_features_9_1_0_ce0;
input  [4:0] digits_features_9_1_0_q0;
output  [10:0] digits_features_10_1_0_address0;
output   digits_features_10_1_0_ce0;
input  [3:0] digits_features_10_1_0_q0;
output  [10:0] digits_features_11_1_0_address0;
output   digits_features_11_1_0_ce0;
input  [0:0] digits_features_11_1_0_q0;
output  [10:0] digits_features_12_1_0_address0;
output   digits_features_12_1_0_ce0;
input  [3:0] digits_features_12_1_0_q0;
output  [10:0] digits_features_0_2_0_address0;
output   digits_features_0_2_0_ce0;
input  [4:0] digits_features_0_2_0_q0;
output  [10:0] digits_features_1_2_0_address0;
output   digits_features_1_2_0_ce0;
input  [4:0] digits_features_1_2_0_q0;
output  [10:0] digits_features_2_2_0_address0;
output   digits_features_2_2_0_ce0;
input  [4:0] digits_features_2_2_0_q0;
output  [10:0] digits_features_3_2_0_address0;
output   digits_features_3_2_0_ce0;
input  [4:0] digits_features_3_2_0_q0;
output  [10:0] digits_features_4_2_0_address0;
output   digits_features_4_2_0_ce0;
input  [3:0] digits_features_4_2_0_q0;
output  [10:0] digits_features_5_2_0_address0;
output   digits_features_5_2_0_ce0;
input  [0:0] digits_features_5_2_0_q0;
output  [10:0] digits_features_7_2_0_address0;
output   digits_features_7_2_0_ce0;
input  [3:0] digits_features_7_2_0_q0;
output  [10:0] digits_features_8_2_0_address0;
output   digits_features_8_2_0_ce0;
input  [4:0] digits_features_8_2_0_q0;
output  [10:0] digits_features_9_2_0_address0;
output   digits_features_9_2_0_ce0;
input  [4:0] digits_features_9_2_0_q0;
output  [10:0] digits_features_10_2_0_address0;
output   digits_features_10_2_0_ce0;
input  [4:0] digits_features_10_2_0_q0;
output  [10:0] digits_features_11_2_0_address0;
output   digits_features_11_2_0_ce0;
input  [4:0] digits_features_11_2_0_q0;
output  [10:0] digits_features_12_2_0_address0;
output   digits_features_12_2_0_ce0;
input  [3:0] digits_features_12_2_0_q0;
output  [10:0] digits_features_1_3_0_address0;
output   digits_features_1_3_0_ce0;
input  [2:0] digits_features_1_3_0_q0;
output  [10:0] digits_features_2_3_0_address0;
output   digits_features_2_3_0_ce0;
input  [4:0] digits_features_2_3_0_q0;
output  [10:0] digits_features_3_3_0_address0;
output   digits_features_3_3_0_ce0;
input  [4:0] digits_features_3_3_0_q0;
output  [10:0] digits_features_4_3_0_address0;
output   digits_features_4_3_0_ce0;
input  [4:0] digits_features_4_3_0_q0;
output  [10:0] digits_features_5_3_0_address0;
output   digits_features_5_3_0_ce0;
input  [4:0] digits_features_5_3_0_q0;
output  [10:0] digits_features_6_3_0_address0;
output   digits_features_6_3_0_ce0;
input  [4:0] digits_features_6_3_0_q0;
output  [10:0] digits_features_7_3_0_address0;
output   digits_features_7_3_0_ce0;
input  [4:0] digits_features_7_3_0_q0;
output  [10:0] digits_features_8_3_0_address0;
output   digits_features_8_3_0_ce0;
input  [2:0] digits_features_8_3_0_q0;
output  [10:0] digits_features_9_3_0_address0;
output   digits_features_9_3_0_ce0;
input  [3:0] digits_features_9_3_0_q0;
output  [10:0] digits_features_10_3_0_address0;
output   digits_features_10_3_0_ce0;
input  [4:0] digits_features_10_3_0_q0;
output  [10:0] digits_features_11_3_0_address0;
output   digits_features_11_3_0_ce0;
input  [4:0] digits_features_11_3_0_q0;
output  [10:0] digits_features_12_3_0_address0;
output   digits_features_12_3_0_ce0;
input  [4:0] digits_features_12_3_0_q0;
output  [10:0] digits_features_0_4_0_address0;
output   digits_features_0_4_0_ce0;
input  [4:0] digits_features_0_4_0_q0;
output  [10:0] digits_features_1_4_0_address0;
output   digits_features_1_4_0_ce0;
input  [4:0] digits_features_1_4_0_q0;
output  [10:0] digits_features_2_4_0_address0;
output   digits_features_2_4_0_ce0;
input  [4:0] digits_features_2_4_0_q0;
output  [10:0] digits_features_3_4_0_address0;
output   digits_features_3_4_0_ce0;
input  [3:0] digits_features_3_4_0_q0;
output  [10:0] digits_features_4_4_0_address0;
output   digits_features_4_4_0_ce0;
input  [0:0] digits_features_4_4_0_q0;
output  [10:0] digits_features_5_4_0_address0;
output   digits_features_5_4_0_ce0;
input  [3:0] digits_features_5_4_0_q0;
output  [10:0] digits_features_6_4_0_address0;
output   digits_features_6_4_0_ce0;
input  [4:0] digits_features_6_4_0_q0;
output  [10:0] digits_features_7_4_0_address0;
output   digits_features_7_4_0_ce0;
input  [4:0] digits_features_7_4_0_q0;
output  [10:0] digits_features_8_4_0_address0;
output   digits_features_8_4_0_ce0;
input  [4:0] digits_features_8_4_0_q0;
output  [10:0] digits_features_9_4_0_address0;
output   digits_features_9_4_0_ce0;
input  [4:0] digits_features_9_4_0_q0;
output  [10:0] digits_features_10_4_0_address0;
output   digits_features_10_4_0_ce0;
input  [4:0] digits_features_10_4_0_q0;
output  [10:0] digits_features_11_4_0_address0;
output   digits_features_11_4_0_ce0;
input  [4:0] digits_features_11_4_0_q0;
output  [10:0] digits_labels_0_address0;
output   digits_labels_0_ce0;
input  [0:0] digits_labels_0_q0;
output  [10:0] digits_labels_1_address0;
output   digits_labels_1_ce0;
input  [0:0] digits_labels_1_q0;
output  [10:0] digits_labels_2_address0;
output   digits_labels_2_ce0;
input  [0:0] digits_labels_2_q0;
output  [10:0] digits_labels_3_address0;
output   digits_labels_3_ce0;
input  [0:0] digits_labels_3_q0;
output  [10:0] digits_labels_4_address0;
output   digits_labels_4_ce0;
input  [0:0] digits_labels_4_q0;
output  [10:0] digits_labels_5_address0;
output   digits_labels_5_ce0;
input  [0:0] digits_labels_5_q0;
output  [10:0] digits_labels_6_address0;
output   digits_labels_6_ce0;
input  [0:0] digits_labels_6_q0;
output  [10:0] digits_labels_7_address0;
output   digits_labels_7_ce0;
input  [0:0] digits_labels_7_q0;
output  [10:0] digits_labels_8_address0;
output   digits_labels_8_ce0;
input  [0:0] digits_labels_8_q0;
output  [10:0] digits_labels_9_address0;
output   digits_labels_9_ce0;
input  [0:0] digits_labels_9_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln88_fu_1920_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_subdone;
reg   [8:0] i_5_reg_2335;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln88_reg_2341;
wire   [63:0] zext_ln89_21_fu_1954_p1;
reg   [63:0] zext_ln89_21_reg_2345;
wire   [10:0] trunc_ln89_fu_1959_p1;
reg   [10:0] trunc_ln89_reg_2361;
wire   [63:0] zext_ln89_23_fu_1969_p1;
reg   [63:0] zext_ln89_23_reg_2367;
wire   [63:0] zext_ln89_24_fu_1980_p1;
reg   [63:0] zext_ln89_24_reg_2383;
reg   [4:0] digits_features_1_2_0_load_reg_2754;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [4:0] digits_features_2_2_0_load_reg_2759;
reg   [4:0] digits_features_3_2_0_load_reg_2764;
reg   [3:0] digits_features_4_2_0_load_reg_2769;
reg   [0:0] digits_features_5_2_0_load_reg_2774;
reg   [3:0] digits_features_7_2_0_load_reg_2779;
reg   [4:0] digits_features_8_2_0_load_reg_2784;
reg   [4:0] digits_features_9_2_0_load_reg_2789;
reg   [4:0] digits_features_10_2_0_load_reg_2794;
reg   [4:0] digits_features_11_2_0_load_reg_2799;
reg   [3:0] digits_features_12_2_0_load_reg_2804;
reg   [2:0] digits_features_1_3_0_load_reg_2809;
reg   [4:0] digits_features_2_3_0_load_reg_2814;
reg   [4:0] digits_features_3_3_0_load_reg_2819;
reg   [4:0] digits_features_4_3_0_load_reg_2824;
reg   [4:0] digits_features_5_3_0_load_reg_2829;
reg   [4:0] digits_features_6_3_0_load_reg_2834;
reg   [4:0] digits_features_7_3_0_load_reg_2839;
reg   [2:0] digits_features_8_3_0_load_reg_2844;
reg   [3:0] digits_features_9_3_0_load_reg_2849;
reg   [4:0] digits_features_10_3_0_load_reg_2854;
reg   [4:0] digits_features_11_3_0_load_reg_2859;
reg   [4:0] digits_features_12_3_0_load_reg_2864;
reg   [4:0] digits_features_0_4_0_load_reg_2869;
reg   [4:0] digits_features_1_4_0_load_reg_2874;
reg   [4:0] digits_features_2_4_0_load_reg_2879;
reg   [3:0] digits_features_3_4_0_load_reg_2884;
reg   [0:0] digits_features_4_4_0_load_reg_2889;
reg   [3:0] digits_features_5_4_0_load_reg_2894;
reg   [4:0] digits_features_6_4_0_load_reg_2899;
reg   [4:0] digits_features_7_4_0_load_reg_2904;
reg   [4:0] digits_features_8_4_0_load_reg_2909;
reg   [4:0] digits_features_9_4_0_load_reg_2914;
reg   [4:0] digits_features_10_4_0_load_reg_2919;
reg   [4:0] digits_features_11_4_0_load_reg_2924;
reg   [0:0] digits_labels_2_load_reg_2929;
reg   [0:0] digits_labels_3_load_reg_2934;
reg   [0:0] digits_labels_4_load_reg_2939;
reg   [0:0] digits_labels_5_load_reg_2944;
reg   [0:0] digits_labels_6_load_reg_2949;
reg   [0:0] digits_labels_7_load_reg_2954;
reg   [0:0] digits_labels_8_load_reg_2959;
reg   [0:0] digits_labels_9_load_reg_2964;
wire   [11:0] trunc_ln90_fu_2170_p1;
reg   [11:0] trunc_ln90_reg_2969;
wire   [63:0] zext_ln89_25_fu_2202_p1;
reg   [63:0] zext_ln89_25_reg_2981;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln89_fu_1995_p1;
wire   [63:0] zext_ln89_22_fu_2080_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln90_fu_2165_p1;
wire   [63:0] zext_ln90_1_fu_2192_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln90_2_fu_2241_p1;
wire   [63:0] zext_ln90_3_fu_2251_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln90_4_fu_2273_p1;
wire   [63:0] zext_ln90_5_fu_2283_p1;
wire   [63:0] zext_ln90_6_fu_2293_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln90_7_fu_2303_p1;
wire   [63:0] zext_ln90_8_fu_2313_p1;
wire   [63:0] zext_ln90_9_fu_2323_p1;
reg   [8:0] i_fu_244;
wire   [8:0] add_ln88_fu_1926_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_5;
reg    digits_features_1_0_0_ce0_local;
reg    digits_features_2_0_0_ce0_local;
reg    digits_features_3_0_0_ce0_local;
reg    digits_features_4_0_0_ce0_local;
reg    digits_features_5_0_0_ce0_local;
reg    digits_features_6_0_0_ce0_local;
reg    digits_features_7_0_0_ce0_local;
reg    digits_features_8_0_0_ce0_local;
reg    digits_features_9_0_0_ce0_local;
reg    digits_features_10_0_0_ce0_local;
reg    digits_features_11_0_0_ce0_local;
reg    digits_features_12_0_0_ce0_local;
reg    digits_features_0_1_0_ce0_local;
reg    digits_features_1_1_0_ce0_local;
reg    digits_features_2_1_0_ce0_local;
reg    digits_features_3_1_0_ce0_local;
reg    digits_features_4_1_0_ce0_local;
reg    digits_features_5_1_0_ce0_local;
reg    digits_features_6_1_0_ce0_local;
reg    digits_features_7_1_0_ce0_local;
reg    digits_features_8_1_0_ce0_local;
reg    digits_features_9_1_0_ce0_local;
reg    digits_features_10_1_0_ce0_local;
reg    digits_features_11_1_0_ce0_local;
reg    digits_features_12_1_0_ce0_local;
reg    digits_features_0_2_0_ce0_local;
reg    digits_features_1_2_0_ce0_local;
reg    digits_features_2_2_0_ce0_local;
reg    digits_features_3_2_0_ce0_local;
reg    digits_features_4_2_0_ce0_local;
reg    digits_features_5_2_0_ce0_local;
reg    digits_features_7_2_0_ce0_local;
reg    digits_features_8_2_0_ce0_local;
reg    digits_features_9_2_0_ce0_local;
reg    digits_features_10_2_0_ce0_local;
reg    digits_features_11_2_0_ce0_local;
reg    digits_features_12_2_0_ce0_local;
reg    digits_features_1_3_0_ce0_local;
reg    digits_features_2_3_0_ce0_local;
reg    digits_features_3_3_0_ce0_local;
reg    digits_features_4_3_0_ce0_local;
reg    digits_features_5_3_0_ce0_local;
reg    digits_features_6_3_0_ce0_local;
reg    digits_features_7_3_0_ce0_local;
reg    digits_features_8_3_0_ce0_local;
reg    digits_features_9_3_0_ce0_local;
reg    digits_features_10_3_0_ce0_local;
reg    digits_features_11_3_0_ce0_local;
reg    digits_features_12_3_0_ce0_local;
reg    digits_features_0_4_0_ce0_local;
reg    digits_features_1_4_0_ce0_local;
reg    digits_features_2_4_0_ce0_local;
reg    digits_features_3_4_0_ce0_local;
reg    digits_features_4_4_0_ce0_local;
reg    digits_features_5_4_0_ce0_local;
reg    digits_features_6_4_0_ce0_local;
reg    digits_features_7_4_0_ce0_local;
reg    digits_features_8_4_0_ce0_local;
reg    digits_features_9_4_0_ce0_local;
reg    digits_features_10_4_0_ce0_local;
reg    digits_features_11_4_0_ce0_local;
reg    input_test_0_we1_local;
reg   [4:0] input_test_0_d1_local;
reg    input_test_0_ce1_local;
reg   [10:0] input_test_0_address1_local;
reg    input_test_0_we0_local;
reg   [4:0] input_test_0_d0_local;
reg    input_test_0_ce0_local;
reg   [10:0] input_test_0_address0_local;
reg    input_test_0_6_we0_local;
reg   [4:0] input_test_0_6_d0_local;
reg    input_test_0_6_ce0_local;
reg   [10:0] input_test_0_6_address0_local;
reg    input_test_0_6_we1_local;
reg   [4:0] input_test_0_6_d1_local;
reg    input_test_0_6_ce1_local;
reg   [10:0] input_test_0_6_address1_local;
reg    digits_labels_0_ce0_local;
reg    digits_labels_1_ce0_local;
reg    digits_labels_2_ce0_local;
reg    digits_labels_3_ce0_local;
reg    digits_labels_4_ce0_local;
reg    digits_labels_5_ce0_local;
reg    digits_labels_6_ce0_local;
reg    digits_labels_7_ce0_local;
reg    digits_labels_8_ce0_local;
reg    digits_labels_9_ce0_local;
reg    input_test_0_1_we1_local;
reg   [4:0] input_test_0_1_d1_local;
wire   [4:0] zext_ln89_1_fu_2097_p1;
reg    input_test_0_1_ce1_local;
reg   [10:0] input_test_0_1_address1_local;
reg    input_test_0_1_we0_local;
reg   [4:0] input_test_0_1_d0_local;
reg    input_test_0_1_ce0_local;
reg   [10:0] input_test_0_1_address0_local;
wire   [4:0] zext_ln89_13_fu_2224_p1;
wire    ap_block_pp0_stage3_11001;
reg    input_test_0_2_we1_local;
reg   [4:0] input_test_0_2_d1_local;
reg    input_test_0_2_ce1_local;
reg   [10:0] input_test_0_2_address1_local;
reg    input_test_0_2_we0_local;
reg   [4:0] input_test_0_2_d0_local;
wire   [4:0] zext_ln89_4_fu_2112_p1;
reg    input_test_0_2_ce0_local;
reg   [10:0] input_test_0_2_address0_local;
reg    input_test_0_3_we1_local;
reg   [4:0] input_test_0_3_d1_local;
reg    input_test_0_3_ce1_local;
reg   [10:0] input_test_0_3_address1_local;
reg    input_test_0_3_we0_local;
reg   [4:0] input_test_0_3_d0_local;
wire   [4:0] zext_ln89_5_fu_2117_p1;
reg    input_test_0_3_ce0_local;
reg   [10:0] input_test_0_3_address0_local;
wire   [4:0] zext_ln89_16_fu_2256_p1;
reg    input_test_0_4_we1_local;
reg   [4:0] input_test_0_4_d1_local;
reg    input_test_0_4_ce1_local;
reg   [10:0] input_test_0_4_address1_local;
reg    input_test_0_4_we0_local;
reg   [4:0] input_test_0_4_d0_local;
reg    input_test_0_4_ce0_local;
reg   [10:0] input_test_0_4_address0_local;
wire   [4:0] zext_ln89_9_fu_2208_p1;
wire   [4:0] zext_ln89_17_fu_2260_p1;
reg    input_test_0_5_we1_local;
reg   [4:0] input_test_0_5_d1_local;
reg    input_test_0_5_ce1_local;
reg   [10:0] input_test_0_5_address1_local;
reg    input_test_0_5_we0_local;
reg   [4:0] input_test_0_5_d0_local;
reg    input_test_0_5_ce0_local;
reg   [10:0] input_test_0_5_address0_local;
wire   [4:0] zext_ln89_10_fu_2212_p1;
wire   [4:0] zext_ln89_18_fu_2264_p1;
reg    input_test_0_7_we1_local;
reg   [4:0] input_test_0_7_d1_local;
wire   [4:0] zext_ln89_2_fu_2102_p1;
reg    input_test_0_7_ce1_local;
reg   [10:0] input_test_0_7_address1_local;
reg    input_test_0_7_we0_local;
reg   [4:0] input_test_0_7_d0_local;
reg    input_test_0_7_ce0_local;
reg   [10:0] input_test_0_7_address0_local;
wire   [4:0] zext_ln89_11_fu_2216_p1;
reg    input_test_0_8_we1_local;
reg   [4:0] input_test_0_8_d1_local;
wire   [4:0] zext_ln89_3_fu_2107_p1;
reg    input_test_0_8_ce1_local;
reg   [10:0] input_test_0_8_address1_local;
reg    input_test_0_8_we0_local;
reg   [4:0] input_test_0_8_d0_local;
reg    input_test_0_8_ce0_local;
reg   [10:0] input_test_0_8_address0_local;
wire   [4:0] zext_ln89_14_fu_2228_p1;
reg    input_test_0_9_we1_local;
reg   [4:0] input_test_0_9_d1_local;
reg    input_test_0_9_ce1_local;
reg   [10:0] input_test_0_9_address1_local;
reg    input_test_0_9_we0_local;
reg   [4:0] input_test_0_9_d0_local;
reg    input_test_0_9_ce0_local;
reg   [10:0] input_test_0_9_address0_local;
wire   [4:0] zext_ln89_15_fu_2232_p1;
reg    input_test_0_10_we1_local;
reg   [4:0] input_test_0_10_d1_local;
reg    input_test_0_10_ce1_local;
reg   [10:0] input_test_0_10_address1_local;
reg    input_test_0_10_we0_local;
reg   [4:0] input_test_0_10_d0_local;
wire   [4:0] zext_ln89_6_fu_2122_p1;
reg    input_test_0_10_ce0_local;
reg   [10:0] input_test_0_10_address0_local;
reg    input_test_0_11_we1_local;
reg   [4:0] input_test_0_11_d1_local;
reg    input_test_0_11_ce1_local;
reg   [10:0] input_test_0_11_address1_local;
reg    input_test_0_11_we0_local;
reg   [4:0] input_test_0_11_d0_local;
wire   [4:0] zext_ln89_7_fu_2127_p1;
reg    input_test_0_11_ce0_local;
reg   [10:0] input_test_0_11_address0_local;
reg    input_test_0_12_we1_local;
reg   [4:0] input_test_0_12_d1_local;
reg    input_test_0_12_ce1_local;
reg   [10:0] input_test_0_12_address1_local;
reg    input_test_0_12_we0_local;
reg   [4:0] input_test_0_12_d0_local;
wire   [4:0] zext_ln89_8_fu_2132_p1;
reg    input_test_0_12_ce0_local;
reg   [10:0] input_test_0_12_address0_local;
wire   [4:0] zext_ln89_12_fu_2220_p1;
reg    y_test_we1_local;
reg   [0:0] y_test_d1_local;
reg    y_test_ce1_local;
reg   [11:0] y_test_address1_local;
reg    y_test_we0_local;
reg   [0:0] y_test_d0_local;
reg    y_test_ce0_local;
reg   [11:0] y_test_address0_local;
wire    ap_block_pp0_stage4_11001;
wire   [10:0] tmp_fu_1936_p3;
wire   [11:0] zext_ln89_20_fu_1944_p1;
wire   [11:0] zext_ln89_19_fu_1932_p1;
wire   [11:0] add_ln89_5_fu_1948_p2;
wire   [10:0] add_ln89_2_fu_1963_p2;
wire   [10:0] add_ln89_3_fu_1974_p2;
wire   [10:0] zext_ln88_fu_1985_p1;
wire   [10:0] add_ln89_fu_1989_p2;
wire   [10:0] add_ln89_1_fu_2075_p2;
wire   [11:0] tmp_2_fu_2137_p3;
wire   [9:0] tmp_3_fu_2148_p3;
wire   [12:0] zext_ln90_10_fu_2144_p1;
wire   [12:0] zext_ln90_11_fu_2155_p1;
wire   [12:0] add_ln90_8_fu_2159_p2;
wire   [10:0] tmp_1_fu_2174_p4;
wire   [11:0] or_ln1_fu_2184_p3;
wire   [10:0] add_ln89_4_fu_2197_p2;
wire   [11:0] add_ln90_fu_2236_p2;
wire   [11:0] add_ln90_1_fu_2246_p2;
wire   [11:0] add_ln90_2_fu_2268_p2;
wire   [11:0] add_ln90_3_fu_2278_p2;
wire   [11:0] add_ln90_4_fu_2288_p2;
wire   [11:0] add_ln90_5_fu_2298_p2;
wire   [11:0] add_ln90_6_fu_2308_p2;
wire   [11:0] add_ln90_7_fu_2318_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_244 = 9'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln88_fu_1920_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_244 <= add_ln88_fu_1926_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_244 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        digits_features_0_4_0_load_reg_2869 <= digits_features_0_4_0_q0;
        digits_features_10_2_0_load_reg_2794 <= digits_features_10_2_0_q0;
        digits_features_10_3_0_load_reg_2854 <= digits_features_10_3_0_q0;
        digits_features_10_4_0_load_reg_2919 <= digits_features_10_4_0_q0;
        digits_features_11_2_0_load_reg_2799 <= digits_features_11_2_0_q0;
        digits_features_11_3_0_load_reg_2859 <= digits_features_11_3_0_q0;
        digits_features_11_4_0_load_reg_2924 <= digits_features_11_4_0_q0;
        digits_features_12_2_0_load_reg_2804 <= digits_features_12_2_0_q0;
        digits_features_12_3_0_load_reg_2864 <= digits_features_12_3_0_q0;
        digits_features_1_2_0_load_reg_2754 <= digits_features_1_2_0_q0;
        digits_features_1_3_0_load_reg_2809 <= digits_features_1_3_0_q0;
        digits_features_1_4_0_load_reg_2874 <= digits_features_1_4_0_q0;
        digits_features_2_2_0_load_reg_2759 <= digits_features_2_2_0_q0;
        digits_features_2_3_0_load_reg_2814 <= digits_features_2_3_0_q0;
        digits_features_2_4_0_load_reg_2879 <= digits_features_2_4_0_q0;
        digits_features_3_2_0_load_reg_2764 <= digits_features_3_2_0_q0;
        digits_features_3_3_0_load_reg_2819 <= digits_features_3_3_0_q0;
        digits_features_3_4_0_load_reg_2884 <= digits_features_3_4_0_q0;
        digits_features_4_2_0_load_reg_2769 <= digits_features_4_2_0_q0;
        digits_features_4_3_0_load_reg_2824 <= digits_features_4_3_0_q0;
        digits_features_4_4_0_load_reg_2889 <= digits_features_4_4_0_q0;
        digits_features_5_2_0_load_reg_2774 <= digits_features_5_2_0_q0;
        digits_features_5_3_0_load_reg_2829 <= digits_features_5_3_0_q0;
        digits_features_5_4_0_load_reg_2894 <= digits_features_5_4_0_q0;
        digits_features_6_3_0_load_reg_2834 <= digits_features_6_3_0_q0;
        digits_features_6_4_0_load_reg_2899 <= digits_features_6_4_0_q0;
        digits_features_7_2_0_load_reg_2779 <= digits_features_7_2_0_q0;
        digits_features_7_3_0_load_reg_2839 <= digits_features_7_3_0_q0;
        digits_features_7_4_0_load_reg_2904 <= digits_features_7_4_0_q0;
        digits_features_8_2_0_load_reg_2784 <= digits_features_8_2_0_q0;
        digits_features_8_3_0_load_reg_2844 <= digits_features_8_3_0_q0;
        digits_features_8_4_0_load_reg_2909 <= digits_features_8_4_0_q0;
        digits_features_9_2_0_load_reg_2789 <= digits_features_9_2_0_q0;
        digits_features_9_3_0_load_reg_2849 <= digits_features_9_3_0_q0;
        digits_features_9_4_0_load_reg_2914 <= digits_features_9_4_0_q0;
        digits_labels_2_load_reg_2929 <= digits_labels_2_q0;
        digits_labels_3_load_reg_2934 <= digits_labels_3_q0;
        digits_labels_4_load_reg_2939 <= digits_labels_4_q0;
        digits_labels_5_load_reg_2944 <= digits_labels_5_q0;
        digits_labels_6_load_reg_2949 <= digits_labels_6_q0;
        digits_labels_7_load_reg_2954 <= digits_labels_7_q0;
        digits_labels_8_load_reg_2959 <= digits_labels_8_q0;
        digits_labels_9_load_reg_2964 <= digits_labels_9_q0;
        trunc_ln90_reg_2969[11 : 1] <= trunc_ln90_fu_2170_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_5_reg_2335 <= ap_sig_allocacmp_i_5;
        icmp_ln88_reg_2341 <= icmp_ln88_fu_1920_p2;
        trunc_ln89_reg_2361 <= trunc_ln89_fu_1959_p1;
        zext_ln89_21_reg_2345[11 : 0] <= zext_ln89_21_fu_1954_p1[11 : 0];
        zext_ln89_23_reg_2367[10 : 0] <= zext_ln89_23_fu_1969_p1[10 : 0];
        zext_ln89_24_reg_2383[10 : 0] <= zext_ln89_24_fu_1980_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln89_25_reg_2981[10 : 0] <= zext_ln89_25_fu_2202_p1[10 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln88_fu_1920_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_5 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_5 = i_fu_244;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_0_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_0_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_0_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_0_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_0_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_0_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_0_ce0_local = 1'b1;
    end else begin
        digits_labels_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_1_ce0_local = 1'b1;
    end else begin
        digits_labels_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_2_ce0_local = 1'b1;
    end else begin
        digits_labels_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_3_ce0_local = 1'b1;
    end else begin
        digits_labels_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_4_ce0_local = 1'b1;
    end else begin
        digits_labels_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_5_ce0_local = 1'b1;
    end else begin
        digits_labels_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_6_ce0_local = 1'b1;
    end else begin
        digits_labels_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_7_ce0_local = 1'b1;
    end else begin
        digits_labels_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_8_ce0_local = 1'b1;
    end else begin
        digits_labels_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_9_ce0_local = 1'b1;
    end else begin
        digits_labels_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_10_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_10_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_10_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_10_address0_local = 'bx;
        end
    end else begin
        input_test_0_10_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_10_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_10_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_10_address1_local = 'bx;
        end
    end else begin
        input_test_0_10_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_10_ce0_local = 1'b1;
    end else begin
        input_test_0_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_10_ce1_local = 1'b1;
    end else begin
        input_test_0_10_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_10_d0_local = digits_features_10_4_0_load_reg_2919;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_10_d0_local = digits_features_10_3_0_load_reg_2854;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_10_d0_local = zext_ln89_6_fu_2122_p1;
        end else begin
            input_test_0_10_d0_local = 'bx;
        end
    end else begin
        input_test_0_10_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_10_d1_local = digits_features_10_2_0_load_reg_2794;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_10_d1_local = digits_features_10_0_0_q0;
        end else begin
            input_test_0_10_d1_local = 'bx;
        end
    end else begin
        input_test_0_10_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_10_we0_local = 1'b1;
    end else begin
        input_test_0_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_10_we1_local = 1'b1;
    end else begin
        input_test_0_10_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_11_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_11_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_11_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_11_address0_local = 'bx;
        end
    end else begin
        input_test_0_11_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_11_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_11_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_11_address1_local = 'bx;
        end
    end else begin
        input_test_0_11_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_11_ce0_local = 1'b1;
    end else begin
        input_test_0_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_11_ce1_local = 1'b1;
    end else begin
        input_test_0_11_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_11_d0_local = digits_features_11_4_0_load_reg_2924;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_11_d0_local = digits_features_11_3_0_load_reg_2859;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_11_d0_local = zext_ln89_7_fu_2127_p1;
        end else begin
            input_test_0_11_d0_local = 'bx;
        end
    end else begin
        input_test_0_11_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_11_d1_local = digits_features_11_2_0_load_reg_2799;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_11_d1_local = digits_features_11_0_0_q0;
        end else begin
            input_test_0_11_d1_local = 'bx;
        end
    end else begin
        input_test_0_11_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_11_we0_local = 1'b1;
    end else begin
        input_test_0_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_11_we1_local = 1'b1;
    end else begin
        input_test_0_11_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_12_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_12_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_12_address0_local = 'bx;
        end
    end else begin
        input_test_0_12_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_12_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_12_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_12_address1_local = 'bx;
        end
    end else begin
        input_test_0_12_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_12_ce0_local = 1'b1;
    end else begin
        input_test_0_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_12_ce1_local = 1'b1;
    end else begin
        input_test_0_12_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_12_d0_local = digits_features_12_3_0_load_reg_2864;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_12_d0_local = zext_ln89_8_fu_2132_p1;
        end else begin
            input_test_0_12_d0_local = 'bx;
        end
    end else begin
        input_test_0_12_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_12_d1_local = zext_ln89_12_fu_2220_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_12_d1_local = digits_features_12_0_0_q0;
        end else begin
            input_test_0_12_d1_local = 'bx;
        end
    end else begin
        input_test_0_12_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_12_we0_local = 1'b1;
    end else begin
        input_test_0_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_12_we1_local = 1'b1;
    end else begin
        input_test_0_12_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_1_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_1_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_1_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_1_address0_local = 'bx;
        end
    end else begin
        input_test_0_1_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_1_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_1_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_1_address1_local = 'bx;
        end
    end else begin
        input_test_0_1_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_1_ce0_local = 1'b1;
    end else begin
        input_test_0_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_1_ce1_local = 1'b1;
    end else begin
        input_test_0_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_1_d0_local = digits_features_1_4_0_load_reg_2874;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_1_d0_local = zext_ln89_13_fu_2224_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_1_d0_local = digits_features_1_1_0_q0;
        end else begin
            input_test_0_1_d0_local = 'bx;
        end
    end else begin
        input_test_0_1_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_1_d1_local = digits_features_1_2_0_load_reg_2754;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_1_d1_local = zext_ln89_1_fu_2097_p1;
        end else begin
            input_test_0_1_d1_local = 'bx;
        end
    end else begin
        input_test_0_1_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_1_we0_local = 1'b1;
    end else begin
        input_test_0_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_1_we1_local = 1'b1;
    end else begin
        input_test_0_1_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_2_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_2_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_2_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_2_address0_local = 'bx;
        end
    end else begin
        input_test_0_2_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_2_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_2_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_2_address1_local = 'bx;
        end
    end else begin
        input_test_0_2_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_2_ce0_local = 1'b1;
    end else begin
        input_test_0_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_2_ce1_local = 1'b1;
    end else begin
        input_test_0_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_2_d0_local = digits_features_2_4_0_load_reg_2879;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_2_d0_local = digits_features_2_3_0_load_reg_2814;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_2_d0_local = zext_ln89_4_fu_2112_p1;
        end else begin
            input_test_0_2_d0_local = 'bx;
        end
    end else begin
        input_test_0_2_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_2_d1_local = digits_features_2_2_0_load_reg_2759;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_2_d1_local = digits_features_2_0_0_q0;
        end else begin
            input_test_0_2_d1_local = 'bx;
        end
    end else begin
        input_test_0_2_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_2_we0_local = 1'b1;
    end else begin
        input_test_0_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_2_we1_local = 1'b1;
    end else begin
        input_test_0_2_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_3_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_3_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_3_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_3_address0_local = 'bx;
        end
    end else begin
        input_test_0_3_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_3_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_3_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_3_address1_local = 'bx;
        end
    end else begin
        input_test_0_3_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_3_ce0_local = 1'b1;
    end else begin
        input_test_0_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_3_ce1_local = 1'b1;
    end else begin
        input_test_0_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_3_d0_local = zext_ln89_16_fu_2256_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_3_d0_local = digits_features_3_3_0_load_reg_2819;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_3_d0_local = zext_ln89_5_fu_2117_p1;
        end else begin
            input_test_0_3_d0_local = 'bx;
        end
    end else begin
        input_test_0_3_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_3_d1_local = digits_features_3_2_0_load_reg_2764;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_3_d1_local = digits_features_3_0_0_q0;
        end else begin
            input_test_0_3_d1_local = 'bx;
        end
    end else begin
        input_test_0_3_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_3_we0_local = 1'b1;
    end else begin
        input_test_0_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_3_we1_local = 1'b1;
    end else begin
        input_test_0_3_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_4_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_4_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_4_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_4_address0_local = 'bx;
        end
    end else begin
        input_test_0_4_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_4_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_4_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_4_address1_local = 'bx;
        end
    end else begin
        input_test_0_4_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_4_ce0_local = 1'b1;
    end else begin
        input_test_0_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_4_ce1_local = 1'b1;
    end else begin
        input_test_0_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_4_d0_local = zext_ln89_17_fu_2260_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_4_d0_local = digits_features_4_3_0_load_reg_2824;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_4_d0_local = digits_features_4_1_0_q0;
        end else begin
            input_test_0_4_d0_local = 'bx;
        end
    end else begin
        input_test_0_4_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_4_d1_local = zext_ln89_9_fu_2208_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_4_d1_local = digits_features_4_0_0_q0;
        end else begin
            input_test_0_4_d1_local = 'bx;
        end
    end else begin
        input_test_0_4_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_4_we0_local = 1'b1;
    end else begin
        input_test_0_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_4_we1_local = 1'b1;
    end else begin
        input_test_0_4_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_5_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_5_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_5_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_5_address0_local = 'bx;
        end
    end else begin
        input_test_0_5_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_5_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_5_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_5_address1_local = 'bx;
        end
    end else begin
        input_test_0_5_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_5_ce0_local = 1'b1;
    end else begin
        input_test_0_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_5_ce1_local = 1'b1;
    end else begin
        input_test_0_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_5_d0_local = zext_ln89_18_fu_2264_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_5_d0_local = digits_features_5_3_0_load_reg_2829;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_5_d0_local = digits_features_5_1_0_q0;
        end else begin
            input_test_0_5_d0_local = 'bx;
        end
    end else begin
        input_test_0_5_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_5_d1_local = zext_ln89_10_fu_2212_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_5_d1_local = digits_features_5_0_0_q0;
        end else begin
            input_test_0_5_d1_local = 'bx;
        end
    end else begin
        input_test_0_5_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_5_we0_local = 1'b1;
    end else begin
        input_test_0_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_5_we1_local = 1'b1;
    end else begin
        input_test_0_5_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_6_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_6_address0_local = zext_ln89_22_fu_2080_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_test_0_6_address0_local = zext_ln89_23_fu_1969_p1;
        end else begin
            input_test_0_6_address0_local = 'bx;
        end
    end else begin
        input_test_0_6_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_6_address1_local = zext_ln89_25_fu_2202_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_6_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_6_address1_local = 'bx;
        end
    end else begin
        input_test_0_6_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_test_0_6_ce0_local = 1'b1;
    end else begin
        input_test_0_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_6_ce1_local = 1'b1;
    end else begin
        input_test_0_6_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_6_d0_local = digits_features_6_3_0_load_reg_2834;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_6_d0_local = digits_features_6_1_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_test_0_6_d0_local = 5'd0;
        end else begin
            input_test_0_6_d0_local = 'bx;
        end
    end else begin
        input_test_0_6_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_6_d1_local = digits_features_6_4_0_load_reg_2899;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_6_d1_local = digits_features_6_0_0_q0;
        end else begin
            input_test_0_6_d1_local = 'bx;
        end
    end else begin
        input_test_0_6_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_fu_1920_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_test_0_6_we0_local = 1'b1;
    end else begin
        input_test_0_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_6_we1_local = 1'b1;
    end else begin
        input_test_0_6_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_7_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_7_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_7_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_7_address0_local = 'bx;
        end
    end else begin
        input_test_0_7_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_7_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_7_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_7_address1_local = 'bx;
        end
    end else begin
        input_test_0_7_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_7_ce0_local = 1'b1;
    end else begin
        input_test_0_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_7_ce1_local = 1'b1;
    end else begin
        input_test_0_7_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_7_d0_local = digits_features_7_4_0_load_reg_2904;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_7_d0_local = digits_features_7_3_0_load_reg_2839;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_7_d0_local = digits_features_7_1_0_q0;
        end else begin
            input_test_0_7_d0_local = 'bx;
        end
    end else begin
        input_test_0_7_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_7_d1_local = zext_ln89_11_fu_2216_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_7_d1_local = zext_ln89_2_fu_2102_p1;
        end else begin
            input_test_0_7_d1_local = 'bx;
        end
    end else begin
        input_test_0_7_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_7_we0_local = 1'b1;
    end else begin
        input_test_0_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_7_we1_local = 1'b1;
    end else begin
        input_test_0_7_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_8_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_8_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_8_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_8_address0_local = 'bx;
        end
    end else begin
        input_test_0_8_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_8_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_8_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_8_address1_local = 'bx;
        end
    end else begin
        input_test_0_8_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_8_ce0_local = 1'b1;
    end else begin
        input_test_0_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_8_ce1_local = 1'b1;
    end else begin
        input_test_0_8_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_8_d0_local = digits_features_8_4_0_load_reg_2909;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_8_d0_local = zext_ln89_14_fu_2228_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_8_d0_local = digits_features_8_1_0_q0;
        end else begin
            input_test_0_8_d0_local = 'bx;
        end
    end else begin
        input_test_0_8_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_8_d1_local = digits_features_8_2_0_load_reg_2784;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_8_d1_local = zext_ln89_3_fu_2107_p1;
        end else begin
            input_test_0_8_d1_local = 'bx;
        end
    end else begin
        input_test_0_8_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_8_we0_local = 1'b1;
    end else begin
        input_test_0_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_8_we1_local = 1'b1;
    end else begin
        input_test_0_8_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_9_address0_local = zext_ln89_25_reg_2981;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_9_address0_local = zext_ln89_24_reg_2383;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_9_address0_local = zext_ln89_22_fu_2080_p1;
        end else begin
            input_test_0_9_address0_local = 'bx;
        end
    end else begin
        input_test_0_9_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_9_address1_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_9_address1_local = zext_ln89_21_reg_2345;
        end else begin
            input_test_0_9_address1_local = 'bx;
        end
    end else begin
        input_test_0_9_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_9_ce0_local = 1'b1;
    end else begin
        input_test_0_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_9_ce1_local = 1'b1;
    end else begin
        input_test_0_9_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_test_0_9_d0_local = digits_features_9_4_0_load_reg_2914;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_9_d0_local = zext_ln89_15_fu_2232_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_9_d0_local = digits_features_9_1_0_q0;
        end else begin
            input_test_0_9_d0_local = 'bx;
        end
    end else begin
        input_test_0_9_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_9_d1_local = digits_features_9_2_0_load_reg_2789;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_9_d1_local = digits_features_9_0_0_q0;
        end else begin
            input_test_0_9_d1_local = 'bx;
        end
    end else begin
        input_test_0_9_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_test_0_9_we0_local = 1'b1;
    end else begin
        input_test_0_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_test_0_9_we1_local = 1'b1;
    end else begin
        input_test_0_9_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_address0_local = zext_ln89_25_fu_2202_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_address0_local = zext_ln89_23_reg_2367;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_test_0_address0_local = zext_ln89_24_fu_1980_p1;
        end else begin
            input_test_0_address0_local = 'bx;
        end
    end else begin
        input_test_0_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_address1_local = zext_ln89_22_fu_2080_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_test_0_address1_local = zext_ln89_21_fu_1954_p1;
        end else begin
            input_test_0_address1_local = 'bx;
        end
    end else begin
        input_test_0_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_test_0_ce0_local = 1'b1;
    end else begin
        input_test_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_test_0_ce1_local = 1'b1;
    end else begin
        input_test_0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_test_0_d0_local = digits_features_0_4_0_load_reg_2869;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_d0_local = digits_features_0_2_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_test_0_d0_local = 5'd0;
        end else begin
            input_test_0_d0_local = 'bx;
        end
    end else begin
        input_test_0_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_test_0_d1_local = digits_features_0_1_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_test_0_d1_local = 5'd0;
        end else begin
            input_test_0_d1_local = 'bx;
        end
    end else begin
        input_test_0_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_fu_1920_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_test_0_we0_local = 1'b1;
    end else begin
        input_test_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_fu_1920_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_test_0_we1_local = 1'b1;
    end else begin
        input_test_0_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_test_address0_local = zext_ln90_9_fu_2323_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_test_address0_local = zext_ln90_7_fu_2303_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_test_address0_local = zext_ln90_5_fu_2283_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_test_address0_local = zext_ln90_3_fu_2251_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_test_address0_local = zext_ln90_1_fu_2192_p1;
    end else begin
        y_test_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_test_address1_local = zext_ln90_8_fu_2313_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_test_address1_local = zext_ln90_6_fu_2293_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_test_address1_local = zext_ln90_4_fu_2273_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_test_address1_local = zext_ln90_2_fu_2241_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_test_address1_local = zext_ln90_fu_2165_p1;
    end else begin
        y_test_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        y_test_ce0_local = 1'b1;
    end else begin
        y_test_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        y_test_ce1_local = 1'b1;
    end else begin
        y_test_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_test_d0_local = digits_labels_9_load_reg_2964;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_test_d0_local = digits_labels_7_load_reg_2954;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_test_d0_local = digits_labels_5_load_reg_2944;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_test_d0_local = digits_labels_3_load_reg_2934;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_test_d0_local = digits_labels_1_q0;
    end else begin
        y_test_d0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_test_d1_local = digits_labels_8_load_reg_2959;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_test_d1_local = digits_labels_6_load_reg_2949;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_test_d1_local = digits_labels_4_load_reg_2939;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_test_d1_local = digits_labels_2_load_reg_2929;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_test_d1_local = digits_labels_0_q0;
    end else begin
        y_test_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        y_test_we0_local = 1'b1;
    end else begin
        y_test_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln88_reg_2341 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        y_test_we1_local = 1'b1;
    end else begin
        y_test_we1_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln88_fu_1926_p2 = (ap_sig_allocacmp_i_5 + 9'd1);

assign add_ln89_1_fu_2075_p2 = (trunc_ln89_reg_2361 + 11'd1);

assign add_ln89_2_fu_1963_p2 = (trunc_ln89_fu_1959_p1 + 11'd2);

assign add_ln89_3_fu_1974_p2 = (trunc_ln89_fu_1959_p1 + 11'd3);

assign add_ln89_4_fu_2197_p2 = (trunc_ln89_reg_2361 + 11'd4);

assign add_ln89_5_fu_1948_p2 = (zext_ln89_20_fu_1944_p1 + zext_ln89_19_fu_1932_p1);

assign add_ln89_fu_1989_p2 = ($signed(zext_ln88_fu_1985_p1) + $signed(11'd1437));

assign add_ln90_1_fu_2246_p2 = (trunc_ln90_reg_2969 + 12'd3);

assign add_ln90_2_fu_2268_p2 = (trunc_ln90_reg_2969 + 12'd4);

assign add_ln90_3_fu_2278_p2 = (trunc_ln90_reg_2969 + 12'd5);

assign add_ln90_4_fu_2288_p2 = (trunc_ln90_reg_2969 + 12'd6);

assign add_ln90_5_fu_2298_p2 = (trunc_ln90_reg_2969 + 12'd7);

assign add_ln90_6_fu_2308_p2 = (trunc_ln90_reg_2969 + 12'd8);

assign add_ln90_7_fu_2318_p2 = (trunc_ln90_reg_2969 + 12'd9);

assign add_ln90_8_fu_2159_p2 = (zext_ln90_10_fu_2144_p1 + zext_ln90_11_fu_2155_p1);

assign add_ln90_fu_2236_p2 = (trunc_ln90_reg_2969 + 12'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign digits_features_0_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_0_1_0_ce0 = digits_features_0_1_0_ce0_local;

assign digits_features_0_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_0_2_0_ce0 = digits_features_0_2_0_ce0_local;

assign digits_features_0_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_0_4_0_ce0 = digits_features_0_4_0_ce0_local;

assign digits_features_10_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_10_0_0_ce0 = digits_features_10_0_0_ce0_local;

assign digits_features_10_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_10_1_0_ce0 = digits_features_10_1_0_ce0_local;

assign digits_features_10_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_10_2_0_ce0 = digits_features_10_2_0_ce0_local;

assign digits_features_10_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_10_3_0_ce0 = digits_features_10_3_0_ce0_local;

assign digits_features_10_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_10_4_0_ce0 = digits_features_10_4_0_ce0_local;

assign digits_features_11_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_11_0_0_ce0 = digits_features_11_0_0_ce0_local;

assign digits_features_11_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_11_1_0_ce0 = digits_features_11_1_0_ce0_local;

assign digits_features_11_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_11_2_0_ce0 = digits_features_11_2_0_ce0_local;

assign digits_features_11_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_11_3_0_ce0 = digits_features_11_3_0_ce0_local;

assign digits_features_11_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_11_4_0_ce0 = digits_features_11_4_0_ce0_local;

assign digits_features_12_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_12_0_0_ce0 = digits_features_12_0_0_ce0_local;

assign digits_features_12_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_12_1_0_ce0 = digits_features_12_1_0_ce0_local;

assign digits_features_12_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_12_2_0_ce0 = digits_features_12_2_0_ce0_local;

assign digits_features_12_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_12_3_0_ce0 = digits_features_12_3_0_ce0_local;

assign digits_features_1_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_1_0_0_ce0 = digits_features_1_0_0_ce0_local;

assign digits_features_1_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_1_1_0_ce0 = digits_features_1_1_0_ce0_local;

assign digits_features_1_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_1_2_0_ce0 = digits_features_1_2_0_ce0_local;

assign digits_features_1_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_1_3_0_ce0 = digits_features_1_3_0_ce0_local;

assign digits_features_1_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_1_4_0_ce0 = digits_features_1_4_0_ce0_local;

assign digits_features_2_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_2_0_0_ce0 = digits_features_2_0_0_ce0_local;

assign digits_features_2_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_2_1_0_ce0 = digits_features_2_1_0_ce0_local;

assign digits_features_2_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_2_2_0_ce0 = digits_features_2_2_0_ce0_local;

assign digits_features_2_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_2_3_0_ce0 = digits_features_2_3_0_ce0_local;

assign digits_features_2_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_2_4_0_ce0 = digits_features_2_4_0_ce0_local;

assign digits_features_3_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_3_0_0_ce0 = digits_features_3_0_0_ce0_local;

assign digits_features_3_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_3_1_0_ce0 = digits_features_3_1_0_ce0_local;

assign digits_features_3_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_3_2_0_ce0 = digits_features_3_2_0_ce0_local;

assign digits_features_3_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_3_3_0_ce0 = digits_features_3_3_0_ce0_local;

assign digits_features_3_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_3_4_0_ce0 = digits_features_3_4_0_ce0_local;

assign digits_features_4_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_4_0_0_ce0 = digits_features_4_0_0_ce0_local;

assign digits_features_4_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_4_1_0_ce0 = digits_features_4_1_0_ce0_local;

assign digits_features_4_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_4_2_0_ce0 = digits_features_4_2_0_ce0_local;

assign digits_features_4_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_4_3_0_ce0 = digits_features_4_3_0_ce0_local;

assign digits_features_4_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_4_4_0_ce0 = digits_features_4_4_0_ce0_local;

assign digits_features_5_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_5_0_0_ce0 = digits_features_5_0_0_ce0_local;

assign digits_features_5_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_5_1_0_ce0 = digits_features_5_1_0_ce0_local;

assign digits_features_5_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_5_2_0_ce0 = digits_features_5_2_0_ce0_local;

assign digits_features_5_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_5_3_0_ce0 = digits_features_5_3_0_ce0_local;

assign digits_features_5_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_5_4_0_ce0 = digits_features_5_4_0_ce0_local;

assign digits_features_6_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_6_0_0_ce0 = digits_features_6_0_0_ce0_local;

assign digits_features_6_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_6_1_0_ce0 = digits_features_6_1_0_ce0_local;

assign digits_features_6_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_6_3_0_ce0 = digits_features_6_3_0_ce0_local;

assign digits_features_6_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_6_4_0_ce0 = digits_features_6_4_0_ce0_local;

assign digits_features_7_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_7_0_0_ce0 = digits_features_7_0_0_ce0_local;

assign digits_features_7_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_7_1_0_ce0 = digits_features_7_1_0_ce0_local;

assign digits_features_7_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_7_2_0_ce0 = digits_features_7_2_0_ce0_local;

assign digits_features_7_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_7_3_0_ce0 = digits_features_7_3_0_ce0_local;

assign digits_features_7_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_7_4_0_ce0 = digits_features_7_4_0_ce0_local;

assign digits_features_8_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_8_0_0_ce0 = digits_features_8_0_0_ce0_local;

assign digits_features_8_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_8_1_0_ce0 = digits_features_8_1_0_ce0_local;

assign digits_features_8_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_8_2_0_ce0 = digits_features_8_2_0_ce0_local;

assign digits_features_8_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_8_3_0_ce0 = digits_features_8_3_0_ce0_local;

assign digits_features_8_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_8_4_0_ce0 = digits_features_8_4_0_ce0_local;

assign digits_features_9_0_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_9_0_0_ce0 = digits_features_9_0_0_ce0_local;

assign digits_features_9_1_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_9_1_0_ce0 = digits_features_9_1_0_ce0_local;

assign digits_features_9_2_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_9_2_0_ce0 = digits_features_9_2_0_ce0_local;

assign digits_features_9_3_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_9_3_0_ce0 = digits_features_9_3_0_ce0_local;

assign digits_features_9_4_0_address0 = zext_ln89_fu_1995_p1;

assign digits_features_9_4_0_ce0 = digits_features_9_4_0_ce0_local;

assign digits_labels_0_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_0_ce0 = digits_labels_0_ce0_local;

assign digits_labels_1_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_1_ce0 = digits_labels_1_ce0_local;

assign digits_labels_2_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_2_ce0 = digits_labels_2_ce0_local;

assign digits_labels_3_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_3_ce0 = digits_labels_3_ce0_local;

assign digits_labels_4_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_4_ce0 = digits_labels_4_ce0_local;

assign digits_labels_5_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_5_ce0 = digits_labels_5_ce0_local;

assign digits_labels_6_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_6_ce0 = digits_labels_6_ce0_local;

assign digits_labels_7_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_7_ce0 = digits_labels_7_ce0_local;

assign digits_labels_8_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_8_ce0 = digits_labels_8_ce0_local;

assign digits_labels_9_address0 = zext_ln89_fu_1995_p1;

assign digits_labels_9_ce0 = digits_labels_9_ce0_local;

assign icmp_ln88_fu_1920_p2 = ((ap_sig_allocacmp_i_5 == 9'd360) ? 1'b1 : 1'b0);

assign input_test_0_10_address0 = input_test_0_10_address0_local;

assign input_test_0_10_address1 = input_test_0_10_address1_local;

assign input_test_0_10_ce0 = input_test_0_10_ce0_local;

assign input_test_0_10_ce1 = input_test_0_10_ce1_local;

assign input_test_0_10_d0 = input_test_0_10_d0_local;

assign input_test_0_10_d1 = input_test_0_10_d1_local;

assign input_test_0_10_we0 = input_test_0_10_we0_local;

assign input_test_0_10_we1 = input_test_0_10_we1_local;

assign input_test_0_11_address0 = input_test_0_11_address0_local;

assign input_test_0_11_address1 = input_test_0_11_address1_local;

assign input_test_0_11_ce0 = input_test_0_11_ce0_local;

assign input_test_0_11_ce1 = input_test_0_11_ce1_local;

assign input_test_0_11_d0 = input_test_0_11_d0_local;

assign input_test_0_11_d1 = input_test_0_11_d1_local;

assign input_test_0_11_we0 = input_test_0_11_we0_local;

assign input_test_0_11_we1 = input_test_0_11_we1_local;

assign input_test_0_12_address0 = input_test_0_12_address0_local;

assign input_test_0_12_address1 = input_test_0_12_address1_local;

assign input_test_0_12_ce0 = input_test_0_12_ce0_local;

assign input_test_0_12_ce1 = input_test_0_12_ce1_local;

assign input_test_0_12_d0 = input_test_0_12_d0_local;

assign input_test_0_12_d1 = input_test_0_12_d1_local;

assign input_test_0_12_we0 = input_test_0_12_we0_local;

assign input_test_0_12_we1 = input_test_0_12_we1_local;

assign input_test_0_1_address0 = input_test_0_1_address0_local;

assign input_test_0_1_address1 = input_test_0_1_address1_local;

assign input_test_0_1_ce0 = input_test_0_1_ce0_local;

assign input_test_0_1_ce1 = input_test_0_1_ce1_local;

assign input_test_0_1_d0 = input_test_0_1_d0_local;

assign input_test_0_1_d1 = input_test_0_1_d1_local;

assign input_test_0_1_we0 = input_test_0_1_we0_local;

assign input_test_0_1_we1 = input_test_0_1_we1_local;

assign input_test_0_2_address0 = input_test_0_2_address0_local;

assign input_test_0_2_address1 = input_test_0_2_address1_local;

assign input_test_0_2_ce0 = input_test_0_2_ce0_local;

assign input_test_0_2_ce1 = input_test_0_2_ce1_local;

assign input_test_0_2_d0 = input_test_0_2_d0_local;

assign input_test_0_2_d1 = input_test_0_2_d1_local;

assign input_test_0_2_we0 = input_test_0_2_we0_local;

assign input_test_0_2_we1 = input_test_0_2_we1_local;

assign input_test_0_3_address0 = input_test_0_3_address0_local;

assign input_test_0_3_address1 = input_test_0_3_address1_local;

assign input_test_0_3_ce0 = input_test_0_3_ce0_local;

assign input_test_0_3_ce1 = input_test_0_3_ce1_local;

assign input_test_0_3_d0 = input_test_0_3_d0_local;

assign input_test_0_3_d1 = input_test_0_3_d1_local;

assign input_test_0_3_we0 = input_test_0_3_we0_local;

assign input_test_0_3_we1 = input_test_0_3_we1_local;

assign input_test_0_4_address0 = input_test_0_4_address0_local;

assign input_test_0_4_address1 = input_test_0_4_address1_local;

assign input_test_0_4_ce0 = input_test_0_4_ce0_local;

assign input_test_0_4_ce1 = input_test_0_4_ce1_local;

assign input_test_0_4_d0 = input_test_0_4_d0_local;

assign input_test_0_4_d1 = input_test_0_4_d1_local;

assign input_test_0_4_we0 = input_test_0_4_we0_local;

assign input_test_0_4_we1 = input_test_0_4_we1_local;

assign input_test_0_5_address0 = input_test_0_5_address0_local;

assign input_test_0_5_address1 = input_test_0_5_address1_local;

assign input_test_0_5_ce0 = input_test_0_5_ce0_local;

assign input_test_0_5_ce1 = input_test_0_5_ce1_local;

assign input_test_0_5_d0 = input_test_0_5_d0_local;

assign input_test_0_5_d1 = input_test_0_5_d1_local;

assign input_test_0_5_we0 = input_test_0_5_we0_local;

assign input_test_0_5_we1 = input_test_0_5_we1_local;

assign input_test_0_6_address0 = input_test_0_6_address0_local;

assign input_test_0_6_address1 = input_test_0_6_address1_local;

assign input_test_0_6_ce0 = input_test_0_6_ce0_local;

assign input_test_0_6_ce1 = input_test_0_6_ce1_local;

assign input_test_0_6_d0 = input_test_0_6_d0_local;

assign input_test_0_6_d1 = input_test_0_6_d1_local;

assign input_test_0_6_we0 = input_test_0_6_we0_local;

assign input_test_0_6_we1 = input_test_0_6_we1_local;

assign input_test_0_7_address0 = input_test_0_7_address0_local;

assign input_test_0_7_address1 = input_test_0_7_address1_local;

assign input_test_0_7_ce0 = input_test_0_7_ce0_local;

assign input_test_0_7_ce1 = input_test_0_7_ce1_local;

assign input_test_0_7_d0 = input_test_0_7_d0_local;

assign input_test_0_7_d1 = input_test_0_7_d1_local;

assign input_test_0_7_we0 = input_test_0_7_we0_local;

assign input_test_0_7_we1 = input_test_0_7_we1_local;

assign input_test_0_8_address0 = input_test_0_8_address0_local;

assign input_test_0_8_address1 = input_test_0_8_address1_local;

assign input_test_0_8_ce0 = input_test_0_8_ce0_local;

assign input_test_0_8_ce1 = input_test_0_8_ce1_local;

assign input_test_0_8_d0 = input_test_0_8_d0_local;

assign input_test_0_8_d1 = input_test_0_8_d1_local;

assign input_test_0_8_we0 = input_test_0_8_we0_local;

assign input_test_0_8_we1 = input_test_0_8_we1_local;

assign input_test_0_9_address0 = input_test_0_9_address0_local;

assign input_test_0_9_address1 = input_test_0_9_address1_local;

assign input_test_0_9_ce0 = input_test_0_9_ce0_local;

assign input_test_0_9_ce1 = input_test_0_9_ce1_local;

assign input_test_0_9_d0 = input_test_0_9_d0_local;

assign input_test_0_9_d1 = input_test_0_9_d1_local;

assign input_test_0_9_we0 = input_test_0_9_we0_local;

assign input_test_0_9_we1 = input_test_0_9_we1_local;

assign input_test_0_address0 = input_test_0_address0_local;

assign input_test_0_address1 = input_test_0_address1_local;

assign input_test_0_ce0 = input_test_0_ce0_local;

assign input_test_0_ce1 = input_test_0_ce1_local;

assign input_test_0_d0 = input_test_0_d0_local;

assign input_test_0_d1 = input_test_0_d1_local;

assign input_test_0_we0 = input_test_0_we0_local;

assign input_test_0_we1 = input_test_0_we1_local;

assign or_ln1_fu_2184_p3 = {{tmp_1_fu_2174_p4}, {1'd1}};

assign tmp_1_fu_2174_p4 = {{add_ln90_8_fu_2159_p2[11:1]}};

assign tmp_2_fu_2137_p3 = {{i_5_reg_2335}, {3'd0}};

assign tmp_3_fu_2148_p3 = {{i_5_reg_2335}, {1'd0}};

assign tmp_fu_1936_p3 = {{ap_sig_allocacmp_i_5}, {2'd0}};

assign trunc_ln89_fu_1959_p1 = add_ln89_5_fu_1948_p2[10:0];

assign trunc_ln90_fu_2170_p1 = add_ln90_8_fu_2159_p2[11:0];

assign y_test_address0 = y_test_address0_local;

assign y_test_address1 = y_test_address1_local;

assign y_test_ce0 = y_test_ce0_local;

assign y_test_ce1 = y_test_ce1_local;

assign y_test_d0 = y_test_d0_local;

assign y_test_d1 = y_test_d1_local;

assign y_test_we0 = y_test_we0_local;

assign y_test_we1 = y_test_we1_local;

assign zext_ln88_fu_1985_p1 = ap_sig_allocacmp_i_5;

assign zext_ln89_10_fu_2212_p1 = digits_features_5_2_0_load_reg_2774;

assign zext_ln89_11_fu_2216_p1 = digits_features_7_2_0_load_reg_2779;

assign zext_ln89_12_fu_2220_p1 = digits_features_12_2_0_load_reg_2804;

assign zext_ln89_13_fu_2224_p1 = digits_features_1_3_0_load_reg_2809;

assign zext_ln89_14_fu_2228_p1 = digits_features_8_3_0_load_reg_2844;

assign zext_ln89_15_fu_2232_p1 = digits_features_9_3_0_load_reg_2849;

assign zext_ln89_16_fu_2256_p1 = digits_features_3_4_0_load_reg_2884;

assign zext_ln89_17_fu_2260_p1 = digits_features_4_4_0_load_reg_2889;

assign zext_ln89_18_fu_2264_p1 = digits_features_5_4_0_load_reg_2894;

assign zext_ln89_19_fu_1932_p1 = ap_sig_allocacmp_i_5;

assign zext_ln89_1_fu_2097_p1 = digits_features_1_0_0_q0;

assign zext_ln89_20_fu_1944_p1 = tmp_fu_1936_p3;

assign zext_ln89_21_fu_1954_p1 = add_ln89_5_fu_1948_p2;

assign zext_ln89_22_fu_2080_p1 = add_ln89_1_fu_2075_p2;

assign zext_ln89_23_fu_1969_p1 = add_ln89_2_fu_1963_p2;

assign zext_ln89_24_fu_1980_p1 = add_ln89_3_fu_1974_p2;

assign zext_ln89_25_fu_2202_p1 = add_ln89_4_fu_2197_p2;

assign zext_ln89_2_fu_2102_p1 = digits_features_7_0_0_q0;

assign zext_ln89_3_fu_2107_p1 = digits_features_8_0_0_q0;

assign zext_ln89_4_fu_2112_p1 = digits_features_2_1_0_q0;

assign zext_ln89_5_fu_2117_p1 = digits_features_3_1_0_q0;

assign zext_ln89_6_fu_2122_p1 = digits_features_10_1_0_q0;

assign zext_ln89_7_fu_2127_p1 = digits_features_11_1_0_q0;

assign zext_ln89_8_fu_2132_p1 = digits_features_12_1_0_q0;

assign zext_ln89_9_fu_2208_p1 = digits_features_4_2_0_load_reg_2769;

assign zext_ln89_fu_1995_p1 = add_ln89_fu_1989_p2;

assign zext_ln90_10_fu_2144_p1 = tmp_2_fu_2137_p3;

assign zext_ln90_11_fu_2155_p1 = tmp_3_fu_2148_p3;

assign zext_ln90_1_fu_2192_p1 = or_ln1_fu_2184_p3;

assign zext_ln90_2_fu_2241_p1 = add_ln90_fu_2236_p2;

assign zext_ln90_3_fu_2251_p1 = add_ln90_1_fu_2246_p2;

assign zext_ln90_4_fu_2273_p1 = add_ln90_2_fu_2268_p2;

assign zext_ln90_5_fu_2283_p1 = add_ln90_3_fu_2278_p2;

assign zext_ln90_6_fu_2293_p1 = add_ln90_4_fu_2288_p2;

assign zext_ln90_7_fu_2303_p1 = add_ln90_5_fu_2298_p2;

assign zext_ln90_8_fu_2313_p1 = add_ln90_6_fu_2308_p2;

assign zext_ln90_9_fu_2323_p1 = add_ln90_7_fu_2318_p2;

assign zext_ln90_fu_2165_p1 = add_ln90_8_fu_2159_p2;

always @ (posedge ap_clk) begin
    zext_ln89_21_reg_2345[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln89_23_reg_2367[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln89_24_reg_2383[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    trunc_ln90_reg_2969[0] <= 1'b0;
    zext_ln89_25_reg_2981[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //top_top_Pipeline_VITIS_LOOP_88_2
