// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_updateWeightBias_8_4_Pipeline_VITIS_LOOP_71_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        update_temp_mat_14_address0,
        update_temp_mat_14_ce0,
        update_temp_mat_14_we0,
        update_temp_mat_14_d0,
        update_temp_mat_13_address0,
        update_temp_mat_13_ce0,
        update_temp_mat_13_we0,
        update_temp_mat_13_d0,
        update_temp_mat_12_address0,
        update_temp_mat_12_ce0,
        update_temp_mat_12_we0,
        update_temp_mat_12_d0,
        update_temp_mat_11_address0,
        update_temp_mat_11_ce0,
        update_temp_mat_11_we0,
        update_temp_mat_11_d0,
        update_temp_mat_10_address0,
        update_temp_mat_10_ce0,
        update_temp_mat_10_we0,
        update_temp_mat_10_d0,
        update_temp_mat_9_address0,
        update_temp_mat_9_ce0,
        update_temp_mat_9_we0,
        update_temp_mat_9_d0,
        update_temp_mat_8_address0,
        update_temp_mat_8_ce0,
        update_temp_mat_8_we0,
        update_temp_mat_8_d0,
        update_temp_mat_address0,
        update_temp_mat_ce0,
        update_temp_mat_we0,
        update_temp_mat_d0,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        conv7_i_i,
        conv7_i_i_1,
        conv7_i_i_2,
        conv7_i_i_3,
        conv7_i_i_4,
        conv7_i_i_5,
        conv7_i_i_6,
        conv7_i_i_7
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] update_temp_mat_14_address0;
output   update_temp_mat_14_ce0;
output   update_temp_mat_14_we0;
output  [24:0] update_temp_mat_14_d0;
output  [1:0] update_temp_mat_13_address0;
output   update_temp_mat_13_ce0;
output   update_temp_mat_13_we0;
output  [24:0] update_temp_mat_13_d0;
output  [1:0] update_temp_mat_12_address0;
output   update_temp_mat_12_ce0;
output   update_temp_mat_12_we0;
output  [24:0] update_temp_mat_12_d0;
output  [1:0] update_temp_mat_11_address0;
output   update_temp_mat_11_ce0;
output   update_temp_mat_11_we0;
output  [24:0] update_temp_mat_11_d0;
output  [1:0] update_temp_mat_10_address0;
output   update_temp_mat_10_ce0;
output   update_temp_mat_10_we0;
output  [24:0] update_temp_mat_10_d0;
output  [1:0] update_temp_mat_9_address0;
output   update_temp_mat_9_ce0;
output   update_temp_mat_9_we0;
output  [24:0] update_temp_mat_9_d0;
output  [1:0] update_temp_mat_8_address0;
output   update_temp_mat_8_ce0;
output   update_temp_mat_8_we0;
output  [24:0] update_temp_mat_8_d0;
output  [1:0] update_temp_mat_address0;
output   update_temp_mat_ce0;
output   update_temp_mat_we0;
output  [24:0] update_temp_mat_d0;
input  [24:0] p_read;
input  [24:0] p_read1;
input  [24:0] p_read2;
input  [24:0] p_read3;
input  [24:0] conv7_i_i;
input  [24:0] conv7_i_i_1;
input  [24:0] conv7_i_i_2;
input  [24:0] conv7_i_i_3;
input  [24:0] conv7_i_i_4;
input  [24:0] conv7_i_i_5;
input  [24:0] conv7_i_i_6;
input  [24:0] conv7_i_i_7;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln71_fu_364_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln71_fu_376_p1;
reg   [2:0] i_fu_104;
wire   [2:0] i_2_fu_370_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_1;
reg    update_temp_mat_we0_local;
reg    update_temp_mat_ce0_local;
reg    update_temp_mat_8_we0_local;
reg    update_temp_mat_8_ce0_local;
reg    update_temp_mat_9_we0_local;
reg    update_temp_mat_9_ce0_local;
reg    update_temp_mat_10_we0_local;
reg    update_temp_mat_10_ce0_local;
reg    update_temp_mat_11_we0_local;
reg    update_temp_mat_11_ce0_local;
reg    update_temp_mat_12_we0_local;
reg    update_temp_mat_12_ce0_local;
reg    update_temp_mat_13_we0_local;
reg    update_temp_mat_13_ce0_local;
reg    update_temp_mat_14_we0_local;
reg    update_temp_mat_14_ce0_local;
wire  signed [24:0] mul_ln79_fu_284_p0;
wire  signed [49:0] conv_i_i_fu_416_p1;
wire  signed [24:0] mul_ln79_1_fu_288_p0;
wire  signed [24:0] mul_ln79_2_fu_292_p0;
wire  signed [24:0] mul_ln79_3_fu_296_p0;
wire  signed [24:0] mul_ln79_4_fu_300_p0;
wire  signed [24:0] mul_ln79_5_fu_304_p0;
wire  signed [24:0] mul_ln79_6_fu_308_p0;
wire  signed [24:0] mul_ln79_7_fu_312_p0;
wire   [24:0] tmp_fu_392_p9;
wire   [1:0] tmp_fu_392_p10;
wire   [24:0] tmp_fu_392_p11;
wire   [49:0] mul_ln79_fu_284_p2;
wire   [49:0] mul_ln79_1_fu_288_p2;
wire   [49:0] mul_ln79_2_fu_292_p2;
wire   [49:0] mul_ln79_3_fu_296_p2;
wire   [49:0] mul_ln79_4_fu_300_p2;
wire   [49:0] mul_ln79_5_fu_304_p2;
wire   [49:0] mul_ln79_6_fu_308_p2;
wire   [49:0] mul_ln79_7_fu_312_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [1:0] tmp_fu_392_p1;
wire   [1:0] tmp_fu_392_p3;
wire  signed [1:0] tmp_fu_392_p5;
wire  signed [1:0] tmp_fu_392_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 i_fu_104 = 3'd0;
#0 ap_done_reg = 1'b0;
end

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U781(
    .din0(mul_ln79_fu_284_p0),
    .din1(conv7_i_i),
    .dout(mul_ln79_fu_284_p2)
);

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U782(
    .din0(mul_ln79_1_fu_288_p0),
    .din1(conv7_i_i_1),
    .dout(mul_ln79_1_fu_288_p2)
);

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U783(
    .din0(mul_ln79_2_fu_292_p0),
    .din1(conv7_i_i_2),
    .dout(mul_ln79_2_fu_292_p2)
);

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U784(
    .din0(mul_ln79_3_fu_296_p0),
    .din1(conv7_i_i_3),
    .dout(mul_ln79_3_fu_296_p2)
);

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U785(
    .din0(mul_ln79_4_fu_300_p0),
    .din1(conv7_i_i_4),
    .dout(mul_ln79_4_fu_300_p2)
);

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U786(
    .din0(mul_ln79_5_fu_304_p0),
    .din1(conv7_i_i_5),
    .dout(mul_ln79_5_fu_304_p2)
);

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U787(
    .din0(mul_ln79_6_fu_308_p0),
    .din1(conv7_i_i_6),
    .dout(mul_ln79_6_fu_308_p2)
);

top_mul_25s_25s_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 50 ))
mul_25s_25s_50_1_1_U788(
    .din0(mul_ln79_7_fu_312_p0),
    .din1(conv7_i_i_7),
    .dout(mul_ln79_7_fu_312_p2)
);

(* dissolve_hierarchy = "yes" *) top_sparsemux_9_2_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 25 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 25 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 25 ),
    .CASE3( 2'h3 ),
    .din3_WIDTH( 25 ),
    .def_WIDTH( 25 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 25 ))
sparsemux_9_2_25_1_1_U789(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .def(tmp_fu_392_p9),
    .sel(tmp_fu_392_p10),
    .dout(tmp_fu_392_p11)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln71_fu_364_p2 == 1'd0)) begin
            i_fu_104 <= i_2_fu_370_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_104 <= 3'd0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_10_ce0_local = 1'b1;
    end else begin
        update_temp_mat_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_10_we0_local = 1'b1;
    end else begin
        update_temp_mat_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_11_ce0_local = 1'b1;
    end else begin
        update_temp_mat_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_11_we0_local = 1'b1;
    end else begin
        update_temp_mat_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_12_ce0_local = 1'b1;
    end else begin
        update_temp_mat_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_12_we0_local = 1'b1;
    end else begin
        update_temp_mat_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_13_ce0_local = 1'b1;
    end else begin
        update_temp_mat_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_13_we0_local = 1'b1;
    end else begin
        update_temp_mat_13_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_14_ce0_local = 1'b1;
    end else begin
        update_temp_mat_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_14_we0_local = 1'b1;
    end else begin
        update_temp_mat_14_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_8_ce0_local = 1'b1;
    end else begin
        update_temp_mat_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_8_we0_local = 1'b1;
    end else begin
        update_temp_mat_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_9_ce0_local = 1'b1;
    end else begin
        update_temp_mat_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_9_we0_local = 1'b1;
    end else begin
        update_temp_mat_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_ce0_local = 1'b1;
    end else begin
        update_temp_mat_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_fu_364_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        update_temp_mat_we0_local = 1'b1;
    end else begin
        update_temp_mat_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign conv_i_i_fu_416_p1 = $signed(tmp_fu_392_p11);

assign i_2_fu_370_p2 = (ap_sig_allocacmp_i_1 + 3'd1);

assign icmp_ln71_fu_364_p2 = ((ap_sig_allocacmp_i_1 == 3'd4) ? 1'b1 : 1'b0);

assign mul_ln79_1_fu_288_p0 = conv_i_i_fu_416_p1;

assign mul_ln79_2_fu_292_p0 = conv_i_i_fu_416_p1;

assign mul_ln79_3_fu_296_p0 = conv_i_i_fu_416_p1;

assign mul_ln79_4_fu_300_p0 = conv_i_i_fu_416_p1;

assign mul_ln79_5_fu_304_p0 = conv_i_i_fu_416_p1;

assign mul_ln79_6_fu_308_p0 = conv_i_i_fu_416_p1;

assign mul_ln79_7_fu_312_p0 = conv_i_i_fu_416_p1;

assign mul_ln79_fu_284_p0 = conv_i_i_fu_416_p1;

assign tmp_fu_392_p10 = ap_sig_allocacmp_i_1[1:0];

assign tmp_fu_392_p9 = 'bx;

assign update_temp_mat_10_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_10_ce0 = update_temp_mat_10_ce0_local;

assign update_temp_mat_10_d0 = {{mul_ln79_3_fu_296_p2[41:17]}};

assign update_temp_mat_10_we0 = update_temp_mat_10_we0_local;

assign update_temp_mat_11_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_11_ce0 = update_temp_mat_11_ce0_local;

assign update_temp_mat_11_d0 = {{mul_ln79_4_fu_300_p2[41:17]}};

assign update_temp_mat_11_we0 = update_temp_mat_11_we0_local;

assign update_temp_mat_12_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_12_ce0 = update_temp_mat_12_ce0_local;

assign update_temp_mat_12_d0 = {{mul_ln79_5_fu_304_p2[41:17]}};

assign update_temp_mat_12_we0 = update_temp_mat_12_we0_local;

assign update_temp_mat_13_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_13_ce0 = update_temp_mat_13_ce0_local;

assign update_temp_mat_13_d0 = {{mul_ln79_6_fu_308_p2[41:17]}};

assign update_temp_mat_13_we0 = update_temp_mat_13_we0_local;

assign update_temp_mat_14_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_14_ce0 = update_temp_mat_14_ce0_local;

assign update_temp_mat_14_d0 = {{mul_ln79_7_fu_312_p2[41:17]}};

assign update_temp_mat_14_we0 = update_temp_mat_14_we0_local;

assign update_temp_mat_8_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_8_ce0 = update_temp_mat_8_ce0_local;

assign update_temp_mat_8_d0 = {{mul_ln79_1_fu_288_p2[41:17]}};

assign update_temp_mat_8_we0 = update_temp_mat_8_we0_local;

assign update_temp_mat_9_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_9_ce0 = update_temp_mat_9_ce0_local;

assign update_temp_mat_9_d0 = {{mul_ln79_2_fu_292_p2[41:17]}};

assign update_temp_mat_9_we0 = update_temp_mat_9_we0_local;

assign update_temp_mat_address0 = zext_ln71_fu_376_p1;

assign update_temp_mat_ce0 = update_temp_mat_ce0_local;

assign update_temp_mat_d0 = {{mul_ln79_fu_284_p2[41:17]}};

assign update_temp_mat_we0 = update_temp_mat_we0_local;

assign zext_ln71_fu_376_p1 = ap_sig_allocacmp_i_1;

endmodule //top_updateWeightBias_8_4_Pipeline_VITIS_LOOP_71_1
