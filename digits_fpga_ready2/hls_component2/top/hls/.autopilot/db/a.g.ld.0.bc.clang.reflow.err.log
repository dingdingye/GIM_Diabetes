warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:16: Duplicating function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:16: Duplicating function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:16: Duplicating function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [4], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:16: Duplicating function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [4], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:16: Duplicating function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [8], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:16: Duplicating function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [8], unsigned long)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:235:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::_S_ptr(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [8])' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::data()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:127:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::data()' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::begin()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:785:0: Inlining function 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>* std::__niter_base<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*)' into 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>* std::fill_n<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:785:0: Inlining function '__gnu_cxx::__enable_if<!(__is_scalar<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >::__value), ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*>::__type std::__fill_n_a<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&) (.372)' into 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>* std::fill_n<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:117:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::begin()' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:117:0: Inlining function 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>* std::fill_n<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:235:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::_S_ptr(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [4])' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::data()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:127:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::data()' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::begin()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:117:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::begin()' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:117:0: Inlining function 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>* std::fill_n<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:235:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ptr(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10])' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::data()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:127:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::data()' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::begin()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:117:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::begin()' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:117:0: Inlining function 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>* std::fill_n<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> >(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>*, unsigned long, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1797ul>::_S_ref(std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const (&) [1797], unsigned long)' into 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1797ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437ul>::_S_ref(std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const (&) [1437], unsigned long)' into 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1797ul>::_S_ref(std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul> const (&) [1797], unsigned long)' into 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1797ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437ul>::_S_ref(std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul> const (&) [1437], unsigned long)' into 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360ul>::_S_ref(std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const (&) [360], unsigned long)' into 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360ul>::_S_ref(std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul> const (&) [360], unsigned long)' into 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:235:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::_S_ptr(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [10])' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::data() (.189)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:127:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::data() (.189)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::begin()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:135:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::data() (.189)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::end()'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437ul>::_S_ref(std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const (&) [1437], unsigned long)' into 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::_S_ref(std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [64], unsigned long)' into 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::_S_ref(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [1], unsigned long)' into 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [64], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [1], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul> const (&) [8], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>::operator[](unsigned long) const (.353)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [64], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [64], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long) const (.227)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [1], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [8], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) (.100)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>::operator[](unsigned long) const (.353)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long) const (.227)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) (.100)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [8], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) (.298)'
remark: ../activations.h:19:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) (.100)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> relu<8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&)'
remark: ../activations.h:19:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> relu<8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) (.100)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) (.298)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> relu<8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> forwardPropagation<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul> const (&) [4], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::operator[](unsigned long) const (.334)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [8], unsigned long) (.405)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [8], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) const (.163)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [4], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) (.108)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::operator[](unsigned long) const (.334)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) const (.163)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) (.108)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [4], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) (.283)'
remark: ../activations.h:19:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) (.108)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> relu<4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&)'
remark: ../activations.h:19:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> relu<4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> forwardPropagation<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) (.108)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> forwardPropagation<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) (.283)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> forwardPropagation<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> forwardPropagation<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> relu<4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> forwardPropagation<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul> const (&) [10], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::operator[](unsigned long) const (.320)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [4], unsigned long) (.404)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [4], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) const (.170)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [10], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::operator[](unsigned long) const (.320)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> matmul<10ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&) (.201.317)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> matmul<10ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&) (.201.317)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) const (.170)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> matmul<10ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&) (.201.317)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> matmul<10ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&) (.201.317)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> matmul<10ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&) (.201.317)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> matmul<10ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&) (.201.317)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long) (.268)'
remark: ../activations.h:115:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> softmax<10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10>&)'
remark: ../activations.h:115:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> softmax<10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10>&)'
remark: ../activations.h:115:0: Inlining function 'fast_exp_fixed(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> softmax<10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10>&)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> matmul<10ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&) (.201.317)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> forwardPropagation<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> forwardPropagation<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long) (.268)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> forwardPropagation<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, int)'
remark: ../layer.h:137:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> forwardPropagation<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:239:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::_S_ptr(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [1])' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::data() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:131:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::data() const' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::begin() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:139:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::data() const' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::end() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:874:0: Inlining function 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const* std::__lc_rai<std::random_access_iterator_tag, std::random_access_iterator_tag>::__newlast1<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'bool std::__lexicographical_compare_impl<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:874:0: Inlining function 'bool __gnu_cxx::__ops::_Iter_less_iter::operator()<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*) const' into 'bool std::__lexicographical_compare_impl<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:903:0: Inlining function 'bool std::__lexicographical_compare_impl<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter)' into 'bool std::__lexicographical_compare<false>::__lc<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:930:0: Inlining function 'bool std::__lexicographical_compare<false>::__lc<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'bool std::__lexicographical_compare_aux<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:1223:0: Inlining function 'ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const* std::__niter_base<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'bool std::lexicographical_compare<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:1223:0: Inlining function 'bool std::__lexicographical_compare_aux<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'bool std::lexicographical_compare<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:263:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::begin() const' into 'bool std::operator<<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:263:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::end() const' into 'bool std::operator<<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:263:0: Inlining function 'bool std::lexicographical_compare<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'bool std::operator<<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/predefined_ops.h:43:0: Inlining function 'bool std::operator<<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const&)' into 'bool __gnu_cxx::__ops::_Iter_less_iter::operator()<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5655:0: Inlining function 'bool __gnu_cxx::__ops::_Iter_less_iter::operator()<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*) const' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>* std::__max_element<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, __gnu_cxx::__ops::_Iter_less_iter>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, __gnu_cxx::__ops::_Iter_less_iter)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5675:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>* std::__max_element<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, __gnu_cxx::__ops::_Iter_less_iter>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, __gnu_cxx::__ops::_Iter_less_iter)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>* std::max_element<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_iterator_base_funcs.h:139:0: Inlining function 'std::iterator_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>::difference_type std::__distance<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::random_access_iterator_tag)' into 'std::iterator_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>::difference_type std::distance<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437ul>::_S_ref(std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul> const (&) [1437], unsigned long)' into 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:239:0: Inlining function 'std::__array_traits<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ptr(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10])' into 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::data() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:131:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::data() const' into 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::begin() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:139:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::data() const' into 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::end() const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5655:0: Inlining function 'bool __gnu_cxx::__ops::_Iter_less_iter::operator()<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*) const' into 'ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const* std::__max_element<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5675:0: Inlining function 'ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const* std::__max_element<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, __gnu_cxx::__ops::_Iter_less_iter)' into 'ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const* std::max_element<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_iterator_base_funcs.h:139:0: Inlining function 'std::iterator_traits<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>::difference_type std::__distance<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, std::random_access_iterator_tag)' into 'std::iterator_traits<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>::difference_type std::distance<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ref(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10], unsigned long)' into 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul> const (&) [4], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10], unsigned long) (.403)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::operator[](unsigned long) const (.320)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> transpose<10ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> transpose<10ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> transpose<10ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> transpose<10ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul> const (&) [4], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [10], unsigned long) (.403)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul> const (&) [10], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long) const'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 10ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 10ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 10ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 10ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) (.108)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 10ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 10ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [4], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) const (.289)'
remark: ../activations.h:29:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) (.108)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> derivative_relu<4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&)'
remark: ../activations.h:29:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> derivative_relu<4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> transpose<10ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> const&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> backProp<8, 4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 10ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> backProp<8, 4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> matmul<4ul, 8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&) (.212.331)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> backProp<8, 4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) (.108)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> backProp<8, 4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) const (.289)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> backProp<8, 4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> backProp<8, 4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> derivative_relu<4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4>&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> backProp<8, 4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4> const&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul> const (&) [8], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [4], unsigned long) (.404)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::operator[](unsigned long) const (.334)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> transpose<4ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> transpose<4ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> transpose<4ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> transpose<4ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul> const (&) [8], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul>::operator[](unsigned long) const'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) const (.170)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) (.100)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [8], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) const (.302)'
remark: ../activations.h:29:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) (.100)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> derivative_relu<8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&)'
remark: ../activations.h:29:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> derivative_relu<8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> transpose<4ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> const&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> backProp<64, 8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> backProp<64, 8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> matmul<8ul, 64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&) (.224.350)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> backProp<64, 8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) (.100)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> backProp<64, 8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) const (.302)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> backProp<64, 8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> backProp<64, 8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8> const&, int)'
remark: ../layer.h:181:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> derivative_relu<8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8>&)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> backProp<64, 8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8> const&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8> const&, int)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul> const (&) [1], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul>::operator[](unsigned long)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> transpose<4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) const (.170)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> transpose<4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> transpose<4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> transpose<4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul> const (&) [1], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul> const (&) [10], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::operator[](unsigned long)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> matmul<10ul, 1ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> matmul<10ul, 1ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> matmul<10ul, 1ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> matmul<10ul, 1ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> matmul<10ul, 1ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul> matmul<10ul, 1ul, 4ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> const&)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 1ul> transpose<4ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&)' into 'void updateWeightBias<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>::operator[](unsigned long)' into 'void updateWeightBias<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long)' into 'void updateWeightBias<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long) (.268)' into 'void updateWeightBias<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long) const' into 'void updateWeightBias<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'void updateWeightBias<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul> const (&) [1], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [8], unsigned long) (.405)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) const (.163)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul> const (&) [1], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul> const (&) [4], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::operator[](unsigned long)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> matmul<4ul, 1ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) const (.170)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> matmul<4ul, 1ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> matmul<4ul, 1ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> matmul<4ul, 1ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> matmul<4ul, 1ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> matmul<4ul, 1ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> const&)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> transpose<8ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&)' into 'void updateWeightBias<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul> matmul<4ul, 1ul, 8ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 1ul> const&)' into 'void updateWeightBias<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>::operator[](unsigned long)' into 'void updateWeightBias<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long)' into 'void updateWeightBias<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::operator[](unsigned long) (.283)' into 'void updateWeightBias<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4ul>::operator[](unsigned long) const (.170)' into 'void updateWeightBias<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'void updateWeightBias<8, 4>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>, 4>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul> const (&) [1], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul>::operator[](unsigned long)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::_S_ref(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const (&) [64], unsigned long)' into 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::operator[](unsigned long)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long) const (.227)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&)'
remark: ../layer.h:40:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul> const (&) [1], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:186:0: Inlining function 'std::__array_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>::_S_ref(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul> const (&) [8], unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>::operator[](unsigned long)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) const (.163)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::operator[](unsigned long) const' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> const&)'
remark: ../layer.h:62:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::operator[](unsigned long)' into 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul> matmul<8ul, 1ul, 64ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> const&)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 1ul> transpose<64ul, 1ul>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const&)' into 'void updateWeightBias<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>::operator[](unsigned long)' into 'void updateWeightBias<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>::operator[](unsigned long)' into 'void updateWeightBias<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::operator[](unsigned long) (.298)' into 'void updateWeightBias<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8ul>::operator[](unsigned long) const (.163)' into 'void updateWeightBias<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../layer.h:231:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'void updateWeightBias<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::begin()' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::end()' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437ul>::operator[](unsigned long) const' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long) const' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>* std::max_element<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::iterator_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>::difference_type std::distance<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437ul>::operator[](unsigned long) const' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::begin() const' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::end() const' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const* std::max_element<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::iterator_traits<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>::difference_type std::distance<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::operator[](unsigned long)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::operator[](unsigned long) const' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'void updateWeightBias<4, 10>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4>, 10>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 4> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'void updateWeightBias<64, 8>(std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64>, 8>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 8> const&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'int const& std::min<int>(int const&, int const&)' into 'void accelerator<1437>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360ul>::_S_ref(std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul> const (&) [360], unsigned long)' into 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360ul>::operator[](unsigned long) const'
remark: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\array:190:0: Inlining function 'std::__array_traits<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360ul>::_S_ref(std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul> const (&) [360], unsigned long)' into 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360ul>::operator[](unsigned long) const'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::begin()' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 10ul>::end()' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360ul>::operator[](unsigned long) const' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long) const' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long) const' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>::operator[](unsigned long)' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>::operator[](unsigned long)' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>* std::max_element<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*)' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::iterator_traits<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>::difference_type std::distance<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*>(std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>*)' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360ul>::operator[](unsigned long) const' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::begin() const' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::end() const' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const* std::max_element<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../accelerator.h:49:0: Inlining function 'std::iterator_traits<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>::difference_type std::distance<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*>(ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*, ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0> const*)' into 'void accelerator<360>(std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360> const&, std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360> const&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 64ul>, 8ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>, 4ul>&, std::array<std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>, 10ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>&, std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, bool)'
remark: ../top.cpp:21:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 8ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 4ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>::fill(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0> const&)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1797ul>::operator[](unsigned long)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 1437ul>::operator[](unsigned long)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1797ul>::operator[](unsigned long)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 1437ul>::operator[](unsigned long)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 1ul>, 64ul>, 360ul>::operator[](unsigned long)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
remark: ../top.cpp:21:0: Inlining function 'std::array<std::array<ap_fixed<6, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, 10ul>, 360ul>::operator[](unsigned long)' into 'top(ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_fixed<25, 8, (ap_q_mode)5, (ap_o_mode)3, 0>&, int&)'
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:880:7: Could not analyze occurrence information within 'anonymous'(C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:880:7) . Requires loop in simplify form and with single exit.
warning: C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:880:7: Could not analyze occurrence information within 'anonymous'(C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:880:7) . Requires loop in simplify form and with single exit.
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5658:7 
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:880:7 
remark: automatically set the pipeline for Loop< VITIS_LOOP_176_7> at ../accelerator.h:176:31 
remark: automatically set the pipeline for Loop< VITIS_LOOP_71_1> at ../layer.h:71:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_44_1> at ../layer.h:44:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_71_1> at ../layer.h:71:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_235_1> at ../layer.h:235:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_71_1> at ../layer.h:71:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_45_2> at ../layer.h:45:26 
remark: automatically set the pipeline for Loop< VITIS_LOOP_190_1> at ../layer.h:190:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_31_1> at ../activations.h:31:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_208_3> at ../layer.h:208:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_45_2> at ../layer.h:45:26 
remark: automatically set the pipeline for Loop< VITIS_LOOP_190_1> at ../layer.h:190:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_31_1> at ../activations.h:31:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_208_3> at ../layer.h:208:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_120_1> at ../activations.h:120:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_100_1> at ../activations.h:100:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_105_2> at ../activations.h:105:27 
remark: automatically set the pipeline for Loop< VITIS_LOOP_138_3> at ../activations.h:138:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_145_1> at ../layer.h:145:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_145_1> at ../layer.h:145:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_21_1> at ../activations.h:21:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_145_1> at ../layer.h:145:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_21_1> at ../activations.h:21:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_235_1> at ../layer.h:235:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_44_1> at ../layer.h:44:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_235_1> at ../layer.h:235:23 
remark: automatically set the pipeline for Loop< VITIS_LOOP_44_1> at ../layer.h:44:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_104_4> at ../accelerator.h:104:35 
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algo.h:5658:7 
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:880:7 
remark: automatically set the pipeline for Loop< VITIS_LOOP_68_3> at ../accelerator.h:68:34 
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:740:7 
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:740:7 
remark: automatically set the pipeline for Loop< unknown> at C:/Xilinx/Vitis_HLS/2024.1/tps/mingw/8.3.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\8.3.0\include\c++\bits/stl_algobase.h:740:7 
remark: automatically set the pipeline for Loop< VITIS_LOOP_82_1> at ../top.cpp:82:22 
remark: automatically set the pipeline for Loop< VITIS_LOOP_88_2> at ../top.cpp:88:22 
remark: ../layer.h:237:27: Loop 'VITIS_LOOP_237_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:237:27: Loop 'VITIS_LOOP_237_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:72:26: Loop 'VITIS_LOOP_72_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:237:27: Loop 'VITIS_LOOP_237_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:72:26: Loop 'VITIS_LOOP_72_2' is marked as complete unroll implied by the pipeline pragma
remark: ../layer.h:72:26: Loop 'VITIS_LOOP_72_2' is marked as complete unroll implied by the pipeline pragma
remark: ../accelerator.h:49:0: Unrolling loop 'VITIS_LOOP_237_2' (../layer.h:237:27) in function 'accelerator<1437>' completely with a factor of 4
remark: ../accelerator.h:49:0: Unrolling loop 'VITIS_LOOP_237_2' (../layer.h:237:27) in function 'accelerator<1437>' completely with a factor of 64
remark: ../layer.h:62:0: Unrolling loop 'VITIS_LOOP_72_2' (../layer.h:72:26) in function 'matmul<8ul, 1ul, 64ul>' completely with a factor of 64
remark: ../layer.h:231:0: Unrolling loop 'VITIS_LOOP_237_2' (../layer.h:237:27) in function 'updateWeightBias<8, 4>' completely with a factor of 8
remark: ../layer.h:231:0: Unrolling loop 'VITIS_LOOP_72_2' (../layer.h:72:26) in function 'updateWeightBias<8, 4>' completely with a factor of 8
remark: ../layer.h:62:0: Unrolling loop 'VITIS_LOOP_72_2' (../layer.h:72:26) in function 'matmul<10ul, 1ul, 4ul>' completely with a factor of 4
remark: ../top.cpp:67:30: Automatically partitioning small array 'biases_l2' completely based on array size.
remark: <unknown>:0:0: Automatically partitioning small array 'input_T' completely based on array size.
remark: ../accelerator.h:75:22: Automatically partitioning small array 'matrix' completely based on array size.
remark: ../accelerator.h:133:22: Automatically partitioning small array 'd_l2' completely based on array size.
remark: ../accelerator.h:183:18: Automatically partitioning small array 'result_l2' completely based on array size.
remark: <unknown>:0:0: Automatically partitioning small array 'C' completely based on array size.
remark: ../layer.h:189:54: Automatically partitioning small array 'net' completely based on array size.
remark: <unknown>:0:0: Automatically partitioning small array 'output' completely based on array size.
remark: <unknown>:0:0: Automatically partitioning small array 'C' completely based on array size.
remark: ../layer.h:143:55: Automatically partitioning small array 'net' completely based on array size.
remark: ../activations.h:20:45: Automatically partitioning small array 'output' completely based on array size.
remark: ../digits_features.h:1:0: array_partition dim=2 type=cyclic factor=13 variable=digits_features 1 top ../digits_features.h:1:0 digits_features 
remark: ../digits_features.h:1:0: Inferring pragma 'array_partition type=cyclic factor=13 dim=2' for array 'digits_features' due to pipeline pragma
remark: ../activations.h:20:45: array_partition dim=1 type=complete  variable=ref.tmp17 1 forwardPropagation<8, 4> ../activations.h:20:45 ref.tmp17 
remark: ../activations.h:20:45: Inferring pragma 'array_partition type=complete dim=1' for array 'ref.tmp17' due to pipeline pragma
remark: ../activations.h:20:45: array_partition dim=2 type=complete  variable=ref.tmp17 1 forwardPropagation<8, 4> ../activations.h:20:45 ref.tmp17 
remark: ../activations.h:20:45: Inferring pragma 'array_partition type=complete dim=2' for array 'ref.tmp17' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=1 type=complete  variable=d_activation 1 backProp<8, 4, 10> d_activation 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=1' for array 'd_activation' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=d_activation 1 backProp<8, 4, 10> d_activation 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'd_activation' due to pipeline pragma
remark: ../top.cpp:30:43: array_partition dim=2 type=complete  variable=weights_l1 1 top ../top.cpp:30:43 weights_l1 
remark: ../top.cpp:30:43: Inferring pragma 'array_partition type=complete dim=2' for array 'weights_l1' due to pipeline pragma
remark: ../top.cpp:40:45: array_partition dim=2 type=complete  variable=weights_l2 1 top ../top.cpp:40:45 weights_l2 
remark: ../top.cpp:40:45: Inferring pragma 'array_partition type=complete dim=2' for array 'weights_l2' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=input_T 1 updateWeightBias<8, 4> input_T 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'input_T' due to pipeline pragma
remark: ../top.cpp:51:46: array_partition dim=2 type=complete  variable=weights_l3 1 top ../top.cpp:51:46 weights_l3 
remark: ../top.cpp:51:46: Inferring pragma 'array_partition type=complete dim=2' for array 'weights_l3' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=1 type=complete  variable=mid 1 backProp<8, 4, 10> mid 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=1' for array 'mid' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=mid 1 backProp<8, 4, 10> mid 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'mid' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=1 type=complete  variable=mid 1 forwardPropagation<8, 4> mid 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=1' for array 'mid' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=mid 1 forwardPropagation<8, 4> mid 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'mid' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=update_temp_mat 1 updateWeightBias<8, 4> update_temp_mat 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'update_temp_mat' due to pipeline pragma
remark: ../top.cpp:67:30: array_partition dim=1 type=complete  variable=biases_l2 1 top ../top.cpp:67:30 biases_l2 
remark: ../top.cpp:67:30: Inferring pragma 'array_partition type=complete dim=1' for array 'biases_l2' due to pipeline pragma
remark: ../top.cpp:75:63: array_partition dim=2 type=cyclic factor=13 variable=input_train 1 top ../top.cpp:75:63 input_train 
remark: ../top.cpp:75:63: Inferring pragma 'array_partition type=cyclic factor=13 dim=2' for array 'input_train' due to pipeline pragma
remark: ../accelerator.h:75:22: array_partition dim=1 type=complete  variable=result_l2 1 accelerator<1437> ../accelerator.h:75:22 result_l2 
remark: ../accelerator.h:75:22: Inferring pragma 'array_partition type=complete dim=1' for array 'result_l2' due to pipeline pragma
remark: ../accelerator.h:75:22: array_partition dim=2 type=complete  variable=result_l2 1 accelerator<1437> ../accelerator.h:75:22 result_l2 
remark: ../accelerator.h:75:22: Inferring pragma 'array_partition type=complete dim=2' for array 'result_l2' due to pipeline pragma
remark: ../top.cpp:78:62: array_partition dim=2 type=cyclic factor=13 variable=input_test 1 top ../top.cpp:78:62 input_test 
remark: ../top.cpp:78:62: Inferring pragma 'array_partition type=cyclic factor=13 dim=2' for array 'input_test' due to pipeline pragma
remark: ../accelerator.h:133:22: array_partition dim=1 type=complete  variable=d_l2 1 accelerator<1437> ../accelerator.h:133:22 d_l2 
remark: ../accelerator.h:133:22: Inferring pragma 'array_partition type=complete dim=1' for array 'd_l2' due to pipeline pragma
remark: ../accelerator.h:133:22: array_partition dim=2 type=complete  variable=d_l2 1 accelerator<1437> ../accelerator.h:133:22 d_l2 
remark: ../accelerator.h:133:22: Inferring pragma 'array_partition type=complete dim=2' for array 'd_l2' due to pipeline pragma
remark: ../layer.h:143:55: array_partition dim=1 type=complete  variable=net 1 forwardPropagation<8, 4> ../layer.h:143:55 net 
remark: ../layer.h:143:55: Inferring pragma 'array_partition type=complete dim=1' for array 'net' due to pipeline pragma
remark: ../layer.h:143:55: array_partition dim=2 type=complete  variable=net 1 forwardPropagation<8, 4> ../layer.h:143:55 net 
remark: ../layer.h:143:55: Inferring pragma 'array_partition type=complete dim=2' for array 'net' due to pipeline pragma
remark: ../accelerator.h:183:18: array_partition dim=1 type=complete  variable=result_l2124 1 accelerator<360> ../accelerator.h:183:18 result_l2124 
remark: ../accelerator.h:183:18: Inferring pragma 'array_partition type=complete dim=1' for array 'result_l2124' due to pipeline pragma
remark: ../accelerator.h:183:18: array_partition dim=2 type=complete  variable=result_l2124 1 accelerator<360> ../accelerator.h:183:18 result_l2124 
remark: ../accelerator.h:183:18: Inferring pragma 'array_partition type=complete dim=2' for array 'result_l2124' due to pipeline pragma
remark: ../layer.h:189:54: array_partition dim=1 type=complete  variable=net 1 backProp<8, 4, 10> ../layer.h:189:54 net 
remark: ../layer.h:189:54: Inferring pragma 'array_partition type=complete dim=1' for array 'net' due to pipeline pragma
remark: ../layer.h:189:54: array_partition dim=2 type=complete  variable=net 1 backProp<8, 4, 10> ../layer.h:189:54 net 
remark: ../layer.h:189:54: Inferring pragma 'array_partition type=complete dim=2' for array 'net' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=1 type=complete  variable=input_T.i 1 accelerator<1437> input_T.i 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=1' for array 'input_T.i' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=input_T.i 1 accelerator<1437> input_T.i 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'input_T.i' due to pipeline pragma
remark: <unknown>:0:0: array_partition dim=2 type=complete  variable=input_T.i42 1 accelerator<1437> input_T.i42 
remark: <unknown>:0:0: Inferring pragma 'array_partition type=complete dim=2' for array 'input_T.i42' due to pipeline pragma
remark: ../layer.h:233:64: array_partition dim=2 type=complete  variable=update_temp_mat.i 1 accelerator<1437> ../layer.h:233:64 update_temp_mat.i 
remark: ../layer.h:233:64: Inferring pragma 'array_partition type=complete dim=2' for array 'update_temp_mat.i' due to pipeline pragma
remark: ../layer.h:233:64: array_partition dim=2 type=complete  variable=update_temp_mat.i43 1 accelerator<1437> ../layer.h:233:64 update_temp_mat.i43 
remark: ../layer.h:233:64: Inferring pragma 'array_partition type=complete dim=2' for array 'update_temp_mat.i43' due to pipeline pragma
remark: ../digits_features.h:1:0: Applying array_partition to 'digits_features': Cyclic partitioning with factor 13 on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'mid': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../layer.h:143:55: Applying array_partition to 'net': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../activations.h:20:45: Applying array_partition to 'ref.tmp17': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'mid': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../layer.h:189:54: Applying array_partition to 'net': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'd_activation': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'input_T': Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'update_temp_mat': Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'input_T.i42': Complete partitioning on dimension 2.
remark: ../layer.h:233:64: Applying array_partition to 'update_temp_mat.i43': Complete partitioning on dimension 2.
remark: <unknown>:0:0: Applying array_partition to 'input_T.i': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../layer.h:233:64: Applying array_partition to 'update_temp_mat.i': Complete partitioning on dimension 2.
remark: ../accelerator.h:75:22: Applying array_partition to 'result_l2': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../accelerator.h:133:22: Applying array_partition to 'd_l2': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../accelerator.h:183:18: Applying array_partition to 'result_l2124': Complete partitioning on dimension 1. Complete partitioning on dimension 2.
remark: ../top.cpp:30:43: Applying array_partition to 'weights_l1': Complete partitioning on dimension 2.
remark: ../top.cpp:40:45: Applying array_partition to 'weights_l2': Complete partitioning on dimension 2.
remark: ../top.cpp:51:46: Applying array_partition to 'weights_l3': Complete partitioning on dimension 2.
remark: ../top.cpp:67:30: Applying array_partition to 'biases_l2': Complete partitioning on dimension 1.
remark: ../top.cpp:75:63: Applying array_partition to 'input_train': Cyclic partitioning with factor 13 on dimension 2.
remark: ../top.cpp:78:62: Applying array_partition to 'input_test': Cyclic partitioning with factor 13 on dimension 2.
===-------------------------------------------------------------------------===
                         Miscellaneous Ungrouped Timers
===-------------------------------------------------------------------------===

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  30.6250 (100.0%)   0.6094 (100.0%)  31.2344 (100.0%)  32.1026 (100.0%)  Code Generation Time
  30.6250 (100.0%)   0.6094 (100.0%)  31.2344 (100.0%)  32.1026 (100.0%)  Total

===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 31.3125 seconds (32.0854 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  15.0156 ( 48.9%)   0.1406 ( 22.5%)  15.1563 ( 48.4%)  15.2085 ( 47.4%)  Global Variable Optimizer
   6.6563 ( 21.7%)   0.0625 ( 10.0%)   6.7188 ( 21.5%)   6.8244 ( 21.3%)  Inliner for always_inline functions
   0.5781 (  1.9%)   0.0000 (  0.0%)   0.5781 (  1.8%)   0.5823 (  1.8%)  Object Decomposition
   0.3281 (  1.1%)   0.0000 (  0.0%)   0.3281 (  1.0%)   0.3545 (  1.1%)  Combine redundant instructions
   0.3438 (  1.1%)   0.0000 (  0.0%)   0.3438 (  1.1%)   0.3381 (  1.1%)  ReflowCheckPragmaConflicts - check pragma conflicts in reflow
   0.3125 (  1.0%)   0.0000 (  0.0%)   0.3125 (  1.0%)   0.3190 (  1.0%)  Object Decomposition
   0.1250 (  0.4%)   0.1406 ( 22.5%)   0.2656 (  0.8%)   0.2833 (  0.9%)  Auto automatic array partition analysis
   0.2344 (  0.8%)   0.0156 (  2.5%)   0.2500 (  0.8%)   0.2707 (  0.8%)  Generate IR Wrapper
   0.1875 (  0.6%)   0.0469 (  7.5%)   0.2344 (  0.7%)   0.2523 (  0.8%)  Build loop flatten cost model
   0.1875 (  0.6%)   0.0313 (  5.0%)   0.2188 (  0.7%)   0.2166 (  0.7%)  Collect complexity metrics for FE reflow
   0.2188 (  0.7%)   0.0000 (  0.0%)   0.2188 (  0.7%)   0.2166 (  0.7%)  Assign names to anonymous instructions (structure based)
   0.2031 (  0.7%)   0.0000 (  0.0%)   0.2031 (  0.6%)   0.1980 (  0.6%)  Loop Invariant Code Motion
   0.1406 (  0.5%)   0.0156 (  2.5%)   0.1563 (  0.5%)   0.1661 (  0.5%)  Automatic array partition transformation
   0.1250 (  0.4%)   0.0156 (  2.5%)   0.1406 (  0.4%)   0.1606 (  0.5%)  Generate HLS compatible IR
   0.1563 (  0.5%)   0.0000 (  0.0%)   0.1563 (  0.5%)   0.1477 (  0.5%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1443 (  0.4%)  ArrayPartition - Partition Arrays into Banks
   0.1250 (  0.4%)   0.0156 (  2.5%)   0.1406 (  0.4%)   0.1394 (  0.4%)  Infer PPPO for array-to-streams
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1371 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1287 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1275 (  0.4%)  Dead Store Elimination
   0.1094 (  0.4%)   0.0156 (  2.5%)   0.1250 (  0.4%)   0.1250 (  0.4%)  Dead Global Elimination
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1237 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1228 (  0.4%)  Dead Store Elimination
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1221 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1221 (  0.4%)  Dead Store Elimination
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1219 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1219 (  0.4%)  AccessGroup - Group the memory access for the same object
   0.1406 (  0.5%)   0.0000 (  0.0%)   0.1406 (  0.4%)   0.1219 (  0.4%)  Dead Store Elimination
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1215 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1214 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1213 (  0.4%)  Dead Store Elimination
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1209 (  0.4%)  Dead Store Elimination
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1207 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1206 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1206 (  0.4%)  Dead Store Elimination
   0.1094 (  0.4%)   0.0000 (  0.0%)   0.1094 (  0.3%)   0.1205 (  0.4%)  Dead Store Elimination
   0.1250 (  0.4%)   0.0000 (  0.0%)   0.1250 (  0.4%)   0.1200 (  0.4%)  Dead Store Elimination
   0.0938 (  0.3%)   0.0000 (  0.0%)   0.0938 (  0.3%)   0.1115 (  0.3%)  Simple constant propagation
   0.0938 (  0.3%)   0.0000 (  0.0%)   0.0938 (  0.3%)   0.0942 (  0.3%)  Automatic inliner in reflow
   0.0625 (  0.2%)   0.0000 (  0.0%)   0.0625 (  0.2%)   0.0871 (  0.3%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0469 (  0.2%)   0.0313 (  5.0%)   0.0781 (  0.2%)   0.0744 (  0.2%)  PredicateAnalyzer - Predidate Analysis
   0.0781 (  0.3%)   0.0000 (  0.0%)   0.0781 (  0.2%)   0.0729 (  0.2%)  Pragma preprocessing after clang
   0.0625 (  0.2%)   0.0000 (  0.0%)   0.0625 (  0.2%)   0.0656 (  0.2%)  Memory Summary
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0613 (  0.2%)  Dead Global Elimination
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0545 (  0.2%)  Loop Invariant Code Motion
   0.0625 (  0.2%)   0.0000 (  0.0%)   0.0625 (  0.2%)   0.0535 (  0.2%)  Produce message if basic block has too many instructions
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0524 (  0.2%)  Dead Store Elimination
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0521 (  0.2%)  Dead Store Elimination
   0.0781 (  0.3%)   0.0000 (  0.0%)   0.0781 (  0.2%)   0.0520 (  0.2%)  Dead Store Elimination
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0518 (  0.2%)  Dead Store Elimination
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0513 (  0.2%)  Dead Store Elimination
   0.0625 (  0.2%)   0.0000 (  0.0%)   0.0625 (  0.2%)   0.0483 (  0.2%)  Dead Store Elimination
   0.0781 (  0.3%)   0.0000 (  0.0%)   0.0781 (  0.2%)   0.0480 (  0.1%)  Dead Store Elimination
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0460 (  0.1%)  Dead Store Elimination
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0460 (  0.1%)  Dead Store Elimination
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0446 (  0.1%)  Dead Store Elimination
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0438 (  0.1%)  Dead Store Elimination
   0.0625 (  0.2%)   0.0000 (  0.0%)   0.0625 (  0.2%)   0.0397 (  0.1%)  Dominator Tree Construction
   0.0313 (  0.1%)   0.0156 (  2.5%)   0.0469 (  0.1%)   0.0375 (  0.1%)  Dominator Tree Construction
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0355 (  0.1%)  CallGraph Construction
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0349 (  0.1%)  Optimize multiple instructions
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0339 (  0.1%)  Lower HLS related loops
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0333 (  0.1%)  Dead Code Elimination
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0332 (  0.1%)  Lower intermediate type generated by HLSGen
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0316 (  0.1%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0311 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0303 (  0.1%)  Global Value Numbering
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0303 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0270 (  0.1%)  Aggressive Dead Code Elimination
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0265 (  0.1%)  Global Value Numbering
   0.0156 (  0.1%)   0.0156 (  2.5%)   0.0313 (  0.1%)   0.0261 (  0.1%)  ROM inference pass
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0260 (  0.1%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0257 (  0.1%)  Deduce function attributes
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0254 (  0.1%)  Auto automatic array partition analysis
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0252 (  0.1%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0251 (  0.1%)  CallGraph Construction
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0250 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0250 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0250 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0249 (  0.1%)  Lower BINDOP scope bundle
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0246 (  0.1%)  Dead Store Elimination
   0.0469 (  0.2%)   0.0000 (  0.0%)   0.0469 (  0.1%)   0.0245 (  0.1%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0237 (  0.1%)  Auto automatic array partition analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0231 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0229 (  0.1%)  Bitcode for HLS
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0226 (  0.1%)  CallGraph Construction
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0226 (  0.1%)  Auto automatic array partition analysis
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0225 (  0.1%)  CallGraph Construction
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0222 (  0.1%)  CallGraph Construction
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0221 (  0.1%)  CallGraph Construction
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0221 (  0.1%)  CallGraph Construction
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0204 (  0.1%)  Detach IR Wrapper
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0196 (  0.1%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0194 (  0.1%)  MemSSAOpt - Memory SSA based optimizations
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0191 (  0.1%)  Automatic data reuse optimization
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0187 (  0.1%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0185 (  0.1%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0181 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0169 (  0.1%)  Global Value Numbering
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0168 (  0.1%)  Combine redundant instructions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0168 (  0.1%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0161 (  0.1%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0160 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0155 (  0.0%)  Loop Load Elimination
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0153 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0144 (  0.0%)  Lower fence group
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0136 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0132 (  0.0%)  dump pragma info via xml format
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0129 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0128 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0127 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0126 (  0.0%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0123 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0122 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0122 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0122 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0121 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0121 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0121 (  0.0%)  AlignMemory - Align memory accesses
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0119 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0118 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0116 (  0.0%)  WidenBurst - Widen bursts
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0112 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0111 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0107 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0107 (  0.0%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0105 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0104 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0104 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0103 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0101 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0099 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0099 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0098 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0093 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0093 (  0.0%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0093 (  0.0%)  Merge accesses in the same region
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0092 (  0.0%)  clean some traps produced by clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0092 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0092 (  0.0%)  Change xcl attribute to call sideeffect
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0091 (  0.0%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0088 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0087 (  0.0%)  Memory Summary
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0087 (  0.0%)  Dump HBM driver helper code
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0086 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0083 (  0.0%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0083 (  0.0%)  Induction Variable Simplification
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0082 (  0.0%)  Memory Summary
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0082 (  0.0%)  Analyze sequential accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0081 (  0.0%)  Reflow pragma unroll loops
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0081 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0080 (  0.0%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0079 (  0.0%)  AlignMemory - Align memory accesses
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0078 (  0.0%)  AlignMemory - Align memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0077 (  0.0%)  Promote Memory to Register
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0074 (  0.0%)  Deduce function attributes
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0074 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0074 (  0.0%)  Memory Summary
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0070 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0069 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0068 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0065 (  0.0%)  Loop Invariant Code Motion
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0065 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0065 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0063 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0062 (  0.0%)  Loop Invariant Code Motion
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0061 (  0.0%)  Global Value Numbering
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0061 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0059 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0059 (  0.0%)  Global Value Numbering
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0058 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0056 (  0.0%)  Induction Variable Simplification
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0056 (  0.0%)  Induction Variable Simplification
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0055 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0055 (  0.0%)  Inliner for always_inline functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0054 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0054 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0053 (  0.0%)  InferXCLAttributes - Infer XCL attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0052 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)  Induction Variable Simplification
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0048 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0047 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)  ROM inference pass
   0.0000 (  0.0%)   0.0156 (  2.5%)   0.0156 (  0.0%)   0.0045 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0041 (  0.0%)  Recursively inline barriers caller to kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.0%)  Infer direct input/output accesses
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0039 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)  Produce message if basic block has too many instructions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0038 (  0.0%)  Loop Invariant Code Motion
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0038 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)  Memory Summary
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)  Lower HLS related attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Deduce function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)  Internalize Global Symbols
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)  Reflow pipeline loop automatically
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)  Combine redundant instructions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0027 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)  Rotate Loops
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0026 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.0%)  Simplify the CFG
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0026 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0026 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Merge accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Print module to file
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Deduce function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Inline sub function calls recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)  Combine redundant instructions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0023 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Early GVN Hoisting of Expressions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0022 (  0.0%)  Early GVN Hoisting of Expressions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0022 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Merge accesses in the same region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Collect complexity metrics for FE reflow
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0020 (  0.0%)   automatic function inline driven by performance to break up circuit dependence
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)  Synthesis checker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Automatically infer occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)  Value Propagation
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0018 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Value Propagation
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0017 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Lower directive scopes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)  Transform SSA value on top function to variable with pointer type
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)  do loop unroll according tripcount threshold config
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0015 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Combine redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0014 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Infer loop trip count
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Dead Instruction Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Pragma preprocessing after clang
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Synthesis checker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Memory SSA
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Collect complexity metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Value Propagation
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0012 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Reflow pragma unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Preprocessing before loop rotation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Interleave memory accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Remove redundant instructions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0009 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Optimize multiple instructions
   0.0313 (  0.1%)   0.0000 (  0.0%)   0.0313 (  0.1%)   0.0009 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)  Optimize multiple instructions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0008 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0008 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Straight line strength reduction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  AttrPropagation - Propagate Pointer Parameter Attribute
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simple constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Lower black box
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Unswitch loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Extract dataflow loop
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Memory SSA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Lower printf for the fpga target
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   automatic parallel and pipeline insertion based performance constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Array out of bound check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dead Code Elimination
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer PPPO for array-to-streams
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Structure stription
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  InterfaceEncodingChange - Change Interface Encoding format
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Lower tasks into dataflow form
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Global Variable Optimizer
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Remove redundant instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  RemoveConflictingBurst - Remove port conflicting bursts
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0156 (  2.5%)   0.0156 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Disaggregation preprocessing
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  DefaultInterfaceBuilderNew - Build Default Top Interface
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  InferXCLAttrImplications - Infer XCL attribute implications
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Disaggregation preprocessing
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  demangle Name to normal Name
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Divergence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  verify cache pragmas
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dataflow Process Duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Promote 'by reference' arguments to scalars
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Auto automatic array partition filter analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Special handling of axis with side-channels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Array abnormal access check
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Unify function exit nodes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Resolve full load/store
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Predicate SPIR Kernels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Build Synchronization Regions in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Shrink Synchronization Regions in SPMD program to reduce CFG complexity
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0156 (  2.5%)   0.0156 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalarize vector operations
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0156 (  2.5%)   0.0156 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection for FIFO
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  AccessGroup - Group the memory access for the same object
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Stream object marker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Reduce the height of tree
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ProduceBurstMessages - Produce Burst Messages
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ReflowCheckVarPragmaConflicts - check variable pragma conflicts in reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Infer set function attributes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0001 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LegalizeName - Check interface name in terms of HDL syntax
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0156 (  0.1%)   0.0000 (  0.0%)   0.0156 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Normalize loop index
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Reflow auto unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Loop Access Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer workgroup size for opencl Kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  DeSPMD - Insert barriers into uniform loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Generate Loops to iterate over workitems
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SeqAccessesInference - Infer Sequential accesses for HLS C/C++
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  top function attribute attaching
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  InterfaceCheck - Check Interface
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Struct object aggregation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Expand private memory for each workitem in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Analyze occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ArrayReshape - Reshape Arrays into Wider Arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Vectorize the SPMD regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  normalize array partition result to reduce redundant sub array arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Extract occurrence region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower memory intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Critical Path Aanlysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower llvm.assume to _ssdm_AssertFail
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ArrayPartition - Partition Arrays into Banks
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Performance Evaluation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Struct object aggregation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delinearization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Outline pipeline stages
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Array Access Range Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Evaluate _ssdm_string2bits
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Assumption Cache Tracker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Structure Decomposition
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Collect basic metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Profile summary info
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Transform Information
  30.6875 (100.0%)   0.6250 (100.0%)  31.3125 (100.0%)  32.0854 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.4375 seconds (0.5170 wall clock)

   ---User Time---   --User+System--   ---Wall Time---  --- Name ---
   0.4375 (100.0%)   0.4375 (100.0%)   0.5170 (100.0%)  Parse IR
   0.4375 (100.0%)   0.4375 (100.0%)   0.5170 (100.0%)  Total

===-------------------------------------------------------------------------===
                          Clang front-end time report
===-------------------------------------------------------------------------===
  Total Execution Time: 31.6719 seconds (32.6220 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  31.0625 (100.0%)   0.6094 (100.0%)  31.6719 (100.0%)  32.6220 (100.0%)  Clang front-end timer
  31.0625 (100.0%)   0.6094 (100.0%)  31.6719 (100.0%)  32.6220 (100.0%)  Total

