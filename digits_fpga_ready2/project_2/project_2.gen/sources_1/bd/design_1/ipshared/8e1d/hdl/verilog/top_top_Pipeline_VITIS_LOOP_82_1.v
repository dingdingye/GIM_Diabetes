// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_VITIS_LOOP_82_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_train_0_address0,
        input_train_0_ce0,
        input_train_0_we0,
        input_train_0_d0,
        input_train_0_address1,
        input_train_0_ce1,
        input_train_0_we1,
        input_train_0_d1,
        input_train_0_1_address0,
        input_train_0_1_ce0,
        input_train_0_1_we0,
        input_train_0_1_d0,
        input_train_0_1_address1,
        input_train_0_1_ce1,
        input_train_0_1_we1,
        input_train_0_1_d1,
        input_train_0_2_address0,
        input_train_0_2_ce0,
        input_train_0_2_we0,
        input_train_0_2_d0,
        input_train_0_2_address1,
        input_train_0_2_ce1,
        input_train_0_2_we1,
        input_train_0_2_d1,
        input_train_0_3_address0,
        input_train_0_3_ce0,
        input_train_0_3_we0,
        input_train_0_3_d0,
        input_train_0_3_address1,
        input_train_0_3_ce1,
        input_train_0_3_we1,
        input_train_0_3_d1,
        input_train_0_4_address0,
        input_train_0_4_ce0,
        input_train_0_4_we0,
        input_train_0_4_d0,
        input_train_0_4_address1,
        input_train_0_4_ce1,
        input_train_0_4_we1,
        input_train_0_4_d1,
        input_train_0_5_address0,
        input_train_0_5_ce0,
        input_train_0_5_we0,
        input_train_0_5_d0,
        input_train_0_5_address1,
        input_train_0_5_ce1,
        input_train_0_5_we1,
        input_train_0_5_d1,
        input_train_0_6_address0,
        input_train_0_6_ce0,
        input_train_0_6_we0,
        input_train_0_6_d0,
        input_train_0_6_address1,
        input_train_0_6_ce1,
        input_train_0_6_we1,
        input_train_0_6_d1,
        input_train_0_7_address0,
        input_train_0_7_ce0,
        input_train_0_7_we0,
        input_train_0_7_d0,
        input_train_0_7_address1,
        input_train_0_7_ce1,
        input_train_0_7_we1,
        input_train_0_7_d1,
        input_train_0_8_address0,
        input_train_0_8_ce0,
        input_train_0_8_we0,
        input_train_0_8_d0,
        input_train_0_8_address1,
        input_train_0_8_ce1,
        input_train_0_8_we1,
        input_train_0_8_d1,
        input_train_0_9_address0,
        input_train_0_9_ce0,
        input_train_0_9_we0,
        input_train_0_9_d0,
        input_train_0_9_address1,
        input_train_0_9_ce1,
        input_train_0_9_we1,
        input_train_0_9_d1,
        input_train_0_10_address0,
        input_train_0_10_ce0,
        input_train_0_10_we0,
        input_train_0_10_d0,
        input_train_0_10_address1,
        input_train_0_10_ce1,
        input_train_0_10_we1,
        input_train_0_10_d1,
        input_train_0_11_address0,
        input_train_0_11_ce0,
        input_train_0_11_we0,
        input_train_0_11_d0,
        input_train_0_11_address1,
        input_train_0_11_ce1,
        input_train_0_11_we1,
        input_train_0_11_d1,
        input_train_0_12_address0,
        input_train_0_12_ce0,
        input_train_0_12_we0,
        input_train_0_12_d0,
        input_train_0_12_address1,
        input_train_0_12_ce1,
        input_train_0_12_we1,
        input_train_0_12_d1,
        y_train_address0,
        y_train_ce0,
        y_train_we0,
        y_train_d0,
        y_train_address1,
        y_train_ce1,
        y_train_we1,
        y_train_d1,
        digits_features_1_0_0_address0,
        digits_features_1_0_0_ce0,
        digits_features_1_0_0_q0,
        digits_features_2_0_0_address0,
        digits_features_2_0_0_ce0,
        digits_features_2_0_0_q0,
        digits_features_3_0_0_address0,
        digits_features_3_0_0_ce0,
        digits_features_3_0_0_q0,
        digits_features_4_0_0_address0,
        digits_features_4_0_0_ce0,
        digits_features_4_0_0_q0,
        digits_features_5_0_0_address0,
        digits_features_5_0_0_ce0,
        digits_features_5_0_0_q0,
        digits_features_6_0_0_address0,
        digits_features_6_0_0_ce0,
        digits_features_6_0_0_q0,
        digits_features_7_0_0_address0,
        digits_features_7_0_0_ce0,
        digits_features_7_0_0_q0,
        digits_features_8_0_0_address0,
        digits_features_8_0_0_ce0,
        digits_features_8_0_0_q0,
        digits_features_9_0_0_address0,
        digits_features_9_0_0_ce0,
        digits_features_9_0_0_q0,
        digits_features_10_0_0_address0,
        digits_features_10_0_0_ce0,
        digits_features_10_0_0_q0,
        digits_features_11_0_0_address0,
        digits_features_11_0_0_ce0,
        digits_features_11_0_0_q0,
        digits_features_12_0_0_address0,
        digits_features_12_0_0_ce0,
        digits_features_12_0_0_q0,
        digits_features_0_1_0_address0,
        digits_features_0_1_0_ce0,
        digits_features_0_1_0_q0,
        digits_features_1_1_0_address0,
        digits_features_1_1_0_ce0,
        digits_features_1_1_0_q0,
        digits_features_2_1_0_address0,
        digits_features_2_1_0_ce0,
        digits_features_2_1_0_q0,
        digits_features_3_1_0_address0,
        digits_features_3_1_0_ce0,
        digits_features_3_1_0_q0,
        digits_features_4_1_0_address0,
        digits_features_4_1_0_ce0,
        digits_features_4_1_0_q0,
        digits_features_5_1_0_address0,
        digits_features_5_1_0_ce0,
        digits_features_5_1_0_q0,
        digits_features_6_1_0_address0,
        digits_features_6_1_0_ce0,
        digits_features_6_1_0_q0,
        digits_features_7_1_0_address0,
        digits_features_7_1_0_ce0,
        digits_features_7_1_0_q0,
        digits_features_8_1_0_address0,
        digits_features_8_1_0_ce0,
        digits_features_8_1_0_q0,
        digits_features_9_1_0_address0,
        digits_features_9_1_0_ce0,
        digits_features_9_1_0_q0,
        digits_features_10_1_0_address0,
        digits_features_10_1_0_ce0,
        digits_features_10_1_0_q0,
        digits_features_11_1_0_address0,
        digits_features_11_1_0_ce0,
        digits_features_11_1_0_q0,
        digits_features_12_1_0_address0,
        digits_features_12_1_0_ce0,
        digits_features_12_1_0_q0,
        digits_features_0_2_0_address0,
        digits_features_0_2_0_ce0,
        digits_features_0_2_0_q0,
        digits_features_1_2_0_address0,
        digits_features_1_2_0_ce0,
        digits_features_1_2_0_q0,
        digits_features_2_2_0_address0,
        digits_features_2_2_0_ce0,
        digits_features_2_2_0_q0,
        digits_features_3_2_0_address0,
        digits_features_3_2_0_ce0,
        digits_features_3_2_0_q0,
        digits_features_4_2_0_address0,
        digits_features_4_2_0_ce0,
        digits_features_4_2_0_q0,
        digits_features_5_2_0_address0,
        digits_features_5_2_0_ce0,
        digits_features_5_2_0_q0,
        digits_features_7_2_0_address0,
        digits_features_7_2_0_ce0,
        digits_features_7_2_0_q0,
        digits_features_8_2_0_address0,
        digits_features_8_2_0_ce0,
        digits_features_8_2_0_q0,
        digits_features_9_2_0_address0,
        digits_features_9_2_0_ce0,
        digits_features_9_2_0_q0,
        digits_features_10_2_0_address0,
        digits_features_10_2_0_ce0,
        digits_features_10_2_0_q0,
        digits_features_11_2_0_address0,
        digits_features_11_2_0_ce0,
        digits_features_11_2_0_q0,
        digits_features_12_2_0_address0,
        digits_features_12_2_0_ce0,
        digits_features_12_2_0_q0,
        digits_features_1_3_0_address0,
        digits_features_1_3_0_ce0,
        digits_features_1_3_0_q0,
        digits_features_2_3_0_address0,
        digits_features_2_3_0_ce0,
        digits_features_2_3_0_q0,
        digits_features_3_3_0_address0,
        digits_features_3_3_0_ce0,
        digits_features_3_3_0_q0,
        digits_features_4_3_0_address0,
        digits_features_4_3_0_ce0,
        digits_features_4_3_0_q0,
        digits_features_5_3_0_address0,
        digits_features_5_3_0_ce0,
        digits_features_5_3_0_q0,
        digits_features_6_3_0_address0,
        digits_features_6_3_0_ce0,
        digits_features_6_3_0_q0,
        digits_features_7_3_0_address0,
        digits_features_7_3_0_ce0,
        digits_features_7_3_0_q0,
        digits_features_8_3_0_address0,
        digits_features_8_3_0_ce0,
        digits_features_8_3_0_q0,
        digits_features_9_3_0_address0,
        digits_features_9_3_0_ce0,
        digits_features_9_3_0_q0,
        digits_features_10_3_0_address0,
        digits_features_10_3_0_ce0,
        digits_features_10_3_0_q0,
        digits_features_11_3_0_address0,
        digits_features_11_3_0_ce0,
        digits_features_11_3_0_q0,
        digits_features_12_3_0_address0,
        digits_features_12_3_0_ce0,
        digits_features_12_3_0_q0,
        digits_features_0_4_0_address0,
        digits_features_0_4_0_ce0,
        digits_features_0_4_0_q0,
        digits_features_1_4_0_address0,
        digits_features_1_4_0_ce0,
        digits_features_1_4_0_q0,
        digits_features_2_4_0_address0,
        digits_features_2_4_0_ce0,
        digits_features_2_4_0_q0,
        digits_features_3_4_0_address0,
        digits_features_3_4_0_ce0,
        digits_features_3_4_0_q0,
        digits_features_4_4_0_address0,
        digits_features_4_4_0_ce0,
        digits_features_4_4_0_q0,
        digits_features_5_4_0_address0,
        digits_features_5_4_0_ce0,
        digits_features_5_4_0_q0,
        digits_features_6_4_0_address0,
        digits_features_6_4_0_ce0,
        digits_features_6_4_0_q0,
        digits_features_7_4_0_address0,
        digits_features_7_4_0_ce0,
        digits_features_7_4_0_q0,
        digits_features_8_4_0_address0,
        digits_features_8_4_0_ce0,
        digits_features_8_4_0_q0,
        digits_features_9_4_0_address0,
        digits_features_9_4_0_ce0,
        digits_features_9_4_0_q0,
        digits_features_10_4_0_address0,
        digits_features_10_4_0_ce0,
        digits_features_10_4_0_q0,
        digits_features_11_4_0_address0,
        digits_features_11_4_0_ce0,
        digits_features_11_4_0_q0,
        digits_labels_0_address0,
        digits_labels_0_ce0,
        digits_labels_0_q0,
        digits_labels_1_address0,
        digits_labels_1_ce0,
        digits_labels_1_q0,
        digits_labels_2_address0,
        digits_labels_2_ce0,
        digits_labels_2_q0,
        digits_labels_3_address0,
        digits_labels_3_ce0,
        digits_labels_3_q0,
        digits_labels_4_address0,
        digits_labels_4_ce0,
        digits_labels_4_q0,
        digits_labels_5_address0,
        digits_labels_5_ce0,
        digits_labels_5_q0,
        digits_labels_6_address0,
        digits_labels_6_ce0,
        digits_labels_6_q0,
        digits_labels_7_address0,
        digits_labels_7_ce0,
        digits_labels_7_q0,
        digits_labels_8_address0,
        digits_labels_8_ce0,
        digits_labels_8_q0,
        digits_labels_9_address0,
        digits_labels_9_ce0,
        digits_labels_9_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_train_0_address0;
output   input_train_0_ce0;
output   input_train_0_we0;
output  [4:0] input_train_0_d0;
output  [12:0] input_train_0_address1;
output   input_train_0_ce1;
output   input_train_0_we1;
output  [4:0] input_train_0_d1;
output  [12:0] input_train_0_1_address0;
output   input_train_0_1_ce0;
output   input_train_0_1_we0;
output  [4:0] input_train_0_1_d0;
output  [12:0] input_train_0_1_address1;
output   input_train_0_1_ce1;
output   input_train_0_1_we1;
output  [4:0] input_train_0_1_d1;
output  [12:0] input_train_0_2_address0;
output   input_train_0_2_ce0;
output   input_train_0_2_we0;
output  [4:0] input_train_0_2_d0;
output  [12:0] input_train_0_2_address1;
output   input_train_0_2_ce1;
output   input_train_0_2_we1;
output  [4:0] input_train_0_2_d1;
output  [12:0] input_train_0_3_address0;
output   input_train_0_3_ce0;
output   input_train_0_3_we0;
output  [4:0] input_train_0_3_d0;
output  [12:0] input_train_0_3_address1;
output   input_train_0_3_ce1;
output   input_train_0_3_we1;
output  [4:0] input_train_0_3_d1;
output  [12:0] input_train_0_4_address0;
output   input_train_0_4_ce0;
output   input_train_0_4_we0;
output  [4:0] input_train_0_4_d0;
output  [12:0] input_train_0_4_address1;
output   input_train_0_4_ce1;
output   input_train_0_4_we1;
output  [4:0] input_train_0_4_d1;
output  [12:0] input_train_0_5_address0;
output   input_train_0_5_ce0;
output   input_train_0_5_we0;
output  [4:0] input_train_0_5_d0;
output  [12:0] input_train_0_5_address1;
output   input_train_0_5_ce1;
output   input_train_0_5_we1;
output  [4:0] input_train_0_5_d1;
output  [12:0] input_train_0_6_address0;
output   input_train_0_6_ce0;
output   input_train_0_6_we0;
output  [4:0] input_train_0_6_d0;
output  [12:0] input_train_0_6_address1;
output   input_train_0_6_ce1;
output   input_train_0_6_we1;
output  [4:0] input_train_0_6_d1;
output  [12:0] input_train_0_7_address0;
output   input_train_0_7_ce0;
output   input_train_0_7_we0;
output  [4:0] input_train_0_7_d0;
output  [12:0] input_train_0_7_address1;
output   input_train_0_7_ce1;
output   input_train_0_7_we1;
output  [4:0] input_train_0_7_d1;
output  [12:0] input_train_0_8_address0;
output   input_train_0_8_ce0;
output   input_train_0_8_we0;
output  [4:0] input_train_0_8_d0;
output  [12:0] input_train_0_8_address1;
output   input_train_0_8_ce1;
output   input_train_0_8_we1;
output  [4:0] input_train_0_8_d1;
output  [12:0] input_train_0_9_address0;
output   input_train_0_9_ce0;
output   input_train_0_9_we0;
output  [4:0] input_train_0_9_d0;
output  [12:0] input_train_0_9_address1;
output   input_train_0_9_ce1;
output   input_train_0_9_we1;
output  [4:0] input_train_0_9_d1;
output  [12:0] input_train_0_10_address0;
output   input_train_0_10_ce0;
output   input_train_0_10_we0;
output  [4:0] input_train_0_10_d0;
output  [12:0] input_train_0_10_address1;
output   input_train_0_10_ce1;
output   input_train_0_10_we1;
output  [4:0] input_train_0_10_d1;
output  [12:0] input_train_0_11_address0;
output   input_train_0_11_ce0;
output   input_train_0_11_we0;
output  [4:0] input_train_0_11_d0;
output  [12:0] input_train_0_11_address1;
output   input_train_0_11_ce1;
output   input_train_0_11_we1;
output  [4:0] input_train_0_11_d1;
output  [12:0] input_train_0_12_address0;
output   input_train_0_12_ce0;
output   input_train_0_12_we0;
output  [4:0] input_train_0_12_d0;
output  [12:0] input_train_0_12_address1;
output   input_train_0_12_ce1;
output   input_train_0_12_we1;
output  [4:0] input_train_0_12_d1;
output  [13:0] y_train_address0;
output   y_train_ce0;
output   y_train_we0;
output  [0:0] y_train_d0;
output  [13:0] y_train_address1;
output   y_train_ce1;
output   y_train_we1;
output  [0:0] y_train_d1;
output  [10:0] digits_features_1_0_0_address0;
output   digits_features_1_0_0_ce0;
input  [3:0] digits_features_1_0_0_q0;
output  [10:0] digits_features_2_0_0_address0;
output   digits_features_2_0_0_ce0;
input  [4:0] digits_features_2_0_0_q0;
output  [10:0] digits_features_3_0_0_address0;
output   digits_features_3_0_0_ce0;
input  [4:0] digits_features_3_0_0_q0;
output  [10:0] digits_features_4_0_0_address0;
output   digits_features_4_0_0_ce0;
input  [4:0] digits_features_4_0_0_q0;
output  [10:0] digits_features_5_0_0_address0;
output   digits_features_5_0_0_ce0;
input  [4:0] digits_features_5_0_0_q0;
output  [10:0] digits_features_6_0_0_address0;
output   digits_features_6_0_0_ce0;
input  [4:0] digits_features_6_0_0_q0;
output  [10:0] digits_features_7_0_0_address0;
output   digits_features_7_0_0_ce0;
input  [3:0] digits_features_7_0_0_q0;
output  [10:0] digits_features_8_0_0_address0;
output   digits_features_8_0_0_ce0;
input  [1:0] digits_features_8_0_0_q0;
output  [10:0] digits_features_9_0_0_address0;
output   digits_features_9_0_0_ce0;
input  [4:0] digits_features_9_0_0_q0;
output  [10:0] digits_features_10_0_0_address0;
output   digits_features_10_0_0_ce0;
input  [4:0] digits_features_10_0_0_q0;
output  [10:0] digits_features_11_0_0_address0;
output   digits_features_11_0_0_ce0;
input  [4:0] digits_features_11_0_0_q0;
output  [10:0] digits_features_12_0_0_address0;
output   digits_features_12_0_0_ce0;
input  [4:0] digits_features_12_0_0_q0;
output  [10:0] digits_features_0_1_0_address0;
output   digits_features_0_1_0_ce0;
input  [4:0] digits_features_0_1_0_q0;
output  [10:0] digits_features_1_1_0_address0;
output   digits_features_1_1_0_ce0;
input  [4:0] digits_features_1_1_0_q0;
output  [10:0] digits_features_2_1_0_address0;
output   digits_features_2_1_0_ce0;
input  [3:0] digits_features_2_1_0_q0;
output  [10:0] digits_features_3_1_0_address0;
output   digits_features_3_1_0_ce0;
input  [1:0] digits_features_3_1_0_q0;
output  [10:0] digits_features_4_1_0_address0;
output   digits_features_4_1_0_ce0;
input  [4:0] digits_features_4_1_0_q0;
output  [10:0] digits_features_5_1_0_address0;
output   digits_features_5_1_0_ce0;
input  [4:0] digits_features_5_1_0_q0;
output  [10:0] digits_features_6_1_0_address0;
output   digits_features_6_1_0_ce0;
input  [4:0] digits_features_6_1_0_q0;
output  [10:0] digits_features_7_1_0_address0;
output   digits_features_7_1_0_ce0;
input  [4:0] digits_features_7_1_0_q0;
output  [10:0] digits_features_8_1_0_address0;
output   digits_features_8_1_0_ce0;
input  [4:0] digits_features_8_1_0_q0;
output  [10:0] digits_features_9_1_0_address0;
output   digits_features_9_1_0_ce0;
input  [4:0] digits_features_9_1_0_q0;
output  [10:0] digits_features_10_1_0_address0;
output   digits_features_10_1_0_ce0;
input  [3:0] digits_features_10_1_0_q0;
output  [10:0] digits_features_11_1_0_address0;
output   digits_features_11_1_0_ce0;
input  [0:0] digits_features_11_1_0_q0;
output  [10:0] digits_features_12_1_0_address0;
output   digits_features_12_1_0_ce0;
input  [3:0] digits_features_12_1_0_q0;
output  [10:0] digits_features_0_2_0_address0;
output   digits_features_0_2_0_ce0;
input  [4:0] digits_features_0_2_0_q0;
output  [10:0] digits_features_1_2_0_address0;
output   digits_features_1_2_0_ce0;
input  [4:0] digits_features_1_2_0_q0;
output  [10:0] digits_features_2_2_0_address0;
output   digits_features_2_2_0_ce0;
input  [4:0] digits_features_2_2_0_q0;
output  [10:0] digits_features_3_2_0_address0;
output   digits_features_3_2_0_ce0;
input  [4:0] digits_features_3_2_0_q0;
output  [10:0] digits_features_4_2_0_address0;
output   digits_features_4_2_0_ce0;
input  [3:0] digits_features_4_2_0_q0;
output  [10:0] digits_features_5_2_0_address0;
output   digits_features_5_2_0_ce0;
input  [0:0] digits_features_5_2_0_q0;
output  [10:0] digits_features_7_2_0_address0;
output   digits_features_7_2_0_ce0;
input  [3:0] digits_features_7_2_0_q0;
output  [10:0] digits_features_8_2_0_address0;
output   digits_features_8_2_0_ce0;
input  [4:0] digits_features_8_2_0_q0;
output  [10:0] digits_features_9_2_0_address0;
output   digits_features_9_2_0_ce0;
input  [4:0] digits_features_9_2_0_q0;
output  [10:0] digits_features_10_2_0_address0;
output   digits_features_10_2_0_ce0;
input  [4:0] digits_features_10_2_0_q0;
output  [10:0] digits_features_11_2_0_address0;
output   digits_features_11_2_0_ce0;
input  [4:0] digits_features_11_2_0_q0;
output  [10:0] digits_features_12_2_0_address0;
output   digits_features_12_2_0_ce0;
input  [3:0] digits_features_12_2_0_q0;
output  [10:0] digits_features_1_3_0_address0;
output   digits_features_1_3_0_ce0;
input  [2:0] digits_features_1_3_0_q0;
output  [10:0] digits_features_2_3_0_address0;
output   digits_features_2_3_0_ce0;
input  [4:0] digits_features_2_3_0_q0;
output  [10:0] digits_features_3_3_0_address0;
output   digits_features_3_3_0_ce0;
input  [4:0] digits_features_3_3_0_q0;
output  [10:0] digits_features_4_3_0_address0;
output   digits_features_4_3_0_ce0;
input  [4:0] digits_features_4_3_0_q0;
output  [10:0] digits_features_5_3_0_address0;
output   digits_features_5_3_0_ce0;
input  [4:0] digits_features_5_3_0_q0;
output  [10:0] digits_features_6_3_0_address0;
output   digits_features_6_3_0_ce0;
input  [4:0] digits_features_6_3_0_q0;
output  [10:0] digits_features_7_3_0_address0;
output   digits_features_7_3_0_ce0;
input  [4:0] digits_features_7_3_0_q0;
output  [10:0] digits_features_8_3_0_address0;
output   digits_features_8_3_0_ce0;
input  [2:0] digits_features_8_3_0_q0;
output  [10:0] digits_features_9_3_0_address0;
output   digits_features_9_3_0_ce0;
input  [3:0] digits_features_9_3_0_q0;
output  [10:0] digits_features_10_3_0_address0;
output   digits_features_10_3_0_ce0;
input  [4:0] digits_features_10_3_0_q0;
output  [10:0] digits_features_11_3_0_address0;
output   digits_features_11_3_0_ce0;
input  [4:0] digits_features_11_3_0_q0;
output  [10:0] digits_features_12_3_0_address0;
output   digits_features_12_3_0_ce0;
input  [4:0] digits_features_12_3_0_q0;
output  [10:0] digits_features_0_4_0_address0;
output   digits_features_0_4_0_ce0;
input  [4:0] digits_features_0_4_0_q0;
output  [10:0] digits_features_1_4_0_address0;
output   digits_features_1_4_0_ce0;
input  [4:0] digits_features_1_4_0_q0;
output  [10:0] digits_features_2_4_0_address0;
output   digits_features_2_4_0_ce0;
input  [4:0] digits_features_2_4_0_q0;
output  [10:0] digits_features_3_4_0_address0;
output   digits_features_3_4_0_ce0;
input  [3:0] digits_features_3_4_0_q0;
output  [10:0] digits_features_4_4_0_address0;
output   digits_features_4_4_0_ce0;
input  [0:0] digits_features_4_4_0_q0;
output  [10:0] digits_features_5_4_0_address0;
output   digits_features_5_4_0_ce0;
input  [3:0] digits_features_5_4_0_q0;
output  [10:0] digits_features_6_4_0_address0;
output   digits_features_6_4_0_ce0;
input  [4:0] digits_features_6_4_0_q0;
output  [10:0] digits_features_7_4_0_address0;
output   digits_features_7_4_0_ce0;
input  [4:0] digits_features_7_4_0_q0;
output  [10:0] digits_features_8_4_0_address0;
output   digits_features_8_4_0_ce0;
input  [4:0] digits_features_8_4_0_q0;
output  [10:0] digits_features_9_4_0_address0;
output   digits_features_9_4_0_ce0;
input  [4:0] digits_features_9_4_0_q0;
output  [10:0] digits_features_10_4_0_address0;
output   digits_features_10_4_0_ce0;
input  [4:0] digits_features_10_4_0_q0;
output  [10:0] digits_features_11_4_0_address0;
output   digits_features_11_4_0_ce0;
input  [4:0] digits_features_11_4_0_q0;
output  [10:0] digits_labels_0_address0;
output   digits_labels_0_ce0;
input  [0:0] digits_labels_0_q0;
output  [10:0] digits_labels_1_address0;
output   digits_labels_1_ce0;
input  [0:0] digits_labels_1_q0;
output  [10:0] digits_labels_2_address0;
output   digits_labels_2_ce0;
input  [0:0] digits_labels_2_q0;
output  [10:0] digits_labels_3_address0;
output   digits_labels_3_ce0;
input  [0:0] digits_labels_3_q0;
output  [10:0] digits_labels_4_address0;
output   digits_labels_4_ce0;
input  [0:0] digits_labels_4_q0;
output  [10:0] digits_labels_5_address0;
output   digits_labels_5_ce0;
input  [0:0] digits_labels_5_q0;
output  [10:0] digits_labels_6_address0;
output   digits_labels_6_ce0;
input  [0:0] digits_labels_6_q0;
output  [10:0] digits_labels_7_address0;
output   digits_labels_7_ce0;
input  [0:0] digits_labels_7_q0;
output  [10:0] digits_labels_8_address0;
output   digits_labels_8_ce0;
input  [0:0] digits_labels_8_q0;
output  [10:0] digits_labels_9_address0;
output   digits_labels_9_ce0;
input  [0:0] digits_labels_9_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln82_fu_1918_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_subdone;
reg   [10:0] i_6_reg_2323;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln82_reg_2329;
wire   [63:0] zext_ln83_20_fu_2027_p1;
reg   [63:0] zext_ln83_20_reg_2333;
wire   [12:0] trunc_ln83_fu_2032_p1;
reg   [12:0] trunc_ln83_reg_2349;
wire   [63:0] zext_ln83_22_fu_2042_p1;
reg   [63:0] zext_ln83_22_reg_2355;
wire   [63:0] zext_ln83_23_fu_2053_p1;
reg   [63:0] zext_ln83_23_reg_2371;
reg   [4:0] digits_features_1_2_0_load_reg_2742;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [4:0] digits_features_2_2_0_load_reg_2747;
reg   [4:0] digits_features_3_2_0_load_reg_2752;
reg   [3:0] digits_features_4_2_0_load_reg_2757;
reg   [0:0] digits_features_5_2_0_load_reg_2762;
reg   [3:0] digits_features_7_2_0_load_reg_2767;
reg   [4:0] digits_features_8_2_0_load_reg_2772;
reg   [4:0] digits_features_9_2_0_load_reg_2777;
reg   [4:0] digits_features_10_2_0_load_reg_2782;
reg   [4:0] digits_features_11_2_0_load_reg_2787;
reg   [3:0] digits_features_12_2_0_load_reg_2792;
reg   [2:0] digits_features_1_3_0_load_reg_2797;
reg   [4:0] digits_features_2_3_0_load_reg_2802;
reg   [4:0] digits_features_3_3_0_load_reg_2807;
reg   [4:0] digits_features_4_3_0_load_reg_2812;
reg   [4:0] digits_features_5_3_0_load_reg_2817;
reg   [4:0] digits_features_6_3_0_load_reg_2822;
reg   [4:0] digits_features_7_3_0_load_reg_2827;
reg   [2:0] digits_features_8_3_0_load_reg_2832;
reg   [3:0] digits_features_9_3_0_load_reg_2837;
reg   [4:0] digits_features_10_3_0_load_reg_2842;
reg   [4:0] digits_features_11_3_0_load_reg_2847;
reg   [4:0] digits_features_12_3_0_load_reg_2852;
reg   [4:0] digits_features_0_4_0_load_reg_2857;
reg   [4:0] digits_features_1_4_0_load_reg_2862;
reg   [4:0] digits_features_2_4_0_load_reg_2867;
reg   [3:0] digits_features_3_4_0_load_reg_2872;
reg   [0:0] digits_features_4_4_0_load_reg_2877;
reg   [3:0] digits_features_5_4_0_load_reg_2882;
reg   [4:0] digits_features_6_4_0_load_reg_2887;
reg   [4:0] digits_features_7_4_0_load_reg_2892;
reg   [4:0] digits_features_8_4_0_load_reg_2897;
reg   [4:0] digits_features_9_4_0_load_reg_2902;
reg   [4:0] digits_features_10_4_0_load_reg_2907;
reg   [4:0] digits_features_11_4_0_load_reg_2912;
reg   [0:0] digits_labels_2_load_reg_2917;
reg   [0:0] digits_labels_3_load_reg_2922;
reg   [0:0] digits_labels_4_load_reg_2927;
reg   [0:0] digits_labels_5_load_reg_2932;
reg   [0:0] digits_labels_6_load_reg_2937;
reg   [0:0] digits_labels_7_load_reg_2942;
reg   [0:0] digits_labels_8_load_reg_2947;
reg   [0:0] digits_labels_9_load_reg_2952;
wire   [13:0] trunc_ln84_fu_2158_p1;
reg   [13:0] trunc_ln84_reg_2957;
wire   [63:0] zext_ln83_24_fu_2190_p1;
reg   [63:0] zext_ln83_24_reg_2969;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln82_fu_1930_p1;
wire   [63:0] zext_ln83_21_fu_2068_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln84_fu_2153_p1;
wire   [63:0] zext_ln84_1_fu_2180_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln84_2_fu_2229_p1;
wire   [63:0] zext_ln84_3_fu_2239_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln84_4_fu_2261_p1;
wire   [63:0] zext_ln84_5_fu_2271_p1;
wire   [63:0] zext_ln84_6_fu_2281_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln84_7_fu_2291_p1;
wire   [63:0] zext_ln84_8_fu_2301_p1;
wire   [63:0] zext_ln84_9_fu_2311_p1;
reg   [10:0] i_fu_242;
wire   [10:0] add_ln82_fu_1924_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_i_6;
reg    digits_features_1_0_0_ce0_local;
reg    digits_features_2_0_0_ce0_local;
reg    digits_features_3_0_0_ce0_local;
reg    digits_features_4_0_0_ce0_local;
reg    digits_features_5_0_0_ce0_local;
reg    digits_features_6_0_0_ce0_local;
reg    digits_features_7_0_0_ce0_local;
reg    digits_features_8_0_0_ce0_local;
reg    digits_features_9_0_0_ce0_local;
reg    digits_features_10_0_0_ce0_local;
reg    digits_features_11_0_0_ce0_local;
reg    digits_features_12_0_0_ce0_local;
reg    digits_features_0_1_0_ce0_local;
reg    digits_features_1_1_0_ce0_local;
reg    digits_features_2_1_0_ce0_local;
reg    digits_features_3_1_0_ce0_local;
reg    digits_features_4_1_0_ce0_local;
reg    digits_features_5_1_0_ce0_local;
reg    digits_features_6_1_0_ce0_local;
reg    digits_features_7_1_0_ce0_local;
reg    digits_features_8_1_0_ce0_local;
reg    digits_features_9_1_0_ce0_local;
reg    digits_features_10_1_0_ce0_local;
reg    digits_features_11_1_0_ce0_local;
reg    digits_features_12_1_0_ce0_local;
reg    digits_features_0_2_0_ce0_local;
reg    digits_features_1_2_0_ce0_local;
reg    digits_features_2_2_0_ce0_local;
reg    digits_features_3_2_0_ce0_local;
reg    digits_features_4_2_0_ce0_local;
reg    digits_features_5_2_0_ce0_local;
reg    digits_features_7_2_0_ce0_local;
reg    digits_features_8_2_0_ce0_local;
reg    digits_features_9_2_0_ce0_local;
reg    digits_features_10_2_0_ce0_local;
reg    digits_features_11_2_0_ce0_local;
reg    digits_features_12_2_0_ce0_local;
reg    digits_features_1_3_0_ce0_local;
reg    digits_features_2_3_0_ce0_local;
reg    digits_features_3_3_0_ce0_local;
reg    digits_features_4_3_0_ce0_local;
reg    digits_features_5_3_0_ce0_local;
reg    digits_features_6_3_0_ce0_local;
reg    digits_features_7_3_0_ce0_local;
reg    digits_features_8_3_0_ce0_local;
reg    digits_features_9_3_0_ce0_local;
reg    digits_features_10_3_0_ce0_local;
reg    digits_features_11_3_0_ce0_local;
reg    digits_features_12_3_0_ce0_local;
reg    digits_features_0_4_0_ce0_local;
reg    digits_features_1_4_0_ce0_local;
reg    digits_features_2_4_0_ce0_local;
reg    digits_features_3_4_0_ce0_local;
reg    digits_features_4_4_0_ce0_local;
reg    digits_features_5_4_0_ce0_local;
reg    digits_features_6_4_0_ce0_local;
reg    digits_features_7_4_0_ce0_local;
reg    digits_features_8_4_0_ce0_local;
reg    digits_features_9_4_0_ce0_local;
reg    digits_features_10_4_0_ce0_local;
reg    digits_features_11_4_0_ce0_local;
reg    input_train_0_we1_local;
reg   [4:0] input_train_0_d1_local;
reg    input_train_0_ce1_local;
reg   [12:0] input_train_0_address1_local;
reg    input_train_0_we0_local;
reg   [4:0] input_train_0_d0_local;
reg    input_train_0_ce0_local;
reg   [12:0] input_train_0_address0_local;
reg    input_train_0_6_we0_local;
reg   [4:0] input_train_0_6_d0_local;
reg    input_train_0_6_ce0_local;
reg   [12:0] input_train_0_6_address0_local;
reg    input_train_0_6_we1_local;
reg   [4:0] input_train_0_6_d1_local;
reg    input_train_0_6_ce1_local;
reg   [12:0] input_train_0_6_address1_local;
reg    digits_labels_0_ce0_local;
reg    digits_labels_1_ce0_local;
reg    digits_labels_2_ce0_local;
reg    digits_labels_3_ce0_local;
reg    digits_labels_4_ce0_local;
reg    digits_labels_5_ce0_local;
reg    digits_labels_6_ce0_local;
reg    digits_labels_7_ce0_local;
reg    digits_labels_8_ce0_local;
reg    digits_labels_9_ce0_local;
reg    input_train_0_1_we1_local;
reg   [4:0] input_train_0_1_d1_local;
wire   [4:0] zext_ln83_fu_2085_p1;
reg    input_train_0_1_ce1_local;
reg   [12:0] input_train_0_1_address1_local;
reg    input_train_0_1_we0_local;
reg   [4:0] input_train_0_1_d0_local;
reg    input_train_0_1_ce0_local;
reg   [12:0] input_train_0_1_address0_local;
wire   [4:0] zext_ln83_12_fu_2212_p1;
wire    ap_block_pp0_stage3_11001;
reg    input_train_0_2_we1_local;
reg   [4:0] input_train_0_2_d1_local;
reg    input_train_0_2_ce1_local;
reg   [12:0] input_train_0_2_address1_local;
reg    input_train_0_2_we0_local;
reg   [4:0] input_train_0_2_d0_local;
wire   [4:0] zext_ln83_3_fu_2100_p1;
reg    input_train_0_2_ce0_local;
reg   [12:0] input_train_0_2_address0_local;
reg    input_train_0_3_we1_local;
reg   [4:0] input_train_0_3_d1_local;
reg    input_train_0_3_ce1_local;
reg   [12:0] input_train_0_3_address1_local;
reg    input_train_0_3_we0_local;
reg   [4:0] input_train_0_3_d0_local;
wire   [4:0] zext_ln83_4_fu_2105_p1;
reg    input_train_0_3_ce0_local;
reg   [12:0] input_train_0_3_address0_local;
wire   [4:0] zext_ln83_15_fu_2244_p1;
reg    input_train_0_4_we1_local;
reg   [4:0] input_train_0_4_d1_local;
reg    input_train_0_4_ce1_local;
reg   [12:0] input_train_0_4_address1_local;
reg    input_train_0_4_we0_local;
reg   [4:0] input_train_0_4_d0_local;
reg    input_train_0_4_ce0_local;
reg   [12:0] input_train_0_4_address0_local;
wire   [4:0] zext_ln83_8_fu_2196_p1;
wire   [4:0] zext_ln83_16_fu_2248_p1;
reg    input_train_0_5_we1_local;
reg   [4:0] input_train_0_5_d1_local;
reg    input_train_0_5_ce1_local;
reg   [12:0] input_train_0_5_address1_local;
reg    input_train_0_5_we0_local;
reg   [4:0] input_train_0_5_d0_local;
reg    input_train_0_5_ce0_local;
reg   [12:0] input_train_0_5_address0_local;
wire   [4:0] zext_ln83_9_fu_2200_p1;
wire   [4:0] zext_ln83_17_fu_2252_p1;
reg    input_train_0_7_we1_local;
reg   [4:0] input_train_0_7_d1_local;
wire   [4:0] zext_ln83_1_fu_2090_p1;
reg    input_train_0_7_ce1_local;
reg   [12:0] input_train_0_7_address1_local;
reg    input_train_0_7_we0_local;
reg   [4:0] input_train_0_7_d0_local;
reg    input_train_0_7_ce0_local;
reg   [12:0] input_train_0_7_address0_local;
wire   [4:0] zext_ln83_10_fu_2204_p1;
reg    input_train_0_8_we1_local;
reg   [4:0] input_train_0_8_d1_local;
wire   [4:0] zext_ln83_2_fu_2095_p1;
reg    input_train_0_8_ce1_local;
reg   [12:0] input_train_0_8_address1_local;
reg    input_train_0_8_we0_local;
reg   [4:0] input_train_0_8_d0_local;
reg    input_train_0_8_ce0_local;
reg   [12:0] input_train_0_8_address0_local;
wire   [4:0] zext_ln83_13_fu_2216_p1;
reg    input_train_0_9_we1_local;
reg   [4:0] input_train_0_9_d1_local;
reg    input_train_0_9_ce1_local;
reg   [12:0] input_train_0_9_address1_local;
reg    input_train_0_9_we0_local;
reg   [4:0] input_train_0_9_d0_local;
reg    input_train_0_9_ce0_local;
reg   [12:0] input_train_0_9_address0_local;
wire   [4:0] zext_ln83_14_fu_2220_p1;
reg    input_train_0_10_we1_local;
reg   [4:0] input_train_0_10_d1_local;
reg    input_train_0_10_ce1_local;
reg   [12:0] input_train_0_10_address1_local;
reg    input_train_0_10_we0_local;
reg   [4:0] input_train_0_10_d0_local;
wire   [4:0] zext_ln83_5_fu_2110_p1;
reg    input_train_0_10_ce0_local;
reg   [12:0] input_train_0_10_address0_local;
reg    input_train_0_11_we1_local;
reg   [4:0] input_train_0_11_d1_local;
reg    input_train_0_11_ce1_local;
reg   [12:0] input_train_0_11_address1_local;
reg    input_train_0_11_we0_local;
reg   [4:0] input_train_0_11_d0_local;
wire   [4:0] zext_ln83_6_fu_2115_p1;
reg    input_train_0_11_ce0_local;
reg   [12:0] input_train_0_11_address0_local;
reg    input_train_0_12_we1_local;
reg   [4:0] input_train_0_12_d1_local;
reg    input_train_0_12_ce1_local;
reg   [12:0] input_train_0_12_address1_local;
reg    input_train_0_12_we0_local;
reg   [4:0] input_train_0_12_d0_local;
wire   [4:0] zext_ln83_7_fu_2120_p1;
reg    input_train_0_12_ce0_local;
reg   [12:0] input_train_0_12_address0_local;
wire   [4:0] zext_ln83_11_fu_2208_p1;
reg    y_train_we1_local;
reg   [0:0] y_train_d1_local;
reg    y_train_ce1_local;
reg   [13:0] y_train_address1_local;
reg    y_train_we0_local;
reg   [0:0] y_train_d0_local;
reg    y_train_ce0_local;
reg   [13:0] y_train_address0_local;
wire    ap_block_pp0_stage4_11001;
wire   [12:0] tmp_4_fu_2009_p3;
wire   [13:0] zext_ln83_19_fu_2017_p1;
wire   [13:0] zext_ln83_18_fu_2005_p1;
wire   [13:0] add_ln83_4_fu_2021_p2;
wire   [12:0] add_ln83_1_fu_2036_p2;
wire   [12:0] add_ln83_2_fu_2047_p2;
wire   [12:0] add_ln83_fu_2063_p2;
wire   [13:0] tmp_5_fu_2125_p3;
wire   [11:0] tmp_6_fu_2136_p3;
wire   [14:0] zext_ln84_10_fu_2132_p1;
wire   [14:0] zext_ln84_11_fu_2143_p1;
wire   [14:0] add_ln84_8_fu_2147_p2;
wire   [12:0] tmp_fu_2162_p4;
wire   [13:0] or_ln_fu_2172_p3;
wire   [12:0] add_ln83_3_fu_2185_p2;
wire   [13:0] add_ln84_fu_2224_p2;
wire   [13:0] add_ln84_1_fu_2234_p2;
wire   [13:0] add_ln84_2_fu_2256_p2;
wire   [13:0] add_ln84_3_fu_2266_p2;
wire   [13:0] add_ln84_4_fu_2276_p2;
wire   [13:0] add_ln84_5_fu_2286_p2;
wire   [13:0] add_ln84_6_fu_2296_p2;
wire   [13:0] add_ln84_7_fu_2306_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_242 = 11'd0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln82_fu_1918_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_242 <= add_ln82_fu_1924_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_242 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        digits_features_0_4_0_load_reg_2857 <= digits_features_0_4_0_q0;
        digits_features_10_2_0_load_reg_2782 <= digits_features_10_2_0_q0;
        digits_features_10_3_0_load_reg_2842 <= digits_features_10_3_0_q0;
        digits_features_10_4_0_load_reg_2907 <= digits_features_10_4_0_q0;
        digits_features_11_2_0_load_reg_2787 <= digits_features_11_2_0_q0;
        digits_features_11_3_0_load_reg_2847 <= digits_features_11_3_0_q0;
        digits_features_11_4_0_load_reg_2912 <= digits_features_11_4_0_q0;
        digits_features_12_2_0_load_reg_2792 <= digits_features_12_2_0_q0;
        digits_features_12_3_0_load_reg_2852 <= digits_features_12_3_0_q0;
        digits_features_1_2_0_load_reg_2742 <= digits_features_1_2_0_q0;
        digits_features_1_3_0_load_reg_2797 <= digits_features_1_3_0_q0;
        digits_features_1_4_0_load_reg_2862 <= digits_features_1_4_0_q0;
        digits_features_2_2_0_load_reg_2747 <= digits_features_2_2_0_q0;
        digits_features_2_3_0_load_reg_2802 <= digits_features_2_3_0_q0;
        digits_features_2_4_0_load_reg_2867 <= digits_features_2_4_0_q0;
        digits_features_3_2_0_load_reg_2752 <= digits_features_3_2_0_q0;
        digits_features_3_3_0_load_reg_2807 <= digits_features_3_3_0_q0;
        digits_features_3_4_0_load_reg_2872 <= digits_features_3_4_0_q0;
        digits_features_4_2_0_load_reg_2757 <= digits_features_4_2_0_q0;
        digits_features_4_3_0_load_reg_2812 <= digits_features_4_3_0_q0;
        digits_features_4_4_0_load_reg_2877 <= digits_features_4_4_0_q0;
        digits_features_5_2_0_load_reg_2762 <= digits_features_5_2_0_q0;
        digits_features_5_3_0_load_reg_2817 <= digits_features_5_3_0_q0;
        digits_features_5_4_0_load_reg_2882 <= digits_features_5_4_0_q0;
        digits_features_6_3_0_load_reg_2822 <= digits_features_6_3_0_q0;
        digits_features_6_4_0_load_reg_2887 <= digits_features_6_4_0_q0;
        digits_features_7_2_0_load_reg_2767 <= digits_features_7_2_0_q0;
        digits_features_7_3_0_load_reg_2827 <= digits_features_7_3_0_q0;
        digits_features_7_4_0_load_reg_2892 <= digits_features_7_4_0_q0;
        digits_features_8_2_0_load_reg_2772 <= digits_features_8_2_0_q0;
        digits_features_8_3_0_load_reg_2832 <= digits_features_8_3_0_q0;
        digits_features_8_4_0_load_reg_2897 <= digits_features_8_4_0_q0;
        digits_features_9_2_0_load_reg_2777 <= digits_features_9_2_0_q0;
        digits_features_9_3_0_load_reg_2837 <= digits_features_9_3_0_q0;
        digits_features_9_4_0_load_reg_2902 <= digits_features_9_4_0_q0;
        digits_labels_2_load_reg_2917 <= digits_labels_2_q0;
        digits_labels_3_load_reg_2922 <= digits_labels_3_q0;
        digits_labels_4_load_reg_2927 <= digits_labels_4_q0;
        digits_labels_5_load_reg_2932 <= digits_labels_5_q0;
        digits_labels_6_load_reg_2937 <= digits_labels_6_q0;
        digits_labels_7_load_reg_2942 <= digits_labels_7_q0;
        digits_labels_8_load_reg_2947 <= digits_labels_8_q0;
        digits_labels_9_load_reg_2952 <= digits_labels_9_q0;
        trunc_ln84_reg_2957[13 : 1] <= trunc_ln84_fu_2158_p1[13 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_6_reg_2323 <= ap_sig_allocacmp_i_6;
        icmp_ln82_reg_2329 <= icmp_ln82_fu_1918_p2;
        trunc_ln83_reg_2349 <= trunc_ln83_fu_2032_p1;
        zext_ln83_20_reg_2333[13 : 0] <= zext_ln83_20_fu_2027_p1[13 : 0];
        zext_ln83_22_reg_2355[12 : 0] <= zext_ln83_22_fu_2042_p1[12 : 0];
        zext_ln83_23_reg_2371[12 : 0] <= zext_ln83_23_fu_2053_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln83_24_reg_2969[12 : 0] <= zext_ln83_24_fu_2190_p1[12 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln82_fu_1918_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_6 = 11'd0;
    end else begin
        ap_sig_allocacmp_i_6 = i_fu_242;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_0_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_0_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_0_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_0_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_0_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_0_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_10_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_10_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_11_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_11_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_12_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_12_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_1_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_1_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_2_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_2_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_3_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_3_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_4_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_4_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_5_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_5_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_6_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_6_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_7_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_7_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_8_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_8_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_0_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_1_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_2_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_3_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_3_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_features_9_4_0_ce0_local = 1'b1;
    end else begin
        digits_features_9_4_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_0_ce0_local = 1'b1;
    end else begin
        digits_labels_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_1_ce0_local = 1'b1;
    end else begin
        digits_labels_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_2_ce0_local = 1'b1;
    end else begin
        digits_labels_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_3_ce0_local = 1'b1;
    end else begin
        digits_labels_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_4_ce0_local = 1'b1;
    end else begin
        digits_labels_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_5_ce0_local = 1'b1;
    end else begin
        digits_labels_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_6_ce0_local = 1'b1;
    end else begin
        digits_labels_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_7_ce0_local = 1'b1;
    end else begin
        digits_labels_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_8_ce0_local = 1'b1;
    end else begin
        digits_labels_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        digits_labels_9_ce0_local = 1'b1;
    end else begin
        digits_labels_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_10_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_10_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_10_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_10_address0_local = 'bx;
        end
    end else begin
        input_train_0_10_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_10_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_10_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_10_address1_local = 'bx;
        end
    end else begin
        input_train_0_10_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_10_ce0_local = 1'b1;
    end else begin
        input_train_0_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_10_ce1_local = 1'b1;
    end else begin
        input_train_0_10_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_10_d0_local = digits_features_10_4_0_load_reg_2907;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_10_d0_local = digits_features_10_3_0_load_reg_2842;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_10_d0_local = zext_ln83_5_fu_2110_p1;
        end else begin
            input_train_0_10_d0_local = 'bx;
        end
    end else begin
        input_train_0_10_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_10_d1_local = digits_features_10_2_0_load_reg_2782;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_10_d1_local = digits_features_10_0_0_q0;
        end else begin
            input_train_0_10_d1_local = 'bx;
        end
    end else begin
        input_train_0_10_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_10_we0_local = 1'b1;
    end else begin
        input_train_0_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_10_we1_local = 1'b1;
    end else begin
        input_train_0_10_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_11_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_11_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_11_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_11_address0_local = 'bx;
        end
    end else begin
        input_train_0_11_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_11_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_11_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_11_address1_local = 'bx;
        end
    end else begin
        input_train_0_11_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_11_ce0_local = 1'b1;
    end else begin
        input_train_0_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_11_ce1_local = 1'b1;
    end else begin
        input_train_0_11_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_11_d0_local = digits_features_11_4_0_load_reg_2912;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_11_d0_local = digits_features_11_3_0_load_reg_2847;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_11_d0_local = zext_ln83_6_fu_2115_p1;
        end else begin
            input_train_0_11_d0_local = 'bx;
        end
    end else begin
        input_train_0_11_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_11_d1_local = digits_features_11_2_0_load_reg_2787;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_11_d1_local = digits_features_11_0_0_q0;
        end else begin
            input_train_0_11_d1_local = 'bx;
        end
    end else begin
        input_train_0_11_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_11_we0_local = 1'b1;
    end else begin
        input_train_0_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_11_we1_local = 1'b1;
    end else begin
        input_train_0_11_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_12_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_12_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_12_address0_local = 'bx;
        end
    end else begin
        input_train_0_12_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_12_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_12_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_12_address1_local = 'bx;
        end
    end else begin
        input_train_0_12_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_12_ce0_local = 1'b1;
    end else begin
        input_train_0_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_12_ce1_local = 1'b1;
    end else begin
        input_train_0_12_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_12_d0_local = digits_features_12_3_0_load_reg_2852;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_12_d0_local = zext_ln83_7_fu_2120_p1;
        end else begin
            input_train_0_12_d0_local = 'bx;
        end
    end else begin
        input_train_0_12_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_12_d1_local = zext_ln83_11_fu_2208_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_12_d1_local = digits_features_12_0_0_q0;
        end else begin
            input_train_0_12_d1_local = 'bx;
        end
    end else begin
        input_train_0_12_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_12_we0_local = 1'b1;
    end else begin
        input_train_0_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_12_we1_local = 1'b1;
    end else begin
        input_train_0_12_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_1_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_1_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_1_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_1_address0_local = 'bx;
        end
    end else begin
        input_train_0_1_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_1_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_1_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_1_address1_local = 'bx;
        end
    end else begin
        input_train_0_1_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_1_ce0_local = 1'b1;
    end else begin
        input_train_0_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_1_ce1_local = 1'b1;
    end else begin
        input_train_0_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_1_d0_local = digits_features_1_4_0_load_reg_2862;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_1_d0_local = zext_ln83_12_fu_2212_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_1_d0_local = digits_features_1_1_0_q0;
        end else begin
            input_train_0_1_d0_local = 'bx;
        end
    end else begin
        input_train_0_1_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_1_d1_local = digits_features_1_2_0_load_reg_2742;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_1_d1_local = zext_ln83_fu_2085_p1;
        end else begin
            input_train_0_1_d1_local = 'bx;
        end
    end else begin
        input_train_0_1_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_1_we0_local = 1'b1;
    end else begin
        input_train_0_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_1_we1_local = 1'b1;
    end else begin
        input_train_0_1_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_2_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_2_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_2_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_2_address0_local = 'bx;
        end
    end else begin
        input_train_0_2_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_2_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_2_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_2_address1_local = 'bx;
        end
    end else begin
        input_train_0_2_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_2_ce0_local = 1'b1;
    end else begin
        input_train_0_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_2_ce1_local = 1'b1;
    end else begin
        input_train_0_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_2_d0_local = digits_features_2_4_0_load_reg_2867;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_2_d0_local = digits_features_2_3_0_load_reg_2802;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_2_d0_local = zext_ln83_3_fu_2100_p1;
        end else begin
            input_train_0_2_d0_local = 'bx;
        end
    end else begin
        input_train_0_2_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_2_d1_local = digits_features_2_2_0_load_reg_2747;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_2_d1_local = digits_features_2_0_0_q0;
        end else begin
            input_train_0_2_d1_local = 'bx;
        end
    end else begin
        input_train_0_2_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_2_we0_local = 1'b1;
    end else begin
        input_train_0_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_2_we1_local = 1'b1;
    end else begin
        input_train_0_2_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_3_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_3_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_3_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_3_address0_local = 'bx;
        end
    end else begin
        input_train_0_3_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_3_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_3_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_3_address1_local = 'bx;
        end
    end else begin
        input_train_0_3_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_3_ce0_local = 1'b1;
    end else begin
        input_train_0_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_3_ce1_local = 1'b1;
    end else begin
        input_train_0_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_3_d0_local = zext_ln83_15_fu_2244_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_3_d0_local = digits_features_3_3_0_load_reg_2807;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_3_d0_local = zext_ln83_4_fu_2105_p1;
        end else begin
            input_train_0_3_d0_local = 'bx;
        end
    end else begin
        input_train_0_3_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_3_d1_local = digits_features_3_2_0_load_reg_2752;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_3_d1_local = digits_features_3_0_0_q0;
        end else begin
            input_train_0_3_d1_local = 'bx;
        end
    end else begin
        input_train_0_3_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_3_we0_local = 1'b1;
    end else begin
        input_train_0_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_3_we1_local = 1'b1;
    end else begin
        input_train_0_3_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_4_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_4_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_4_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_4_address0_local = 'bx;
        end
    end else begin
        input_train_0_4_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_4_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_4_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_4_address1_local = 'bx;
        end
    end else begin
        input_train_0_4_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_4_ce0_local = 1'b1;
    end else begin
        input_train_0_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_4_ce1_local = 1'b1;
    end else begin
        input_train_0_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_4_d0_local = zext_ln83_16_fu_2248_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_4_d0_local = digits_features_4_3_0_load_reg_2812;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_4_d0_local = digits_features_4_1_0_q0;
        end else begin
            input_train_0_4_d0_local = 'bx;
        end
    end else begin
        input_train_0_4_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_4_d1_local = zext_ln83_8_fu_2196_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_4_d1_local = digits_features_4_0_0_q0;
        end else begin
            input_train_0_4_d1_local = 'bx;
        end
    end else begin
        input_train_0_4_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_4_we0_local = 1'b1;
    end else begin
        input_train_0_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_4_we1_local = 1'b1;
    end else begin
        input_train_0_4_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_5_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_5_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_5_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_5_address0_local = 'bx;
        end
    end else begin
        input_train_0_5_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_5_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_5_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_5_address1_local = 'bx;
        end
    end else begin
        input_train_0_5_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_5_ce0_local = 1'b1;
    end else begin
        input_train_0_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_5_ce1_local = 1'b1;
    end else begin
        input_train_0_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_5_d0_local = zext_ln83_17_fu_2252_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_5_d0_local = digits_features_5_3_0_load_reg_2817;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_5_d0_local = digits_features_5_1_0_q0;
        end else begin
            input_train_0_5_d0_local = 'bx;
        end
    end else begin
        input_train_0_5_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_5_d1_local = zext_ln83_9_fu_2200_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_5_d1_local = digits_features_5_0_0_q0;
        end else begin
            input_train_0_5_d1_local = 'bx;
        end
    end else begin
        input_train_0_5_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_5_we0_local = 1'b1;
    end else begin
        input_train_0_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_5_we1_local = 1'b1;
    end else begin
        input_train_0_5_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_6_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_6_address0_local = zext_ln83_21_fu_2068_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_train_0_6_address0_local = zext_ln83_22_fu_2042_p1;
        end else begin
            input_train_0_6_address0_local = 'bx;
        end
    end else begin
        input_train_0_6_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_6_address1_local = zext_ln83_24_fu_2190_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_6_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_6_address1_local = 'bx;
        end
    end else begin
        input_train_0_6_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_train_0_6_ce0_local = 1'b1;
    end else begin
        input_train_0_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_6_ce1_local = 1'b1;
    end else begin
        input_train_0_6_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_6_d0_local = digits_features_6_3_0_load_reg_2822;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_6_d0_local = digits_features_6_1_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_train_0_6_d0_local = 5'd0;
        end else begin
            input_train_0_6_d0_local = 'bx;
        end
    end else begin
        input_train_0_6_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_6_d1_local = digits_features_6_4_0_load_reg_2887;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_6_d1_local = digits_features_6_0_0_q0;
        end else begin
            input_train_0_6_d1_local = 'bx;
        end
    end else begin
        input_train_0_6_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_fu_1918_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_train_0_6_we0_local = 1'b1;
    end else begin
        input_train_0_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_6_we1_local = 1'b1;
    end else begin
        input_train_0_6_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_7_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_7_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_7_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_7_address0_local = 'bx;
        end
    end else begin
        input_train_0_7_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_7_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_7_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_7_address1_local = 'bx;
        end
    end else begin
        input_train_0_7_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_7_ce0_local = 1'b1;
    end else begin
        input_train_0_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_7_ce1_local = 1'b1;
    end else begin
        input_train_0_7_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_7_d0_local = digits_features_7_4_0_load_reg_2892;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_7_d0_local = digits_features_7_3_0_load_reg_2827;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_7_d0_local = digits_features_7_1_0_q0;
        end else begin
            input_train_0_7_d0_local = 'bx;
        end
    end else begin
        input_train_0_7_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_7_d1_local = zext_ln83_10_fu_2204_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_7_d1_local = zext_ln83_1_fu_2090_p1;
        end else begin
            input_train_0_7_d1_local = 'bx;
        end
    end else begin
        input_train_0_7_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_7_we0_local = 1'b1;
    end else begin
        input_train_0_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_7_we1_local = 1'b1;
    end else begin
        input_train_0_7_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_8_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_8_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_8_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_8_address0_local = 'bx;
        end
    end else begin
        input_train_0_8_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_8_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_8_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_8_address1_local = 'bx;
        end
    end else begin
        input_train_0_8_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_8_ce0_local = 1'b1;
    end else begin
        input_train_0_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_8_ce1_local = 1'b1;
    end else begin
        input_train_0_8_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_8_d0_local = digits_features_8_4_0_load_reg_2897;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_8_d0_local = zext_ln83_13_fu_2216_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_8_d0_local = digits_features_8_1_0_q0;
        end else begin
            input_train_0_8_d0_local = 'bx;
        end
    end else begin
        input_train_0_8_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_8_d1_local = digits_features_8_2_0_load_reg_2772;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_8_d1_local = zext_ln83_2_fu_2095_p1;
        end else begin
            input_train_0_8_d1_local = 'bx;
        end
    end else begin
        input_train_0_8_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_8_we0_local = 1'b1;
    end else begin
        input_train_0_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_8_we1_local = 1'b1;
    end else begin
        input_train_0_8_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_9_address0_local = zext_ln83_24_reg_2969;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_9_address0_local = zext_ln83_23_reg_2371;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_9_address0_local = zext_ln83_21_fu_2068_p1;
        end else begin
            input_train_0_9_address0_local = 'bx;
        end
    end else begin
        input_train_0_9_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_9_address1_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_9_address1_local = zext_ln83_20_reg_2333;
        end else begin
            input_train_0_9_address1_local = 'bx;
        end
    end else begin
        input_train_0_9_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_9_ce0_local = 1'b1;
    end else begin
        input_train_0_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_9_ce1_local = 1'b1;
    end else begin
        input_train_0_9_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_train_0_9_d0_local = digits_features_9_4_0_load_reg_2902;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_9_d0_local = zext_ln83_14_fu_2220_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_9_d0_local = digits_features_9_1_0_q0;
        end else begin
            input_train_0_9_d0_local = 'bx;
        end
    end else begin
        input_train_0_9_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_9_d1_local = digits_features_9_2_0_load_reg_2777;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_9_d1_local = digits_features_9_0_0_q0;
        end else begin
            input_train_0_9_d1_local = 'bx;
        end
    end else begin
        input_train_0_9_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_train_0_9_we0_local = 1'b1;
    end else begin
        input_train_0_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_train_0_9_we1_local = 1'b1;
    end else begin
        input_train_0_9_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_address0_local = zext_ln83_24_fu_2190_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_address0_local = zext_ln83_22_reg_2355;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_train_0_address0_local = zext_ln83_23_fu_2053_p1;
        end else begin
            input_train_0_address0_local = 'bx;
        end
    end else begin
        input_train_0_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_address1_local = zext_ln83_21_fu_2068_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_train_0_address1_local = zext_ln83_20_fu_2027_p1;
        end else begin
            input_train_0_address1_local = 'bx;
        end
    end else begin
        input_train_0_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_train_0_ce0_local = 1'b1;
    end else begin
        input_train_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_train_0_ce1_local = 1'b1;
    end else begin
        input_train_0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_train_0_d0_local = digits_features_0_4_0_load_reg_2857;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_d0_local = digits_features_0_2_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_train_0_d0_local = 5'd0;
        end else begin
            input_train_0_d0_local = 'bx;
        end
    end else begin
        input_train_0_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_train_0_d1_local = digits_features_0_1_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_train_0_d1_local = 5'd0;
        end else begin
            input_train_0_d1_local = 'bx;
        end
    end else begin
        input_train_0_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_fu_1918_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_train_0_we0_local = 1'b1;
    end else begin
        input_train_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_fu_1918_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_train_0_we1_local = 1'b1;
    end else begin
        input_train_0_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_train_address0_local = zext_ln84_9_fu_2311_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_train_address0_local = zext_ln84_7_fu_2291_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_train_address0_local = zext_ln84_5_fu_2271_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_train_address0_local = zext_ln84_3_fu_2239_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_train_address0_local = zext_ln84_1_fu_2180_p1;
    end else begin
        y_train_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_train_address1_local = zext_ln84_8_fu_2301_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_train_address1_local = zext_ln84_6_fu_2281_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_train_address1_local = zext_ln84_4_fu_2261_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_train_address1_local = zext_ln84_2_fu_2229_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_train_address1_local = zext_ln84_fu_2153_p1;
    end else begin
        y_train_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        y_train_ce0_local = 1'b1;
    end else begin
        y_train_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        y_train_ce1_local = 1'b1;
    end else begin
        y_train_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_train_d0_local = digits_labels_9_load_reg_2952;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_train_d0_local = digits_labels_7_load_reg_2942;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_train_d0_local = digits_labels_5_load_reg_2932;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_train_d0_local = digits_labels_3_load_reg_2922;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_train_d0_local = digits_labels_1_q0;
    end else begin
        y_train_d0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_train_d1_local = digits_labels_8_load_reg_2947;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        y_train_d1_local = digits_labels_6_load_reg_2937;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_train_d1_local = digits_labels_4_load_reg_2927;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        y_train_d1_local = digits_labels_2_load_reg_2917;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        y_train_d1_local = digits_labels_0_q0;
    end else begin
        y_train_d1_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        y_train_we0_local = 1'b1;
    end else begin
        y_train_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln82_reg_2329 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        y_train_we1_local = 1'b1;
    end else begin
        y_train_we1_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln82_fu_1924_p2 = (ap_sig_allocacmp_i_6 + 11'd1);

assign add_ln83_1_fu_2036_p2 = (trunc_ln83_fu_2032_p1 + 13'd2);

assign add_ln83_2_fu_2047_p2 = (trunc_ln83_fu_2032_p1 + 13'd3);

assign add_ln83_3_fu_2185_p2 = (trunc_ln83_reg_2349 + 13'd4);

assign add_ln83_4_fu_2021_p2 = (zext_ln83_19_fu_2017_p1 + zext_ln83_18_fu_2005_p1);

assign add_ln83_fu_2063_p2 = (trunc_ln83_reg_2349 + 13'd1);

assign add_ln84_1_fu_2234_p2 = (trunc_ln84_reg_2957 + 14'd3);

assign add_ln84_2_fu_2256_p2 = (trunc_ln84_reg_2957 + 14'd4);

assign add_ln84_3_fu_2266_p2 = (trunc_ln84_reg_2957 + 14'd5);

assign add_ln84_4_fu_2276_p2 = (trunc_ln84_reg_2957 + 14'd6);

assign add_ln84_5_fu_2286_p2 = (trunc_ln84_reg_2957 + 14'd7);

assign add_ln84_6_fu_2296_p2 = (trunc_ln84_reg_2957 + 14'd8);

assign add_ln84_7_fu_2306_p2 = (trunc_ln84_reg_2957 + 14'd9);

assign add_ln84_8_fu_2147_p2 = (zext_ln84_10_fu_2132_p1 + zext_ln84_11_fu_2143_p1);

assign add_ln84_fu_2224_p2 = (trunc_ln84_reg_2957 + 14'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign digits_features_0_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_0_1_0_ce0 = digits_features_0_1_0_ce0_local;

assign digits_features_0_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_0_2_0_ce0 = digits_features_0_2_0_ce0_local;

assign digits_features_0_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_0_4_0_ce0 = digits_features_0_4_0_ce0_local;

assign digits_features_10_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_10_0_0_ce0 = digits_features_10_0_0_ce0_local;

assign digits_features_10_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_10_1_0_ce0 = digits_features_10_1_0_ce0_local;

assign digits_features_10_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_10_2_0_ce0 = digits_features_10_2_0_ce0_local;

assign digits_features_10_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_10_3_0_ce0 = digits_features_10_3_0_ce0_local;

assign digits_features_10_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_10_4_0_ce0 = digits_features_10_4_0_ce0_local;

assign digits_features_11_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_11_0_0_ce0 = digits_features_11_0_0_ce0_local;

assign digits_features_11_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_11_1_0_ce0 = digits_features_11_1_0_ce0_local;

assign digits_features_11_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_11_2_0_ce0 = digits_features_11_2_0_ce0_local;

assign digits_features_11_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_11_3_0_ce0 = digits_features_11_3_0_ce0_local;

assign digits_features_11_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_11_4_0_ce0 = digits_features_11_4_0_ce0_local;

assign digits_features_12_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_12_0_0_ce0 = digits_features_12_0_0_ce0_local;

assign digits_features_12_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_12_1_0_ce0 = digits_features_12_1_0_ce0_local;

assign digits_features_12_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_12_2_0_ce0 = digits_features_12_2_0_ce0_local;

assign digits_features_12_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_12_3_0_ce0 = digits_features_12_3_0_ce0_local;

assign digits_features_1_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_1_0_0_ce0 = digits_features_1_0_0_ce0_local;

assign digits_features_1_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_1_1_0_ce0 = digits_features_1_1_0_ce0_local;

assign digits_features_1_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_1_2_0_ce0 = digits_features_1_2_0_ce0_local;

assign digits_features_1_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_1_3_0_ce0 = digits_features_1_3_0_ce0_local;

assign digits_features_1_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_1_4_0_ce0 = digits_features_1_4_0_ce0_local;

assign digits_features_2_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_2_0_0_ce0 = digits_features_2_0_0_ce0_local;

assign digits_features_2_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_2_1_0_ce0 = digits_features_2_1_0_ce0_local;

assign digits_features_2_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_2_2_0_ce0 = digits_features_2_2_0_ce0_local;

assign digits_features_2_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_2_3_0_ce0 = digits_features_2_3_0_ce0_local;

assign digits_features_2_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_2_4_0_ce0 = digits_features_2_4_0_ce0_local;

assign digits_features_3_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_3_0_0_ce0 = digits_features_3_0_0_ce0_local;

assign digits_features_3_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_3_1_0_ce0 = digits_features_3_1_0_ce0_local;

assign digits_features_3_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_3_2_0_ce0 = digits_features_3_2_0_ce0_local;

assign digits_features_3_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_3_3_0_ce0 = digits_features_3_3_0_ce0_local;

assign digits_features_3_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_3_4_0_ce0 = digits_features_3_4_0_ce0_local;

assign digits_features_4_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_4_0_0_ce0 = digits_features_4_0_0_ce0_local;

assign digits_features_4_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_4_1_0_ce0 = digits_features_4_1_0_ce0_local;

assign digits_features_4_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_4_2_0_ce0 = digits_features_4_2_0_ce0_local;

assign digits_features_4_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_4_3_0_ce0 = digits_features_4_3_0_ce0_local;

assign digits_features_4_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_4_4_0_ce0 = digits_features_4_4_0_ce0_local;

assign digits_features_5_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_5_0_0_ce0 = digits_features_5_0_0_ce0_local;

assign digits_features_5_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_5_1_0_ce0 = digits_features_5_1_0_ce0_local;

assign digits_features_5_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_5_2_0_ce0 = digits_features_5_2_0_ce0_local;

assign digits_features_5_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_5_3_0_ce0 = digits_features_5_3_0_ce0_local;

assign digits_features_5_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_5_4_0_ce0 = digits_features_5_4_0_ce0_local;

assign digits_features_6_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_6_0_0_ce0 = digits_features_6_0_0_ce0_local;

assign digits_features_6_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_6_1_0_ce0 = digits_features_6_1_0_ce0_local;

assign digits_features_6_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_6_3_0_ce0 = digits_features_6_3_0_ce0_local;

assign digits_features_6_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_6_4_0_ce0 = digits_features_6_4_0_ce0_local;

assign digits_features_7_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_7_0_0_ce0 = digits_features_7_0_0_ce0_local;

assign digits_features_7_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_7_1_0_ce0 = digits_features_7_1_0_ce0_local;

assign digits_features_7_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_7_2_0_ce0 = digits_features_7_2_0_ce0_local;

assign digits_features_7_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_7_3_0_ce0 = digits_features_7_3_0_ce0_local;

assign digits_features_7_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_7_4_0_ce0 = digits_features_7_4_0_ce0_local;

assign digits_features_8_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_8_0_0_ce0 = digits_features_8_0_0_ce0_local;

assign digits_features_8_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_8_1_0_ce0 = digits_features_8_1_0_ce0_local;

assign digits_features_8_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_8_2_0_ce0 = digits_features_8_2_0_ce0_local;

assign digits_features_8_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_8_3_0_ce0 = digits_features_8_3_0_ce0_local;

assign digits_features_8_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_8_4_0_ce0 = digits_features_8_4_0_ce0_local;

assign digits_features_9_0_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_9_0_0_ce0 = digits_features_9_0_0_ce0_local;

assign digits_features_9_1_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_9_1_0_ce0 = digits_features_9_1_0_ce0_local;

assign digits_features_9_2_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_9_2_0_ce0 = digits_features_9_2_0_ce0_local;

assign digits_features_9_3_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_9_3_0_ce0 = digits_features_9_3_0_ce0_local;

assign digits_features_9_4_0_address0 = zext_ln82_fu_1930_p1;

assign digits_features_9_4_0_ce0 = digits_features_9_4_0_ce0_local;

assign digits_labels_0_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_0_ce0 = digits_labels_0_ce0_local;

assign digits_labels_1_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_1_ce0 = digits_labels_1_ce0_local;

assign digits_labels_2_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_2_ce0 = digits_labels_2_ce0_local;

assign digits_labels_3_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_3_ce0 = digits_labels_3_ce0_local;

assign digits_labels_4_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_4_ce0 = digits_labels_4_ce0_local;

assign digits_labels_5_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_5_ce0 = digits_labels_5_ce0_local;

assign digits_labels_6_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_6_ce0 = digits_labels_6_ce0_local;

assign digits_labels_7_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_7_ce0 = digits_labels_7_ce0_local;

assign digits_labels_8_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_8_ce0 = digits_labels_8_ce0_local;

assign digits_labels_9_address0 = zext_ln82_fu_1930_p1;

assign digits_labels_9_ce0 = digits_labels_9_ce0_local;

assign icmp_ln82_fu_1918_p2 = ((ap_sig_allocacmp_i_6 == 11'd1437) ? 1'b1 : 1'b0);

assign input_train_0_10_address0 = input_train_0_10_address0_local;

assign input_train_0_10_address1 = input_train_0_10_address1_local;

assign input_train_0_10_ce0 = input_train_0_10_ce0_local;

assign input_train_0_10_ce1 = input_train_0_10_ce1_local;

assign input_train_0_10_d0 = input_train_0_10_d0_local;

assign input_train_0_10_d1 = input_train_0_10_d1_local;

assign input_train_0_10_we0 = input_train_0_10_we0_local;

assign input_train_0_10_we1 = input_train_0_10_we1_local;

assign input_train_0_11_address0 = input_train_0_11_address0_local;

assign input_train_0_11_address1 = input_train_0_11_address1_local;

assign input_train_0_11_ce0 = input_train_0_11_ce0_local;

assign input_train_0_11_ce1 = input_train_0_11_ce1_local;

assign input_train_0_11_d0 = input_train_0_11_d0_local;

assign input_train_0_11_d1 = input_train_0_11_d1_local;

assign input_train_0_11_we0 = input_train_0_11_we0_local;

assign input_train_0_11_we1 = input_train_0_11_we1_local;

assign input_train_0_12_address0 = input_train_0_12_address0_local;

assign input_train_0_12_address1 = input_train_0_12_address1_local;

assign input_train_0_12_ce0 = input_train_0_12_ce0_local;

assign input_train_0_12_ce1 = input_train_0_12_ce1_local;

assign input_train_0_12_d0 = input_train_0_12_d0_local;

assign input_train_0_12_d1 = input_train_0_12_d1_local;

assign input_train_0_12_we0 = input_train_0_12_we0_local;

assign input_train_0_12_we1 = input_train_0_12_we1_local;

assign input_train_0_1_address0 = input_train_0_1_address0_local;

assign input_train_0_1_address1 = input_train_0_1_address1_local;

assign input_train_0_1_ce0 = input_train_0_1_ce0_local;

assign input_train_0_1_ce1 = input_train_0_1_ce1_local;

assign input_train_0_1_d0 = input_train_0_1_d0_local;

assign input_train_0_1_d1 = input_train_0_1_d1_local;

assign input_train_0_1_we0 = input_train_0_1_we0_local;

assign input_train_0_1_we1 = input_train_0_1_we1_local;

assign input_train_0_2_address0 = input_train_0_2_address0_local;

assign input_train_0_2_address1 = input_train_0_2_address1_local;

assign input_train_0_2_ce0 = input_train_0_2_ce0_local;

assign input_train_0_2_ce1 = input_train_0_2_ce1_local;

assign input_train_0_2_d0 = input_train_0_2_d0_local;

assign input_train_0_2_d1 = input_train_0_2_d1_local;

assign input_train_0_2_we0 = input_train_0_2_we0_local;

assign input_train_0_2_we1 = input_train_0_2_we1_local;

assign input_train_0_3_address0 = input_train_0_3_address0_local;

assign input_train_0_3_address1 = input_train_0_3_address1_local;

assign input_train_0_3_ce0 = input_train_0_3_ce0_local;

assign input_train_0_3_ce1 = input_train_0_3_ce1_local;

assign input_train_0_3_d0 = input_train_0_3_d0_local;

assign input_train_0_3_d1 = input_train_0_3_d1_local;

assign input_train_0_3_we0 = input_train_0_3_we0_local;

assign input_train_0_3_we1 = input_train_0_3_we1_local;

assign input_train_0_4_address0 = input_train_0_4_address0_local;

assign input_train_0_4_address1 = input_train_0_4_address1_local;

assign input_train_0_4_ce0 = input_train_0_4_ce0_local;

assign input_train_0_4_ce1 = input_train_0_4_ce1_local;

assign input_train_0_4_d0 = input_train_0_4_d0_local;

assign input_train_0_4_d1 = input_train_0_4_d1_local;

assign input_train_0_4_we0 = input_train_0_4_we0_local;

assign input_train_0_4_we1 = input_train_0_4_we1_local;

assign input_train_0_5_address0 = input_train_0_5_address0_local;

assign input_train_0_5_address1 = input_train_0_5_address1_local;

assign input_train_0_5_ce0 = input_train_0_5_ce0_local;

assign input_train_0_5_ce1 = input_train_0_5_ce1_local;

assign input_train_0_5_d0 = input_train_0_5_d0_local;

assign input_train_0_5_d1 = input_train_0_5_d1_local;

assign input_train_0_5_we0 = input_train_0_5_we0_local;

assign input_train_0_5_we1 = input_train_0_5_we1_local;

assign input_train_0_6_address0 = input_train_0_6_address0_local;

assign input_train_0_6_address1 = input_train_0_6_address1_local;

assign input_train_0_6_ce0 = input_train_0_6_ce0_local;

assign input_train_0_6_ce1 = input_train_0_6_ce1_local;

assign input_train_0_6_d0 = input_train_0_6_d0_local;

assign input_train_0_6_d1 = input_train_0_6_d1_local;

assign input_train_0_6_we0 = input_train_0_6_we0_local;

assign input_train_0_6_we1 = input_train_0_6_we1_local;

assign input_train_0_7_address0 = input_train_0_7_address0_local;

assign input_train_0_7_address1 = input_train_0_7_address1_local;

assign input_train_0_7_ce0 = input_train_0_7_ce0_local;

assign input_train_0_7_ce1 = input_train_0_7_ce1_local;

assign input_train_0_7_d0 = input_train_0_7_d0_local;

assign input_train_0_7_d1 = input_train_0_7_d1_local;

assign input_train_0_7_we0 = input_train_0_7_we0_local;

assign input_train_0_7_we1 = input_train_0_7_we1_local;

assign input_train_0_8_address0 = input_train_0_8_address0_local;

assign input_train_0_8_address1 = input_train_0_8_address1_local;

assign input_train_0_8_ce0 = input_train_0_8_ce0_local;

assign input_train_0_8_ce1 = input_train_0_8_ce1_local;

assign input_train_0_8_d0 = input_train_0_8_d0_local;

assign input_train_0_8_d1 = input_train_0_8_d1_local;

assign input_train_0_8_we0 = input_train_0_8_we0_local;

assign input_train_0_8_we1 = input_train_0_8_we1_local;

assign input_train_0_9_address0 = input_train_0_9_address0_local;

assign input_train_0_9_address1 = input_train_0_9_address1_local;

assign input_train_0_9_ce0 = input_train_0_9_ce0_local;

assign input_train_0_9_ce1 = input_train_0_9_ce1_local;

assign input_train_0_9_d0 = input_train_0_9_d0_local;

assign input_train_0_9_d1 = input_train_0_9_d1_local;

assign input_train_0_9_we0 = input_train_0_9_we0_local;

assign input_train_0_9_we1 = input_train_0_9_we1_local;

assign input_train_0_address0 = input_train_0_address0_local;

assign input_train_0_address1 = input_train_0_address1_local;

assign input_train_0_ce0 = input_train_0_ce0_local;

assign input_train_0_ce1 = input_train_0_ce1_local;

assign input_train_0_d0 = input_train_0_d0_local;

assign input_train_0_d1 = input_train_0_d1_local;

assign input_train_0_we0 = input_train_0_we0_local;

assign input_train_0_we1 = input_train_0_we1_local;

assign or_ln_fu_2172_p3 = {{tmp_fu_2162_p4}, {1'd1}};

assign tmp_4_fu_2009_p3 = {{ap_sig_allocacmp_i_6}, {2'd0}};

assign tmp_5_fu_2125_p3 = {{i_6_reg_2323}, {3'd0}};

assign tmp_6_fu_2136_p3 = {{i_6_reg_2323}, {1'd0}};

assign tmp_fu_2162_p4 = {{add_ln84_8_fu_2147_p2[13:1]}};

assign trunc_ln83_fu_2032_p1 = add_ln83_4_fu_2021_p2[12:0];

assign trunc_ln84_fu_2158_p1 = add_ln84_8_fu_2147_p2[13:0];

assign y_train_address0 = y_train_address0_local;

assign y_train_address1 = y_train_address1_local;

assign y_train_ce0 = y_train_ce0_local;

assign y_train_ce1 = y_train_ce1_local;

assign y_train_d0 = y_train_d0_local;

assign y_train_d1 = y_train_d1_local;

assign y_train_we0 = y_train_we0_local;

assign y_train_we1 = y_train_we1_local;

assign zext_ln82_fu_1930_p1 = ap_sig_allocacmp_i_6;

assign zext_ln83_10_fu_2204_p1 = digits_features_7_2_0_load_reg_2767;

assign zext_ln83_11_fu_2208_p1 = digits_features_12_2_0_load_reg_2792;

assign zext_ln83_12_fu_2212_p1 = digits_features_1_3_0_load_reg_2797;

assign zext_ln83_13_fu_2216_p1 = digits_features_8_3_0_load_reg_2832;

assign zext_ln83_14_fu_2220_p1 = digits_features_9_3_0_load_reg_2837;

assign zext_ln83_15_fu_2244_p1 = digits_features_3_4_0_load_reg_2872;

assign zext_ln83_16_fu_2248_p1 = digits_features_4_4_0_load_reg_2877;

assign zext_ln83_17_fu_2252_p1 = digits_features_5_4_0_load_reg_2882;

assign zext_ln83_18_fu_2005_p1 = ap_sig_allocacmp_i_6;

assign zext_ln83_19_fu_2017_p1 = tmp_4_fu_2009_p3;

assign zext_ln83_1_fu_2090_p1 = digits_features_7_0_0_q0;

assign zext_ln83_20_fu_2027_p1 = add_ln83_4_fu_2021_p2;

assign zext_ln83_21_fu_2068_p1 = add_ln83_fu_2063_p2;

assign zext_ln83_22_fu_2042_p1 = add_ln83_1_fu_2036_p2;

assign zext_ln83_23_fu_2053_p1 = add_ln83_2_fu_2047_p2;

assign zext_ln83_24_fu_2190_p1 = add_ln83_3_fu_2185_p2;

assign zext_ln83_2_fu_2095_p1 = digits_features_8_0_0_q0;

assign zext_ln83_3_fu_2100_p1 = digits_features_2_1_0_q0;

assign zext_ln83_4_fu_2105_p1 = digits_features_3_1_0_q0;

assign zext_ln83_5_fu_2110_p1 = digits_features_10_1_0_q0;

assign zext_ln83_6_fu_2115_p1 = digits_features_11_1_0_q0;

assign zext_ln83_7_fu_2120_p1 = digits_features_12_1_0_q0;

assign zext_ln83_8_fu_2196_p1 = digits_features_4_2_0_load_reg_2757;

assign zext_ln83_9_fu_2200_p1 = digits_features_5_2_0_load_reg_2762;

assign zext_ln83_fu_2085_p1 = digits_features_1_0_0_q0;

assign zext_ln84_10_fu_2132_p1 = tmp_5_fu_2125_p3;

assign zext_ln84_11_fu_2143_p1 = tmp_6_fu_2136_p3;

assign zext_ln84_1_fu_2180_p1 = or_ln_fu_2172_p3;

assign zext_ln84_2_fu_2229_p1 = add_ln84_fu_2224_p2;

assign zext_ln84_3_fu_2239_p1 = add_ln84_1_fu_2234_p2;

assign zext_ln84_4_fu_2261_p1 = add_ln84_2_fu_2256_p2;

assign zext_ln84_5_fu_2271_p1 = add_ln84_3_fu_2266_p2;

assign zext_ln84_6_fu_2281_p1 = add_ln84_4_fu_2276_p2;

assign zext_ln84_7_fu_2291_p1 = add_ln84_5_fu_2286_p2;

assign zext_ln84_8_fu_2301_p1 = add_ln84_6_fu_2296_p2;

assign zext_ln84_9_fu_2311_p1 = add_ln84_7_fu_2306_p2;

assign zext_ln84_fu_2153_p1 = add_ln84_8_fu_2147_p2;

always @ (posedge ap_clk) begin
    zext_ln83_20_reg_2333[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln83_22_reg_2355[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln83_23_reg_2371[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    trunc_ln84_reg_2957[0] <= 1'b0;
    zext_ln83_24_reg_2969[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //top_top_Pipeline_VITIS_LOOP_82_1
