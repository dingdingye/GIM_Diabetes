// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module accelerator_accelerator_Pipeline_VITIS_LOOP_323_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        biases_l3_load,
        weights_l3_address0,
        weights_l3_ce0,
        weights_l3_we0,
        weights_l3_d0,
        weights_l3_q0,
        update_temp_mat_129_address0,
        update_temp_mat_129_ce0,
        update_temp_mat_129_q0,
        update_temp_mat_130_address0,
        update_temp_mat_130_ce0,
        update_temp_mat_130_q0,
        update_temp_mat_131_address0,
        update_temp_mat_131_ce0,
        update_temp_mat_131_q0,
        update_temp_mat_132_address0,
        update_temp_mat_132_ce0,
        update_temp_mat_132_q0,
        update_temp_mat_133_address0,
        update_temp_mat_133_ce0,
        update_temp_mat_133_q0,
        update_temp_mat_134_address0,
        update_temp_mat_134_ce0,
        update_temp_mat_134_q0,
        update_temp_mat_135_address0,
        update_temp_mat_135_ce0,
        update_temp_mat_135_q0,
        update_temp_mat_136_address0,
        update_temp_mat_136_ce0,
        update_temp_mat_136_q0,
        final_error_0_18_reload,
        final_error_0_17_reload,
        final_error_0_16_reload,
        final_error_0_15_reload,
        final_error_0_14_reload,
        final_error_0_13_reload,
        final_error_0_12_reload,
        final_error_0_11_reload,
        final_error_0_10_reload,
        final_error_0_19_reload,
        p_out,
        p_out_ap_vld,
        grp_fu_8485_p_din0,
        grp_fu_8485_p_din1,
        grp_fu_8485_p_opcode,
        grp_fu_8485_p_dout0,
        grp_fu_8485_p_ce,
        grp_fu_8493_p_din0,
        grp_fu_8493_p_din1,
        grp_fu_8493_p_opcode,
        grp_fu_8493_p_dout0,
        grp_fu_8493_p_ce,
        grp_fu_8581_p_din0,
        grp_fu_8581_p_din1,
        grp_fu_8581_p_dout0,
        grp_fu_8581_p_ce,
        grp_fu_8585_p_din0,
        grp_fu_8585_p_din1,
        grp_fu_8585_p_dout0,
        grp_fu_8585_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [639:0] biases_l3_load;
output  [3:0] weights_l3_address0;
output   weights_l3_ce0;
output   weights_l3_we0;
output  [511:0] weights_l3_d0;
input  [511:0] weights_l3_q0;
output  [3:0] update_temp_mat_129_address0;
output   update_temp_mat_129_ce0;
input  [63:0] update_temp_mat_129_q0;
output  [3:0] update_temp_mat_130_address0;
output   update_temp_mat_130_ce0;
input  [63:0] update_temp_mat_130_q0;
output  [3:0] update_temp_mat_131_address0;
output   update_temp_mat_131_ce0;
input  [63:0] update_temp_mat_131_q0;
output  [3:0] update_temp_mat_132_address0;
output   update_temp_mat_132_ce0;
input  [63:0] update_temp_mat_132_q0;
output  [3:0] update_temp_mat_133_address0;
output   update_temp_mat_133_ce0;
input  [63:0] update_temp_mat_133_q0;
output  [3:0] update_temp_mat_134_address0;
output   update_temp_mat_134_ce0;
input  [63:0] update_temp_mat_134_q0;
output  [3:0] update_temp_mat_135_address0;
output   update_temp_mat_135_ce0;
input  [63:0] update_temp_mat_135_q0;
output  [3:0] update_temp_mat_136_address0;
output   update_temp_mat_136_ce0;
input  [63:0] update_temp_mat_136_q0;
input  [63:0] final_error_0_18_reload;
input  [63:0] final_error_0_17_reload;
input  [63:0] final_error_0_16_reload;
input  [63:0] final_error_0_15_reload;
input  [63:0] final_error_0_14_reload;
input  [63:0] final_error_0_13_reload;
input  [63:0] final_error_0_12_reload;
input  [63:0] final_error_0_11_reload;
input  [63:0] final_error_0_10_reload;
input  [63:0] final_error_0_19_reload;
output  [639:0] p_out;
output   p_out_ap_vld;
output  [63:0] grp_fu_8485_p_din0;
output  [63:0] grp_fu_8485_p_din1;
output  [0:0] grp_fu_8485_p_opcode;
input  [63:0] grp_fu_8485_p_dout0;
output   grp_fu_8485_p_ce;
output  [63:0] grp_fu_8493_p_din0;
output  [63:0] grp_fu_8493_p_din1;
output  [0:0] grp_fu_8493_p_opcode;
input  [63:0] grp_fu_8493_p_dout0;
output   grp_fu_8493_p_ce;
output  [63:0] grp_fu_8581_p_din0;
output  [63:0] grp_fu_8581_p_din1;
input  [63:0] grp_fu_8581_p_dout0;
output   grp_fu_8581_p_ce;
output  [63:0] grp_fu_8585_p_din0;
output  [63:0] grp_fu_8585_p_din1;
input  [63:0] grp_fu_8585_p_dout0;
output   grp_fu_8585_p_ce;

reg ap_idle;
reg p_out_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln323_reg_697;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_358;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_reg_691;
wire   [0:0] icmp_ln323_fu_375_p2;
reg   [0:0] icmp_ln323_reg_697_pp0_iter1_reg;
reg   [3:0] weights_l3_addr_reg_701;
reg   [3:0] weights_l3_addr_reg_701_pp0_iter1_reg;
reg   [3:0] weights_l3_addr_reg_701_pp0_iter2_reg;
wire   [63:0] tmp_s_fu_394_p23;
wire   [63:0] trunc_ln325_fu_443_p1;
reg   [63:0] trunc_ln325_reg_751;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] trunc_ln325_1_reg_761;
reg   [63:0] trunc_ln325_2_reg_771;
reg   [63:0] trunc_ln325_2_reg_771_pp0_iter1_reg;
reg   [63:0] update_temp_mat_131_load_reg_776;
reg   [63:0] trunc_ln325_3_reg_781;
reg   [63:0] trunc_ln325_3_reg_781_pp0_iter1_reg;
reg   [63:0] update_temp_mat_132_load_reg_786;
reg   [63:0] trunc_ln325_4_reg_791;
reg   [63:0] trunc_ln325_4_reg_791_pp0_iter1_reg;
reg   [63:0] update_temp_mat_133_load_reg_796;
reg   [63:0] trunc_ln325_5_reg_801;
reg   [63:0] trunc_ln325_5_reg_801_pp0_iter1_reg;
reg   [63:0] update_temp_mat_134_load_reg_806;
reg   [63:0] trunc_ln325_6_reg_811;
reg   [63:0] trunc_ln325_6_reg_811_pp0_iter1_reg;
reg   [63:0] update_temp_mat_135_load_reg_816;
reg   [63:0] trunc_ln325_7_reg_821;
reg   [63:0] trunc_ln325_7_reg_821_pp0_iter1_reg;
reg   [63:0] update_temp_mat_136_load_reg_826;
reg   [639:0] p_load_reg_831;
wire   [639:0] zext_ln327_fu_532_p1;
reg   [639:0] zext_ln327_reg_836;
wire   [63:0] trunc_ln327_fu_542_p1;
reg   [63:0] trunc_ln327_reg_842;
reg   [63:0] mul29_i_reg_847;
reg   [63:0] mul_i_reg_852;
reg   [63:0] mul_i_1_reg_857;
wire   [63:0] bitcast_ln327_fu_551_p1;
wire   [639:0] shl_ln327_fu_555_p2;
reg   [639:0] shl_ln327_reg_867;
wire   [63:0] bitcast_ln325_fu_560_p1;
wire   [63:0] bitcast_ln325_2_fu_564_p1;
reg   [63:0] mul_i_2_reg_882;
reg   [63:0] mul_i_3_reg_887;
wire   [63:0] bitcast_ln325_4_fu_568_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire   [63:0] bitcast_ln325_6_fu_572_p1;
reg   [63:0] mul_i_4_reg_902;
reg   [63:0] mul_i_5_reg_907;
wire   [63:0] bitcast_ln325_8_fu_576_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [63:0] bitcast_ln325_10_fu_580_p1;
reg   [63:0] mul_i_6_reg_922;
reg   [63:0] mul_i_7_reg_927;
wire   [63:0] bitcast_ln325_12_fu_584_p1;
wire   [63:0] bitcast_ln325_14_fu_588_p1;
reg   [63:0] sub_i_1_reg_942;
reg   [63:0] sub_i_2_reg_947;
reg   [63:0] sub_i_3_reg_952;
reg   [63:0] sub_i_4_reg_957;
reg   [63:0] sub_i_5_reg_962;
reg   [63:0] sub_i_6_reg_967;
reg   [63:0] sub_i_7_reg_972;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage3_subdone;
wire   [63:0] zext_ln323_fu_381_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_45_fu_140;
wire   [3:0] add_ln323_fu_517_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i;
reg   [639:0] empty_fu_144;
wire   [639:0] or_ln327_fu_615_p2;
reg   [639:0] ap_sig_allocacmp_p_load;
wire    ap_block_pp0_stage5;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage3;
reg    ap_idle_pp0_0to0;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage3_01001;
reg    weights_l3_ce0_local;
reg   [3:0] weights_l3_address0_local;
reg    weights_l3_we0_local;
wire   [511:0] or_ln325_6_fu_651_p9;
reg    update_temp_mat_129_ce0_local;
reg    update_temp_mat_130_ce0_local;
reg    update_temp_mat_131_ce0_local;
reg    update_temp_mat_132_ce0_local;
reg    update_temp_mat_133_ce0_local;
reg    update_temp_mat_134_ce0_local;
reg    update_temp_mat_135_ce0_local;
reg    update_temp_mat_136_ce0_local;
reg   [63:0] grp_fu_338_p0;
reg   [63:0] grp_fu_338_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage4;
reg   [63:0] grp_fu_342_p0;
reg   [63:0] grp_fu_342_p1;
reg   [63:0] grp_fu_346_p0;
reg   [63:0] grp_fu_352_p0;
wire   [63:0] tmp_s_fu_394_p21;
wire   [9:0] shl_ln56_1_fu_525_p3;
wire   [639:0] lshr_ln327_fu_536_p2;
wire   [63:0] bitcast_ln327_1_fu_592_p1;
wire   [639:0] zext_ln327_1_fu_596_p1;
wire   [639:0] xor_ln327_fu_605_p2;
wire   [639:0] shl_ln327_1_fu_600_p2;
wire   [639:0] and_ln327_fu_610_p2;
wire   [63:0] bitcast_ln325_15_fu_648_p1;
wire   [63:0] bitcast_ln325_13_fu_645_p1;
wire   [63:0] bitcast_ln325_11_fu_642_p1;
wire   [63:0] bitcast_ln325_9_fu_639_p1;
wire   [63:0] bitcast_ln325_7_fu_636_p1;
wire   [63:0] bitcast_ln325_5_fu_633_p1;
wire   [63:0] bitcast_ln325_3_fu_630_p1;
wire   [63:0] bitcast_ln325_1_fu_626_p1;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [3:0] tmp_s_fu_394_p1;
wire   [3:0] tmp_s_fu_394_p3;
wire   [3:0] tmp_s_fu_394_p5;
wire   [3:0] tmp_s_fu_394_p7;
wire   [3:0] tmp_s_fu_394_p9;
wire   [3:0] tmp_s_fu_394_p11;
wire   [3:0] tmp_s_fu_394_p13;
wire   [3:0] tmp_s_fu_394_p15;
wire  signed [3:0] tmp_s_fu_394_p17;
wire  signed [3:0] tmp_s_fu_394_p19;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_45_fu_140 = 4'd0;
#0 empty_fu_144 = 640'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) accelerator_sparsemux_21_4_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 64 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 64 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 64 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 64 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 64 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 64 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 64 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 64 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
sparsemux_21_4_64_1_1_U3460(
    .din0(final_error_0_18_reload),
    .din1(final_error_0_17_reload),
    .din2(final_error_0_16_reload),
    .din3(final_error_0_15_reload),
    .din4(final_error_0_14_reload),
    .din5(final_error_0_13_reload),
    .din6(final_error_0_12_reload),
    .din7(final_error_0_11_reload),
    .din8(final_error_0_10_reload),
    .din9(final_error_0_19_reload),
    .def(tmp_s_fu_394_p21),
    .sel(ap_sig_allocacmp_i),
    .dout(tmp_s_fu_394_p23)
);

accelerator_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_fu_144 <= biases_l3_load;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        empty_fu_144 <= or_ln327_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_45_fu_140 <= 4'd0;
    end else if (((icmp_ln323_reg_697 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        i_45_fu_140 <= add_ln323_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_691 <= ap_sig_allocacmp_i;
        icmp_ln323_reg_697 <= icmp_ln323_fu_375_p2;
        icmp_ln323_reg_697_pp0_iter1_reg <= icmp_ln323_reg_697;
        shl_ln327_reg_867 <= shl_ln327_fu_555_p2;
        weights_l3_addr_reg_701 <= zext_ln323_fu_381_p1;
        weights_l3_addr_reg_701_pp0_iter1_reg <= weights_l3_addr_reg_701;
        weights_l3_addr_reg_701_pp0_iter2_reg <= weights_l3_addr_reg_701_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul29_i_reg_847 <= grp_fu_8581_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_i_1_reg_857 <= grp_fu_8585_p_dout0;
        mul_i_reg_852 <= grp_fu_8581_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_i_2_reg_882 <= grp_fu_8581_p_dout0;
        mul_i_3_reg_887 <= grp_fu_8585_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_i_4_reg_902 <= grp_fu_8581_p_dout0;
        mul_i_5_reg_907 <= grp_fu_8585_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_i_6_reg_922 <= grp_fu_8581_p_dout0;
        mul_i_7_reg_927 <= grp_fu_8585_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_load_reg_831 <= ap_sig_allocacmp_p_load;
        trunc_ln327_reg_842 <= trunc_ln327_fu_542_p1;
        zext_ln327_reg_836[9 : 6] <= zext_ln327_fu_532_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_358 <= grp_fu_8485_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sub_i_1_reg_942 <= grp_fu_8493_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_i_2_reg_947 <= grp_fu_8485_p_dout0;
        sub_i_3_reg_952 <= grp_fu_8493_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub_i_4_reg_957 <= grp_fu_8485_p_dout0;
        sub_i_5_reg_962 <= grp_fu_8493_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sub_i_6_reg_967 <= grp_fu_8485_p_dout0;
        sub_i_7_reg_972 <= grp_fu_8493_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln325_1_reg_761 <= {{weights_l3_q0[127:64]}};
        trunc_ln325_2_reg_771 <= {{weights_l3_q0[191:128]}};
        trunc_ln325_2_reg_771_pp0_iter1_reg <= trunc_ln325_2_reg_771;
        trunc_ln325_3_reg_781 <= {{weights_l3_q0[255:192]}};
        trunc_ln325_3_reg_781_pp0_iter1_reg <= trunc_ln325_3_reg_781;
        trunc_ln325_4_reg_791 <= {{weights_l3_q0[319:256]}};
        trunc_ln325_4_reg_791_pp0_iter1_reg <= trunc_ln325_4_reg_791;
        trunc_ln325_5_reg_801 <= {{weights_l3_q0[383:320]}};
        trunc_ln325_5_reg_801_pp0_iter1_reg <= trunc_ln325_5_reg_801;
        trunc_ln325_6_reg_811 <= {{weights_l3_q0[447:384]}};
        trunc_ln325_6_reg_811_pp0_iter1_reg <= trunc_ln325_6_reg_811;
        trunc_ln325_7_reg_821 <= {{weights_l3_q0[511:448]}};
        trunc_ln325_7_reg_821_pp0_iter1_reg <= trunc_ln325_7_reg_821;
        trunc_ln325_reg_751 <= trunc_ln325_fu_443_p1;
        update_temp_mat_131_load_reg_776 <= update_temp_mat_131_q0;
        update_temp_mat_132_load_reg_786 <= update_temp_mat_132_q0;
        update_temp_mat_133_load_reg_796 <= update_temp_mat_133_q0;
        update_temp_mat_134_load_reg_806 <= update_temp_mat_134_q0;
        update_temp_mat_135_load_reg_816 <= update_temp_mat_135_q0;
        update_temp_mat_136_load_reg_826 <= update_temp_mat_136_q0;
    end
end

always @ (*) begin
    if (((icmp_ln323_reg_697 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln323_reg_697_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_45_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_sig_allocacmp_p_load = or_ln327_fu_615_p2;
    end else begin
        ap_sig_allocacmp_p_load = empty_fu_144;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_338_p0 = bitcast_ln325_12_fu_584_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_338_p0 = bitcast_ln325_8_fu_576_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_338_p0 = bitcast_ln325_4_fu_568_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_338_p0 = bitcast_ln325_fu_560_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_338_p0 = bitcast_ln327_fu_551_p1;
        end else begin
            grp_fu_338_p0 = 'bx;
        end
    end else begin
        grp_fu_338_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_338_p1 = mul_i_6_reg_922;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_338_p1 = mul_i_4_reg_902;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_338_p1 = mul_i_2_reg_882;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_338_p1 = mul_i_reg_852;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_338_p1 = mul29_i_reg_847;
        end else begin
            grp_fu_338_p1 = 'bx;
        end
    end else begin
        grp_fu_338_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_342_p0 = bitcast_ln325_14_fu_588_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_342_p0 = bitcast_ln325_10_fu_580_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_342_p0 = bitcast_ln325_6_fu_572_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_342_p0 = bitcast_ln325_2_fu_564_p1;
        end else begin
            grp_fu_342_p0 = 'bx;
        end
    end else begin
        grp_fu_342_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_342_p1 = mul_i_7_reg_927;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_342_p1 = mul_i_5_reg_907;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_342_p1 = mul_i_3_reg_887;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_342_p1 = mul_i_1_reg_857;
        end else begin
            grp_fu_342_p1 = 'bx;
        end
    end else begin
        grp_fu_342_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_346_p0 = update_temp_mat_135_load_reg_816;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_346_p0 = update_temp_mat_133_load_reg_796;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_346_p0 = update_temp_mat_131_load_reg_776;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_346_p0 = update_temp_mat_129_q0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_346_p0 = tmp_s_fu_394_p23;
        end else begin
            grp_fu_346_p0 = 'bx;
        end
    end else begin
        grp_fu_346_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_352_p0 = update_temp_mat_136_load_reg_826;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_352_p0 = update_temp_mat_134_load_reg_806;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_352_p0 = update_temp_mat_132_load_reg_786;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_352_p0 = update_temp_mat_130_q0;
        end else begin
            grp_fu_352_p0 = 'bx;
        end
    end else begin
        grp_fu_352_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln323_reg_697_pp0_iter1_reg == 1'd1))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_129_ce0_local = 1'b1;
    end else begin
        update_temp_mat_129_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_130_ce0_local = 1'b1;
    end else begin
        update_temp_mat_130_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_131_ce0_local = 1'b1;
    end else begin
        update_temp_mat_131_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_132_ce0_local = 1'b1;
    end else begin
        update_temp_mat_132_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_133_ce0_local = 1'b1;
    end else begin
        update_temp_mat_133_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_134_ce0_local = 1'b1;
    end else begin
        update_temp_mat_134_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_135_ce0_local = 1'b1;
    end else begin
        update_temp_mat_135_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        update_temp_mat_136_ce0_local = 1'b1;
    end else begin
        update_temp_mat_136_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        weights_l3_address0_local = weights_l3_addr_reg_701_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_l3_address0_local = zext_ln323_fu_381_p1;
    end else begin
        weights_l3_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        weights_l3_ce0_local = 1'b1;
    end else begin
        weights_l3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        weights_l3_we0_local = 1'b1;
    end else begin
        weights_l3_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln323_fu_517_p2 = (i_reg_691 + 4'd1);

assign and_ln327_fu_610_p2 = (xor_ln327_fu_605_p2 & p_load_reg_831);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign ap_ready = ap_ready_sig;

assign bitcast_ln325_10_fu_580_p1 = trunc_ln325_5_reg_801_pp0_iter1_reg;

assign bitcast_ln325_11_fu_642_p1 = sub_i_5_reg_962;

assign bitcast_ln325_12_fu_584_p1 = trunc_ln325_6_reg_811_pp0_iter1_reg;

assign bitcast_ln325_13_fu_645_p1 = sub_i_6_reg_967;

assign bitcast_ln325_14_fu_588_p1 = trunc_ln325_7_reg_821_pp0_iter1_reg;

assign bitcast_ln325_15_fu_648_p1 = sub_i_7_reg_972;

assign bitcast_ln325_1_fu_626_p1 = reg_358;

assign bitcast_ln325_2_fu_564_p1 = trunc_ln325_1_reg_761;

assign bitcast_ln325_3_fu_630_p1 = sub_i_1_reg_942;

assign bitcast_ln325_4_fu_568_p1 = trunc_ln325_2_reg_771_pp0_iter1_reg;

assign bitcast_ln325_5_fu_633_p1 = sub_i_2_reg_947;

assign bitcast_ln325_6_fu_572_p1 = trunc_ln325_3_reg_781_pp0_iter1_reg;

assign bitcast_ln325_7_fu_636_p1 = sub_i_3_reg_952;

assign bitcast_ln325_8_fu_576_p1 = trunc_ln325_4_reg_791_pp0_iter1_reg;

assign bitcast_ln325_9_fu_639_p1 = sub_i_4_reg_957;

assign bitcast_ln325_fu_560_p1 = trunc_ln325_reg_751;

assign bitcast_ln327_1_fu_592_p1 = reg_358;

assign bitcast_ln327_fu_551_p1 = trunc_ln327_reg_842;

assign grp_fu_8485_p_ce = 1'b1;

assign grp_fu_8485_p_din0 = grp_fu_338_p0;

assign grp_fu_8485_p_din1 = grp_fu_338_p1;

assign grp_fu_8485_p_opcode = 2'd1;

assign grp_fu_8493_p_ce = 1'b1;

assign grp_fu_8493_p_din0 = grp_fu_342_p0;

assign grp_fu_8493_p_din1 = grp_fu_342_p1;

assign grp_fu_8493_p_opcode = 2'd1;

assign grp_fu_8581_p_ce = 1'b1;

assign grp_fu_8581_p_din0 = grp_fu_346_p0;

assign grp_fu_8581_p_din1 = 64'd4562254508917369340;

assign grp_fu_8585_p_ce = 1'b1;

assign grp_fu_8585_p_din0 = grp_fu_352_p0;

assign grp_fu_8585_p_din1 = 64'd4562254508917369340;

assign icmp_ln323_fu_375_p2 = ((ap_sig_allocacmp_i == 4'd10) ? 1'b1 : 1'b0);

assign lshr_ln327_fu_536_p2 = ap_sig_allocacmp_p_load >> zext_ln327_fu_532_p1;

assign or_ln325_6_fu_651_p9 = {{{{{{{{bitcast_ln325_15_fu_648_p1}, {bitcast_ln325_13_fu_645_p1}}, {bitcast_ln325_11_fu_642_p1}}, {bitcast_ln325_9_fu_639_p1}}, {bitcast_ln325_7_fu_636_p1}}, {bitcast_ln325_5_fu_633_p1}}, {bitcast_ln325_3_fu_630_p1}}, {bitcast_ln325_1_fu_626_p1}};

assign or_ln327_fu_615_p2 = (shl_ln327_1_fu_600_p2 | and_ln327_fu_610_p2);

assign p_out = empty_fu_144;

assign shl_ln327_1_fu_600_p2 = zext_ln327_1_fu_596_p1 << zext_ln327_reg_836;

assign shl_ln327_fu_555_p2 = 640'd18446744073709551615 << zext_ln327_reg_836;

assign shl_ln56_1_fu_525_p3 = {{i_reg_691}, {6'd0}};

assign tmp_s_fu_394_p21 = 'bx;

assign trunc_ln325_fu_443_p1 = weights_l3_q0[63:0];

assign trunc_ln327_fu_542_p1 = lshr_ln327_fu_536_p2[63:0];

assign update_temp_mat_129_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_129_ce0 = update_temp_mat_129_ce0_local;

assign update_temp_mat_130_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_130_ce0 = update_temp_mat_130_ce0_local;

assign update_temp_mat_131_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_131_ce0 = update_temp_mat_131_ce0_local;

assign update_temp_mat_132_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_132_ce0 = update_temp_mat_132_ce0_local;

assign update_temp_mat_133_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_133_ce0 = update_temp_mat_133_ce0_local;

assign update_temp_mat_134_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_134_ce0 = update_temp_mat_134_ce0_local;

assign update_temp_mat_135_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_135_ce0 = update_temp_mat_135_ce0_local;

assign update_temp_mat_136_address0 = zext_ln323_fu_381_p1;

assign update_temp_mat_136_ce0 = update_temp_mat_136_ce0_local;

assign weights_l3_address0 = weights_l3_address0_local;

assign weights_l3_ce0 = weights_l3_ce0_local;

assign weights_l3_d0 = or_ln325_6_fu_651_p9;

assign weights_l3_we0 = weights_l3_we0_local;

assign xor_ln327_fu_605_p2 = (shl_ln327_reg_867 ^ 640'd4562440617622195218641171605700291324893228507248559930579192517899275167208677386505912811317371399778642309573594407310688704721375437998252661319722214188251994674360264950082874192246603775);

assign zext_ln323_fu_381_p1 = ap_sig_allocacmp_i;

assign zext_ln327_1_fu_596_p1 = bitcast_ln327_1_fu_592_p1;

assign zext_ln327_fu_532_p1 = shl_ln56_1_fu_525_p3;

always @ (posedge ap_clk) begin
    zext_ln327_reg_836[5:0] <= 6'b000000;
    zext_ln327_reg_836[639:10] <= 630'b
end

endmodule //accelerator_accelerator_Pipeline_VITIS_LOOP_323_1
